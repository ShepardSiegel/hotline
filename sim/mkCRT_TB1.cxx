/*
 * Generated by Bluespec Compiler, version 2013.01.beta5 (build 30325, 2013-01-23)
 * 
 * On Thu Feb  7 14:30:05 EST 2013
 * 
 */
#include "bluesim_primitives.h"
#include "mkCRT_TB1.h"


/* String declarations */
static std::string const __str_literal_1("[%0d]: %m: Consumed %0d Byte with value %0x in cycle:%0d",
					 56u);
static std::string const __str_literal_2("[%0d]: %m: Terminate rule fired in cycle:%0d", 44u);


/* Constructor */
MOD_mkCRT_TB1::MOD_mkCRT_TB1(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_a4lm_rdAddrRdy_w(simHdl, "a4lm_rdAddrRdy_w", this, 1u, (tUInt8)0u),
    INST_a4lm_rdData_w(simHdl, "a4lm_rdData_w", this, 32u, (tUInt8)0u),
    INST_a4lm_rdRespVal_w(simHdl, "a4lm_rdRespVal_w", this, 1u, (tUInt8)0u),
    INST_a4lm_rdResp_w(simHdl, "a4lm_rdResp_w", this, 2u, (tUInt8)0u),
    INST_a4lm_wrAddrRdy_w(simHdl, "a4lm_wrAddrRdy_w", this, 1u, (tUInt8)0u),
    INST_a4lm_wrDataRdy_w(simHdl, "a4lm_wrDataRdy_w", this, 1u, (tUInt8)0u),
    INST_a4lm_wrRespVal_w(simHdl, "a4lm_wrRespVal_w", this, 1u, (tUInt8)0u),
    INST_a4lm_wrResp_w(simHdl, "a4lm_wrResp_w", this, 2u, (tUInt8)0u),
    INST_a4ls(simHdl, "a4ls", this, (tUInt8)1u),
    INST_consumeCnt(simHdl, "consumeCnt", this, 16u, 0u, (tUInt8)0u),
    INST_crt2axi(simHdl, "crt2axi", this),
    INST_cycleCount(simHdl, "cycleCount", this, 16u, 0u, (tUInt8)0u),
    INST_gpDA(simHdl, "gpDA", this, 48u),
    INST_gpL2Hdr(simHdl, "gpL2Hdr", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_gpPDU(simHdl, "gpPDU", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_gpPtr(simHdl, "gpPtr", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_gpSA(simHdl, "gpSA", this, 48u),
    INST_gqPtr(simHdl, "gqPtr", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_l2ConsumeF(simHdl, "l2ConsumeF", this, 10u, 2u, 1u, 0u),
    INST_l2GenF(simHdl, "l2GenF", this, 10u, 2u, 1u, 0u),
    INST_l2P(simHdl, "l2P", this),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h9676(12297829382473034410llu),
    DEF_v__h8360(12297829382473034410llu)
{
  symbol_count = 54u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkCRT_TB1::init_symbols_0()
{
  init_symbol(&symbols[0u], "a4lm_rdAddrRdy_w", SYM_MODULE, &INST_a4lm_rdAddrRdy_w);
  init_symbol(&symbols[1u], "a4lm_rdData_w", SYM_MODULE, &INST_a4lm_rdData_w);
  init_symbol(&symbols[2u], "a4lm_rdResp_w", SYM_MODULE, &INST_a4lm_rdResp_w);
  init_symbol(&symbols[3u], "a4lm_rdRespVal_w", SYM_MODULE, &INST_a4lm_rdRespVal_w);
  init_symbol(&symbols[4u], "a4lm_wrAddrRdy_w", SYM_MODULE, &INST_a4lm_wrAddrRdy_w);
  init_symbol(&symbols[5u], "a4lm_wrDataRdy_w", SYM_MODULE, &INST_a4lm_wrDataRdy_w);
  init_symbol(&symbols[6u], "a4lm_wrResp_w", SYM_MODULE, &INST_a4lm_wrResp_w);
  init_symbol(&symbols[7u], "a4lm_wrRespVal_w", SYM_MODULE, &INST_a4lm_wrRespVal_w);
  init_symbol(&symbols[8u], "a4ls", SYM_MODULE, &INST_a4ls);
  init_symbol(&symbols[9u], "b__h7383", SYM_DEF, &DEF_b__h7383, 4u);
  init_symbol(&symbols[10u], "b__h8457", SYM_DEF, &DEF_b__h8457, 16u);
  init_symbol(&symbols[11u],
	      "CAN_FIRE_RL_a4lm_doAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4lm_doAlways,
	      1u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_RL_advance_cycleCount",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_advance_cycleCount,
	      1u);
  init_symbol(&symbols[13u], "CAN_FIRE_RL_chomp_l2", SYM_DEF, &DEF_CAN_FIRE_RL_chomp_l2, 1u);
  init_symbol(&symbols[14u], "CAN_FIRE_RL_doAlways", SYM_DEF, &DEF_CAN_FIRE_RL_doAlways, 1u);
  init_symbol(&symbols[15u],
	      "CAN_FIRE_RL_l2_gen_header",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_l2_gen_header,
	      1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_RL_l2_gen_payload",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_l2_gen_payload,
	      1u);
  init_symbol(&symbols[17u],
	      "CAN_FIRE_RL_mkConnectionGetPut",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut,
	      1u);
  init_symbol(&symbols[18u],
	      "CAN_FIRE_RL_mkConnectionGetPut_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_1,
	      1u);
  init_symbol(&symbols[19u],
	      "CAN_FIRE_RL_mkConnectionGetPut_2",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_2,
	      1u);
  init_symbol(&symbols[20u], "CAN_FIRE_RL_terminate", SYM_DEF, &DEF_CAN_FIRE_RL_terminate, 1u);
  init_symbol(&symbols[21u], "consumeCnt", SYM_MODULE, &INST_consumeCnt);
  init_symbol(&symbols[22u], "crt2axi", SYM_MODULE, &INST_crt2axi);
  init_symbol(&symbols[23u], "cycleCount", SYM_MODULE, &INST_cycleCount);
  init_symbol(&symbols[24u], "gpDA", SYM_MODULE, &INST_gpDA);
  init_symbol(&symbols[25u], "gpL2Hdr", SYM_MODULE, &INST_gpL2Hdr);
  init_symbol(&symbols[26u], "gpPDU", SYM_MODULE, &INST_gpPDU);
  init_symbol(&symbols[27u], "gpPtr", SYM_MODULE, &INST_gpPtr);
  init_symbol(&symbols[28u], "gpPtr__h1987", SYM_DEF, &DEF_gpPtr__h1987, 4u);
  init_symbol(&symbols[29u], "gpSA", SYM_MODULE, &INST_gpSA);
  init_symbol(&symbols[30u], "gqPtr", SYM_MODULE, &INST_gqPtr);
  init_symbol(&symbols[31u], "l2ConsumeF", SYM_MODULE, &INST_l2ConsumeF);
  init_symbol(&symbols[32u], "l2GenF", SYM_MODULE, &INST_l2GenF);
  init_symbol(&symbols[33u], "l2P", SYM_MODULE, &INST_l2P);
  init_symbol(&symbols[34u], "RL_a4lm_doAlways", SYM_RULE);
  init_symbol(&symbols[35u], "RL_advance_cycleCount", SYM_RULE);
  init_symbol(&symbols[36u], "RL_chomp_l2", SYM_RULE);
  init_symbol(&symbols[37u], "RL_doAlways", SYM_RULE);
  init_symbol(&symbols[38u], "RL_l2_gen_header", SYM_RULE);
  init_symbol(&symbols[39u], "RL_l2_gen_payload", SYM_RULE);
  init_symbol(&symbols[40u], "RL_mkConnectionGetPut", SYM_RULE);
  init_symbol(&symbols[41u], "RL_mkConnectionGetPut_1", SYM_RULE);
  init_symbol(&symbols[42u], "RL_mkConnectionGetPut_2", SYM_RULE);
  init_symbol(&symbols[43u], "RL_terminate", SYM_RULE);
  init_symbol(&symbols[44u],
	      "WILL_FIRE_RL_a4lm_doAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4lm_doAlways,
	      1u);
  init_symbol(&symbols[45u],
	      "WILL_FIRE_RL_advance_cycleCount",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_advance_cycleCount,
	      1u);
  init_symbol(&symbols[46u], "WILL_FIRE_RL_chomp_l2", SYM_DEF, &DEF_WILL_FIRE_RL_chomp_l2, 1u);
  init_symbol(&symbols[47u], "WILL_FIRE_RL_doAlways", SYM_DEF, &DEF_WILL_FIRE_RL_doAlways, 1u);
  init_symbol(&symbols[48u],
	      "WILL_FIRE_RL_l2_gen_header",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_l2_gen_header,
	      1u);
  init_symbol(&symbols[49u],
	      "WILL_FIRE_RL_l2_gen_payload",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_l2_gen_payload,
	      1u);
  init_symbol(&symbols[50u],
	      "WILL_FIRE_RL_mkConnectionGetPut",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut,
	      1u);
  init_symbol(&symbols[51u],
	      "WILL_FIRE_RL_mkConnectionGetPut_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_1,
	      1u);
  init_symbol(&symbols[52u],
	      "WILL_FIRE_RL_mkConnectionGetPut_2",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_2,
	      1u);
  init_symbol(&symbols[53u], "WILL_FIRE_RL_terminate", SYM_DEF, &DEF_WILL_FIRE_RL_terminate, 1u);
}


/* Rule actions */

void MOD_mkCRT_TB1::RL_a4lm_doAlways()
{
  tUInt64 DEF_IF_a4lm_rdResp_w_whas__9_THEN_a4lm_rdResp_w_wg_ETC___d25;
  tUInt8 DEF_a4lm_wrDataRdy_w_whas_AND_a4lm_wrDataRdy_w_wget___d6;
  tUInt8 DEF_a4lm_wrAddrRdy_w_whas_AND_a4lm_wrAddrRdy_w_wget___d3;
  tUInt8 DEF_a4lm_wrRespVal_w_whas_AND_a4lm_wrRespVal_w_wget___d9;
  tUInt8 DEF_a4lm_rdAddrRdy_w_whas__0_AND_a4lm_rdAddrRdy_w__ETC___d12;
  tUInt8 DEF_a4lm_rdRespVal_w_whas__3_AND_a4lm_rdRespVal_w__ETC___d15;
  tUInt8 DEF_IF_a4lm_wrResp_w_whas__6_THEN_a4lm_wrResp_w_wg_ETC___d18;
  tUInt32 DEF_value_data__h1126;
  tUInt32 DEF_x_wget__h732;
  DEF_x_wget__h732 = INST_a4lm_rdData_w.METH_wget();
  DEF_value_data__h1126 = INST_a4lm_rdData_w.METH_whas() ? DEF_x_wget__h732 : 0u;
  DEF_IF_a4lm_wrResp_w_whas__6_THEN_a4lm_wrResp_w_wg_ETC___d18 = INST_a4lm_wrResp_w.METH_whas() ? INST_a4lm_wrResp_w.METH_wget() : (tUInt8)0u;
  DEF_a4lm_rdRespVal_w_whas__3_AND_a4lm_rdRespVal_w__ETC___d15 = INST_a4lm_rdRespVal_w.METH_whas() && INST_a4lm_rdRespVal_w.METH_wget();
  DEF_a4lm_rdAddrRdy_w_whas__0_AND_a4lm_rdAddrRdy_w__ETC___d12 = INST_a4lm_rdAddrRdy_w.METH_whas() && INST_a4lm_rdAddrRdy_w.METH_wget();
  DEF_a4lm_wrRespVal_w_whas_AND_a4lm_wrRespVal_w_wget___d9 = INST_a4lm_wrRespVal_w.METH_whas() && INST_a4lm_wrRespVal_w.METH_wget();
  DEF_a4lm_wrAddrRdy_w_whas_AND_a4lm_wrAddrRdy_w_wget___d3 = INST_a4lm_wrAddrRdy_w.METH_whas() && INST_a4lm_wrAddrRdy_w.METH_wget();
  DEF_a4lm_wrDataRdy_w_whas_AND_a4lm_wrDataRdy_w_wget___d6 = INST_a4lm_wrDataRdy_w.METH_whas() && INST_a4lm_wrDataRdy_w.METH_wget();
  DEF_IF_a4lm_rdResp_w_whas__9_THEN_a4lm_rdResp_w_wg_ETC___d25 = 17179869183llu & ((((tUInt64)(INST_a4lm_rdResp_w.METH_whas() ? INST_a4lm_rdResp_w.METH_wget() : (tUInt8)0u)) << 32u) | (tUInt64)(DEF_value_data__h1126));
  INST_crt2axi.METH_axiM0_wrAddr_ready(DEF_a4lm_wrAddrRdy_w_whas_AND_a4lm_wrAddrRdy_w_wget___d3);
  INST_crt2axi.METH_axiM0_wrData_ready(DEF_a4lm_wrDataRdy_w_whas_AND_a4lm_wrDataRdy_w_wget___d6);
  INST_crt2axi.METH_axiM0_wrResp_valid(DEF_a4lm_wrRespVal_w_whas_AND_a4lm_wrRespVal_w_wget___d9);
  INST_crt2axi.METH_axiM0_rdAddr_ready(DEF_a4lm_rdAddrRdy_w_whas__0_AND_a4lm_rdAddrRdy_w__ETC___d12);
  INST_crt2axi.METH_axiM0_rdResp_valid(DEF_a4lm_rdRespVal_w_whas__3_AND_a4lm_rdRespVal_w__ETC___d15);
  INST_crt2axi.METH_axiM0_wrResp_data(DEF_IF_a4lm_wrResp_w_whas__6_THEN_a4lm_wrResp_w_wg_ETC___d18);
  INST_crt2axi.METH_axiM0_rdResp_data(DEF_IF_a4lm_rdResp_w_whas__9_THEN_a4lm_rdResp_w_wg_ETC___d25);
}

void MOD_mkCRT_TB1::RL_l2_gen_header()
{
  tUInt8 DEF_gpPtr_6_PLUS_1___d68;
  tUInt8 DEF_NOT_gpPtr_6_EQ_0_7_3_AND_gpPtr_6_EQ_1_2_OR_gpP_ETC___d97;
  tUInt8 DEF_gpPtr_6_EQ_1___d32;
  tUInt8 DEF_gpPtr_6_EQ_2___d33;
  tUInt8 DEF_gpPtr_6_EQ_3___d35;
  tUInt8 DEF_gpPtr_6_EQ_4___d37;
  tUInt8 DEF_gpPtr_6_EQ_5___d39;
  tUInt8 DEF_gpPtr_6_EQ_6___d41;
  tUInt32 DEF__0_CONCAT_gpDA_0_BITS_47_TO_40_2___d98;
  tUInt32 DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102;
  tUInt32 DEF__0_CONCAT_gpSA_8_BITS_47_TO_40_0___d99;
  tUInt64 DEF_IF_gpPtr_6_EQ_0_7_THEN_43839021184_ELSE_gpDA_0_ETC___d74;
  tUInt64 DEF_IF_gpPtr_6_EQ_0_7_THEN_176157985423013_ELSE_gp_ETC___d92;
  tUInt8 DEF_gpSA_BITS_47_TO_40___h3980;
  tUInt8 DEF_gpDA_BITS_47_TO_40___h3628;
  tUInt64 DEF_gpDA__h6143;
  tUInt64 DEF_gpSA__h7284;
  tUInt8 DEF_gpPtr_6_EQ_0_7_OR_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_ETC___d69;
  tUInt8 DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42;
  tUInt8 DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53;
  tUInt8 DEF_gpPtr_6_EQ_0_7_OR_NOT_gpPtr_6_EQ_1_2_5_AND_NOT_ETC___d87;
  DEF_gpSA__h7284 = INST_gpSA.METH_read();
  DEF_gpDA__h6143 = INST_gpDA.METH_read();
  DEF_gpPtr__h1987 = INST_gpPtr.METH_read();
  DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53 = ((((DEF_gpPtr__h1987 == (tUInt8)7u || DEF_gpPtr__h1987 == (tUInt8)8u) || DEF_gpPtr__h1987 == (tUInt8)9u) || DEF_gpPtr__h1987 == (tUInt8)10u) || DEF_gpPtr__h1987 == (tUInt8)11u) || DEF_gpPtr__h1987 == (tUInt8)12u;
  DEF_gpDA_BITS_47_TO_40___h3628 = (tUInt8)(DEF_gpDA__h6143 >> 40u);
  DEF_gpSA_BITS_47_TO_40___h3980 = (tUInt8)(DEF_gpSA__h7284 >> 40u);
  DEF_gpPtr_6_EQ_0___d27 = DEF_gpPtr__h1987 == (tUInt8)0u;
  DEF_IF_gpPtr_6_EQ_0_7_THEN_176157985423013_ELSE_gp_ETC___d92 = DEF_gpPtr_6_EQ_0___d27 ? 176157985423013llu : 281474976710655llu & ((((tUInt64)(1099511627775llu & DEF_gpSA__h7284)) << 8u) | (tUInt64)(DEF_gpSA_BITS_47_TO_40___h3980));
  DEF_IF_gpPtr_6_EQ_0_7_THEN_43839021184_ELSE_gpDA_0_ETC___d74 = DEF_gpPtr_6_EQ_0___d27 ? 43839021184llu : 281474976710655llu & ((((tUInt64)(1099511627775llu & DEF_gpDA__h6143)) << 8u) | (tUInt64)(DEF_gpDA_BITS_47_TO_40___h3628));
  DEF__0_CONCAT_gpSA_8_BITS_47_TO_40_0___d99 = 1023u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_gpSA_BITS_47_TO_40___h3980));
  DEF__0_CONCAT_gpDA_0_BITS_47_TO_40_2___d98 = 1023u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_gpDA_BITS_47_TO_40___h3628));
  switch (DEF_gpPtr__h1987) {
  case (tUInt8)1u:
  case (tUInt8)2u:
  case (tUInt8)3u:
  case (tUInt8)4u:
  case (tUInt8)5u:
  case (tUInt8)6u:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = DEF__0_CONCAT_gpDA_0_BITS_47_TO_40_2___d98;
    break;
  case (tUInt8)7u:
  case (tUInt8)8u:
  case (tUInt8)9u:
  case (tUInt8)10u:
  case (tUInt8)11u:
  case (tUInt8)12u:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = DEF__0_CONCAT_gpSA_8_BITS_47_TO_40_0___d99;
    break;
  case (tUInt8)13u:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = 240u;
    break;
  default:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = 82u;
  }
  DEF_gpPtr_6_EQ_13___d28 = DEF_gpPtr__h1987 == (tUInt8)13u;
  DEF_gpPtr_6_EQ_14___d55 = DEF_gpPtr__h1987 == (tUInt8)14u;
  DEF_gpPtr_6_EQ_6___d41 = DEF_gpPtr__h1987 == (tUInt8)6u;
  DEF_gpPtr_6_EQ_5___d39 = DEF_gpPtr__h1987 == (tUInt8)5u;
  DEF_gpPtr_6_EQ_4___d37 = DEF_gpPtr__h1987 == (tUInt8)4u;
  DEF_gpPtr_6_EQ_3___d35 = DEF_gpPtr__h1987 == (tUInt8)3u;
  DEF_gpPtr_6_EQ_2___d33 = DEF_gpPtr__h1987 == (tUInt8)2u;
  DEF_gpPtr_6_EQ_1___d32 = DEF_gpPtr__h1987 == (tUInt8)1u;
  DEF_gpPtr_6_EQ_0_7_OR_NOT_gpPtr_6_EQ_1_2_5_AND_NOT_ETC___d87 = DEF_gpPtr_6_EQ_0___d27 || ((((((!DEF_gpPtr_6_EQ_1___d32 && !DEF_gpPtr_6_EQ_2___d33) && !DEF_gpPtr_6_EQ_3___d35) && !DEF_gpPtr_6_EQ_4___d37) && !DEF_gpPtr_6_EQ_5___d39) && !DEF_gpPtr_6_EQ_6___d41) && DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53);
  DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42 = ((((DEF_gpPtr_6_EQ_1___d32 || DEF_gpPtr_6_EQ_2___d33) || DEF_gpPtr_6_EQ_3___d35) || DEF_gpPtr_6_EQ_4___d37) || DEF_gpPtr_6_EQ_5___d39) || DEF_gpPtr_6_EQ_6___d41;
  DEF_gpPtr_6_EQ_0_7_OR_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_ETC___d69 = DEF_gpPtr_6_EQ_0___d27 || DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42;
  DEF_NOT_gpPtr_6_EQ_0_7_3_AND_gpPtr_6_EQ_1_2_OR_gpP_ETC___d97 = !DEF_gpPtr_6_EQ_0___d27 && (DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42 || (DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53 || (DEF_gpPtr_6_EQ_13___d28 || DEF_gpPtr_6_EQ_14___d55)));
  DEF_gpPtr_6_PLUS_1___d68 = (tUInt8)15u & (DEF_gpPtr__h1987 + (tUInt8)1u);
  INST_gpPtr.METH_write(DEF_gpPtr_6_PLUS_1___d68);
  if (DEF_gpPtr_6_EQ_0_7_OR_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_ETC___d69)
    INST_gpDA.METH_write(DEF_IF_gpPtr_6_EQ_0_7_THEN_43839021184_ELSE_gpDA_0_ETC___d74);
  if (DEF_gpPtr_6_EQ_0_7_OR_NOT_gpPtr_6_EQ_1_2_5_AND_NOT_ETC___d87)
    INST_gpSA.METH_write(DEF_IF_gpPtr_6_EQ_0_7_THEN_176157985423013_ELSE_gp_ETC___d92);
  if (DEF_gpPtr_6_EQ_14___d55)
    INST_gpPDU.METH_write((tUInt8)1u);
  if (DEF_NOT_gpPtr_6_EQ_0_7_3_AND_gpPtr_6_EQ_1_2_OR_gpP_ETC___d97)
    INST_l2GenF.METH_enq(DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102);
}

void MOD_mkCRT_TB1::RL_l2_gen_payload()
{
  tUInt8 DEF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqPtr__ETC___d127;
  tUInt8 DEF_IF_gqPtr_03_EQ_15_24_THEN_gqPtr_03_ELSE_gqPtr__ETC___d126;
  tUInt32 DEF_IF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqP_ETC___d128;
  DEF_b__h7383 = INST_gqPtr.METH_read();
  switch (DEF_b__h7383) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
  case (tUInt8)3u:
  case (tUInt8)4u:
  case (tUInt8)5u:
  case (tUInt8)6u:
    DEF_IF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqP_ETC___d128 = 128u;
    break;
  default:
    DEF_IF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqP_ETC___d128 = 384u;
  }
  DEF_IF_gqPtr_03_EQ_15_24_THEN_gqPtr_03_ELSE_gqPtr__ETC___d126 = DEF_b__h7383 == (tUInt8)15u ? DEF_b__h7383 : (tUInt8)15u & (DEF_b__h7383 + (tUInt8)1u);
  DEF_gqPtr_03_EQ_7___d117 = DEF_b__h7383 == (tUInt8)7u;
  DEF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqPtr__ETC___d127 = (DEF_b__h7383 == (tUInt8)0u || (DEF_b__h7383 == (tUInt8)1u || (DEF_b__h7383 == (tUInt8)2u || (DEF_b__h7383 == (tUInt8)3u || (DEF_b__h7383 == (tUInt8)4u || (DEF_b__h7383 == (tUInt8)5u || DEF_b__h7383 == (tUInt8)6u)))))) || DEF_gqPtr_03_EQ_7___d117;
  INST_gqPtr.METH_write(DEF_IF_gqPtr_03_EQ_15_24_THEN_gqPtr_03_ELSE_gqPtr__ETC___d126);
  if (DEF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqPtr__ETC___d127)
    INST_l2GenF.METH_enq(DEF_IF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqP_ETC___d128);
}

void MOD_mkCRT_TB1::RL_mkConnectionGetPut()
{
  tUInt32 DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d143;
  tUInt8 DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d139;
  tUInt8 DEF_l2GenF_first__32_BITS_9_TO_8___d133;
  tUInt8 DEF_l2GenF_first__32_BITS_7_TO_0___d141;
  tUInt32 DEF_l2GenF_first____d132;
  DEF_l2GenF_first____d132 = INST_l2GenF.METH_first();
  DEF_l2GenF_first__32_BITS_7_TO_0___d141 = (tUInt8)((tUInt8)255u & DEF_l2GenF_first____d132);
  DEF_l2GenF_first__32_BITS_9_TO_8___d133 = (tUInt8)(DEF_l2GenF_first____d132 >> 8u);
  switch (DEF_l2GenF_first__32_BITS_9_TO_8___d133) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d139 = DEF_l2GenF_first__32_BITS_9_TO_8___d133;
    break;
  default:
    DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d139 = (tUInt8)3u;
  }
  DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d143 = 1023u & ((((tUInt32)(DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d139)) << 8u) | (tUInt32)(DEF_l2GenF_first__32_BITS_9_TO_8___d133 == (tUInt8)0u || DEF_l2GenF_first__32_BITS_9_TO_8___d133 == (tUInt8)1u ? DEF_l2GenF_first__32_BITS_7_TO_0___d141 : DEF_l2GenF_first__32_BITS_7_TO_0___d141));
  INST_l2GenF.METH_deq();
  INST_l2P.METH_server_request_put(DEF_IF_l2GenF_first__32_BITS_9_TO_8_33_EQ_0_34_OR__ETC___d143);
}

void MOD_mkCRT_TB1::RL_mkConnectionGetPut_1()
{
  tUInt32 DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d158;
  tUInt8 DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d154;
  tUInt8 DEF_l2P_client_request_get_47_BITS_9_TO_8___d148;
  tUInt8 DEF_l2P_client_request_get_47_BITS_7_TO_0___d156;
  tUInt32 DEF_l2P_client_request_get___d147;
  tUInt32 DEF_AVMeth_l2P_client_request_get;
  DEF_AVMeth_l2P_client_request_get = INST_l2P.METH_client_request_get();
  DEF_l2P_client_request_get___d147 = DEF_AVMeth_l2P_client_request_get;
  DEF_l2P_client_request_get_47_BITS_7_TO_0___d156 = (tUInt8)((tUInt8)255u & DEF_l2P_client_request_get___d147);
  DEF_l2P_client_request_get_47_BITS_9_TO_8___d148 = (tUInt8)(DEF_l2P_client_request_get___d147 >> 8u);
  switch (DEF_l2P_client_request_get_47_BITS_9_TO_8___d148) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d154 = DEF_l2P_client_request_get_47_BITS_9_TO_8___d148;
    break;
  default:
    DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d154 = (tUInt8)3u;
  }
  DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d158 = 1023u & ((((tUInt32)(DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d154)) << 8u) | (tUInt32)(DEF_l2P_client_request_get_47_BITS_9_TO_8___d148 == (tUInt8)0u || DEF_l2P_client_request_get_47_BITS_9_TO_8___d148 == (tUInt8)1u ? DEF_l2P_client_request_get_47_BITS_7_TO_0___d156 : DEF_l2P_client_request_get_47_BITS_7_TO_0___d156));
  INST_l2P.METH_client_response_put(DEF_IF_l2P_client_request_get_47_BITS_9_TO_8_48_EQ_ETC___d158);
}

void MOD_mkCRT_TB1::RL_mkConnectionGetPut_2()
{
  tUInt32 DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d173;
  tUInt8 DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d169;
  tUInt8 DEF_l2P_server_response_get_62_BITS_9_TO_8___d163;
  tUInt8 DEF_l2P_server_response_get_62_BITS_7_TO_0___d171;
  tUInt32 DEF_l2P_server_response_get___d162;
  tUInt32 DEF_AVMeth_l2P_server_response_get;
  DEF_AVMeth_l2P_server_response_get = INST_l2P.METH_server_response_get();
  DEF_l2P_server_response_get___d162 = DEF_AVMeth_l2P_server_response_get;
  DEF_l2P_server_response_get_62_BITS_7_TO_0___d171 = (tUInt8)((tUInt8)255u & DEF_l2P_server_response_get___d162);
  DEF_l2P_server_response_get_62_BITS_9_TO_8___d163 = (tUInt8)(DEF_l2P_server_response_get___d162 >> 8u);
  switch (DEF_l2P_server_response_get_62_BITS_9_TO_8___d163) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d169 = DEF_l2P_server_response_get_62_BITS_9_TO_8___d163;
    break;
  default:
    DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d169 = (tUInt8)3u;
  }
  DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d173 = 1023u & ((((tUInt32)(DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d169)) << 8u) | (tUInt32)(DEF_l2P_server_response_get_62_BITS_9_TO_8___d163 == (tUInt8)0u || DEF_l2P_server_response_get_62_BITS_9_TO_8___d163 == (tUInt8)1u ? DEF_l2P_server_response_get_62_BITS_7_TO_0___d171 : DEF_l2P_server_response_get_62_BITS_7_TO_0___d171));
  INST_l2ConsumeF.METH_enq(DEF_IF_l2P_server_response_get_62_BITS_9_TO_8_63_E_ETC___d173);
}

void MOD_mkCRT_TB1::RL_chomp_l2()
{
  tUInt32 DEF_consumeCnt_75_PLUS_1___d176;
  tUInt8 DEF_IF_l2ConsumeF_first__79_BITS_9_TO_8_80_EQ_0_81_ETC___d185;
  tUInt8 DEF_l2ConsumeF_first__79_BITS_9_TO_8___d180;
  tUInt8 DEF_l2ConsumeF_first__79_BITS_7_TO_0___d184;
  tUInt32 DEF_l2ConsumeF_first____d179;
  tUInt32 DEF_b__h8351;
  tUInt32 DEF_unsigned_consumeCnt_75___d178;
  DEF_b__h8351 = INST_consumeCnt.METH_read();
  DEF_unsigned_consumeCnt_75___d178 = DEF_b__h8351;
  DEF_b__h8457 = INST_cycleCount.METH_read();
  DEF_unsigned_cycleCount_86___d187 = DEF_b__h8457;
  DEF_l2ConsumeF_first____d179 = INST_l2ConsumeF.METH_first();
  DEF_l2ConsumeF_first__79_BITS_7_TO_0___d184 = (tUInt8)((tUInt8)255u & DEF_l2ConsumeF_first____d179);
  DEF_l2ConsumeF_first__79_BITS_9_TO_8___d180 = (tUInt8)(DEF_l2ConsumeF_first____d179 >> 8u);
  DEF_IF_l2ConsumeF_first__79_BITS_9_TO_8_80_EQ_0_81_ETC___d185 = DEF_l2ConsumeF_first__79_BITS_9_TO_8___d180 == (tUInt8)0u || DEF_l2ConsumeF_first__79_BITS_9_TO_8___d180 == (tUInt8)1u ? DEF_l2ConsumeF_first__79_BITS_7_TO_0___d184 : DEF_l2ConsumeF_first__79_BITS_7_TO_0___d184;
  DEF_consumeCnt_75_PLUS_1___d176 = 65535u & (DEF_b__h8351 + 1u);
  INST_l2ConsumeF.METH_deq();
  INST_consumeCnt.METH_write(DEF_consumeCnt_75_PLUS_1___d176);
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h8360 = dollar_time(sim_hdl);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl,
		   this,
		   "s,64,16,8,16",
		   &__str_literal_1,
		   DEF_v__h8360,
		   DEF_unsigned_consumeCnt_75___d178,
		   DEF_IF_l2ConsumeF_first__79_BITS_9_TO_8_80_EQ_0_81_ETC___d185,
		   DEF_unsigned_cycleCount_86___d187);
}

void MOD_mkCRT_TB1::RL_doAlways()
{
  tUInt8 DEF_ARPROT__h9371;
  tUInt8 DEF_AWPROT__h8718;
  tUInt8 DEF_WSTRB__h8960;
  tUInt32 DEF_ARADDR__h9327;
  tUInt32 DEF_AWADDR__h8674;
  tUInt32 DEF_WDATA__h8916;
  tUInt8 DEF_crt2axi_axiM0_rdResp_ready____d207;
  tUInt8 DEF_crt2axi_axiM0_rdAddr_valid____d201;
  tUInt8 DEF_crt2axi_axiM0_wrResp_ready____d199;
  tUInt8 DEF_crt2axi_axiM0_wrData_valid____d193;
  tUInt8 DEF_crt2axi_axiM0_wrAddr_valid____d188;
  tUInt8 DEF_a4ls_sAWREADY____d189;
  tUInt8 DEF_a4ls_sWREADY____d194;
  tUInt8 DEF_a4ls_sBVALID____d198;
  tUInt8 DEF_a4ls_sARREADY____d202;
  tUInt8 DEF_a4ls_sRVALID____d206;
  tUInt8 DEF_arg_wresp__h9141;
  tUInt8 DEF_arg_rresp__h9591;
  tUInt32 DEF_arg_rdata__h9567;
  tUInt64 DEF_crt2axi_axiM0_rdAddr_data____d203;
  tUInt64 DEF_crt2axi_axiM0_wrAddr_data____d190;
  tUInt64 DEF_crt2axi_axiM0_wrData_data____d195;
  DEF_crt2axi_axiM0_wrData_data____d195 = INST_crt2axi.METH_axiM0_wrData_data();
  DEF_crt2axi_axiM0_wrAddr_data____d190 = INST_crt2axi.METH_axiM0_wrAddr_data();
  DEF_crt2axi_axiM0_rdAddr_data____d203 = INST_crt2axi.METH_axiM0_rdAddr_data();
  DEF_arg_rdata__h9567 = INST_a4ls.METH_sRDATA();
  DEF_arg_wresp__h9141 = INST_a4ls.METH_sBRESP();
  DEF_arg_rresp__h9591 = INST_a4ls.METH_sRRESP();
  DEF_a4ls_sRVALID____d206 = INST_a4ls.METH_sRVALID();
  DEF_a4ls_sARREADY____d202 = INST_a4ls.METH_sARREADY();
  DEF_a4ls_sBVALID____d198 = INST_a4ls.METH_sBVALID();
  DEF_a4ls_sWREADY____d194 = INST_a4ls.METH_sWREADY();
  DEF_a4ls_sAWREADY____d189 = INST_a4ls.METH_sAWREADY();
  DEF_crt2axi_axiM0_wrAddr_valid____d188 = INST_crt2axi.METH_axiM0_wrAddr_valid();
  DEF_crt2axi_axiM0_wrResp_ready____d199 = INST_crt2axi.METH_axiM0_wrResp_ready();
  DEF_crt2axi_axiM0_wrData_valid____d193 = INST_crt2axi.METH_axiM0_wrData_valid();
  DEF_crt2axi_axiM0_rdAddr_valid____d201 = INST_crt2axi.METH_axiM0_rdAddr_valid();
  DEF_crt2axi_axiM0_rdResp_ready____d207 = INST_crt2axi.METH_axiM0_rdResp_ready();
  DEF_WDATA__h8916 = (tUInt32)(DEF_crt2axi_axiM0_wrData_data____d195);
  DEF_ARADDR__h9327 = (tUInt32)(DEF_crt2axi_axiM0_rdAddr_data____d203);
  DEF_AWADDR__h8674 = (tUInt32)(DEF_crt2axi_axiM0_wrAddr_data____d190);
  DEF_WSTRB__h8960 = (tUInt8)(DEF_crt2axi_axiM0_wrData_data____d195 >> 32u);
  DEF_AWPROT__h8718 = (tUInt8)(DEF_crt2axi_axiM0_wrAddr_data____d190 >> 32u);
  DEF_ARPROT__h9371 = (tUInt8)(DEF_crt2axi_axiM0_rdAddr_data____d203 >> 32u);
  if (DEF_crt2axi_axiM0_wrAddr_valid____d188)
    INST_a4ls.METH_mAWVALID();
  if (DEF_a4ls_sAWREADY____d189)
    INST_a4lm_wrAddrRdy_w.METH_wset((tUInt8)1u);
  INST_a4ls.METH_mAWADDR(DEF_AWADDR__h8674);
  INST_a4ls.METH_mAWPROT(DEF_AWPROT__h8718);
  if (DEF_crt2axi_axiM0_wrData_valid____d193)
    INST_a4ls.METH_mWVALID();
  if (DEF_a4ls_sWREADY____d194)
    INST_a4lm_wrDataRdy_w.METH_wset((tUInt8)1u);
  INST_a4ls.METH_mWDATA(DEF_WDATA__h8916);
  INST_a4ls.METH_mWSTRB(DEF_WSTRB__h8960);
  if (DEF_a4ls_sBVALID____d198)
    INST_a4lm_wrRespVal_w.METH_wset((tUInt8)1u);
  if (DEF_crt2axi_axiM0_wrResp_ready____d199)
    INST_a4ls.METH_mBREADY();
  if (DEF_crt2axi_axiM0_rdAddr_valid____d201)
    INST_a4ls.METH_mARVALID();
  INST_a4lm_wrResp_w.METH_wset(DEF_arg_wresp__h9141);
  if (DEF_a4ls_sARREADY____d202)
    INST_a4lm_rdAddrRdy_w.METH_wset((tUInt8)1u);
  INST_a4ls.METH_mARADDR(DEF_ARADDR__h9327);
  INST_a4ls.METH_mARPROT(DEF_ARPROT__h9371);
  if (DEF_a4ls_sRVALID____d206)
    INST_a4lm_rdRespVal_w.METH_wset((tUInt8)1u);
  if (DEF_crt2axi_axiM0_rdResp_ready____d207)
    INST_a4ls.METH_mRREADY();
  INST_a4lm_rdData_w.METH_wset(DEF_arg_rdata__h9567);
  INST_a4lm_rdResp_w.METH_wset(DEF_arg_rresp__h9591);
}

void MOD_mkCRT_TB1::RL_advance_cycleCount()
{
  tUInt32 DEF_cycleCount_86_PLUS_1___d210;
  DEF_b__h8457 = INST_cycleCount.METH_read();
  DEF_cycleCount_86_PLUS_1___d210 = 65535u & (DEF_b__h8457 + 1u);
  INST_cycleCount.METH_write(DEF_cycleCount_86_PLUS_1___d210);
}

void MOD_mkCRT_TB1::RL_terminate()
{
  DEF_b__h8457 = INST_cycleCount.METH_read();
  DEF_unsigned_cycleCount_86___d187 = DEF_b__h8457;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h9676 = dollar_time(sim_hdl);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl,
		   this,
		   "s,64,16",
		   &__str_literal_2,
		   DEF_v__h9676,
		   DEF_unsigned_cycleCount_86___d187);
    dollar_finish(sim_hdl, "32", 1u);
  }
}


/* Methods */


/* Reset routines */

void MOD_mkCRT_TB1::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_l2P.reset_RST_N(ARG_rst_in);
  INST_l2GenF.reset_RST(ARG_rst_in);
  INST_l2ConsumeF.reset_RST(ARG_rst_in);
  INST_gqPtr.reset_RST(ARG_rst_in);
  INST_gpPtr.reset_RST(ARG_rst_in);
  INST_gpPDU.reset_RST(ARG_rst_in);
  INST_gpL2Hdr.reset_RST(ARG_rst_in);
  INST_cycleCount.reset_RST(ARG_rst_in);
  INST_crt2axi.reset_RST_N(ARG_rst_in);
  INST_consumeCnt.reset_RST(ARG_rst_in);
  INST_a4ls.reset_ARESETN(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkCRT_TB1::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkCRT_TB1::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_a4lm_rdAddrRdy_w.dump_state(indent + 2u);
  INST_a4lm_rdData_w.dump_state(indent + 2u);
  INST_a4lm_rdRespVal_w.dump_state(indent + 2u);
  INST_a4lm_rdResp_w.dump_state(indent + 2u);
  INST_a4lm_wrAddrRdy_w.dump_state(indent + 2u);
  INST_a4lm_wrDataRdy_w.dump_state(indent + 2u);
  INST_a4lm_wrRespVal_w.dump_state(indent + 2u);
  INST_a4lm_wrResp_w.dump_state(indent + 2u);
  INST_a4ls.dump_state(indent + 2u);
  INST_consumeCnt.dump_state(indent + 2u);
  INST_crt2axi.dump_state(indent + 2u);
  INST_cycleCount.dump_state(indent + 2u);
  INST_gpDA.dump_state(indent + 2u);
  INST_gpL2Hdr.dump_state(indent + 2u);
  INST_gpPDU.dump_state(indent + 2u);
  INST_gpPtr.dump_state(indent + 2u);
  INST_gpSA.dump_state(indent + 2u);
  INST_gqPtr.dump_state(indent + 2u);
  INST_l2ConsumeF.dump_state(indent + 2u);
  INST_l2GenF.dump_state(indent + 2u);
  INST_l2P.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkCRT_TB1::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 49u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4lm_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_advance_cycleCount", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_chomp_l2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_l2_gen_header", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_l2_gen_payload", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_terminate", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4lm_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_advance_cycleCount", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_chomp_l2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_l2_gen_header", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_l2_gen_payload", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_terminate", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h7383", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h8457", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr_6_EQ_0___d27", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr_6_EQ_13___d28", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr_6_EQ_14___d55", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr__h1987", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gqPtr_03_EQ_7___d117", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "unsigned_cycleCount_86___d187", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h8360", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h9676", 64u);
  num = INST_a4lm_rdAddrRdy_w.dump_VCD_defs(num);
  num = INST_a4lm_rdData_w.dump_VCD_defs(num);
  num = INST_a4lm_rdRespVal_w.dump_VCD_defs(num);
  num = INST_a4lm_rdResp_w.dump_VCD_defs(num);
  num = INST_a4lm_wrAddrRdy_w.dump_VCD_defs(num);
  num = INST_a4lm_wrDataRdy_w.dump_VCD_defs(num);
  num = INST_a4lm_wrRespVal_w.dump_VCD_defs(num);
  num = INST_a4lm_wrResp_w.dump_VCD_defs(num);
  num = INST_consumeCnt.dump_VCD_defs(num);
  num = INST_cycleCount.dump_VCD_defs(num);
  num = INST_gpDA.dump_VCD_defs(num);
  num = INST_gpL2Hdr.dump_VCD_defs(num);
  num = INST_gpPDU.dump_VCD_defs(num);
  num = INST_gpPtr.dump_VCD_defs(num);
  num = INST_gpSA.dump_VCD_defs(num);
  num = INST_gqPtr.dump_VCD_defs(num);
  num = INST_l2ConsumeF.dump_VCD_defs(num);
  num = INST_l2GenF.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_a4ls.dump_VCD_defs(l);
    num = INST_crt2axi.dump_VCD_defs(l);
    num = INST_l2P.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkCRT_TB1::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCRT_TB1 &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkCRT_TB1::vcd_defs(tVCDDumpType dt, MOD_mkCRT_TB1 &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_a4lm_doAlways) != DEF_CAN_FIRE_RL_a4lm_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4lm_doAlways, 1u);
	backing.DEF_CAN_FIRE_RL_a4lm_doAlways = DEF_CAN_FIRE_RL_a4lm_doAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_advance_cycleCount) != DEF_CAN_FIRE_RL_advance_cycleCount)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_advance_cycleCount, 1u);
	backing.DEF_CAN_FIRE_RL_advance_cycleCount = DEF_CAN_FIRE_RL_advance_cycleCount;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_chomp_l2) != DEF_CAN_FIRE_RL_chomp_l2)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_chomp_l2, 1u);
	backing.DEF_CAN_FIRE_RL_chomp_l2 = DEF_CAN_FIRE_RL_chomp_l2;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_doAlways) != DEF_CAN_FIRE_RL_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_doAlways, 1u);
	backing.DEF_CAN_FIRE_RL_doAlways = DEF_CAN_FIRE_RL_doAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_l2_gen_header) != DEF_CAN_FIRE_RL_l2_gen_header)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_l2_gen_header, 1u);
	backing.DEF_CAN_FIRE_RL_l2_gen_header = DEF_CAN_FIRE_RL_l2_gen_header;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_l2_gen_payload) != DEF_CAN_FIRE_RL_l2_gen_payload)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_l2_gen_payload, 1u);
	backing.DEF_CAN_FIRE_RL_l2_gen_payload = DEF_CAN_FIRE_RL_l2_gen_payload;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut) != DEF_CAN_FIRE_RL_mkConnectionGetPut)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut = DEF_CAN_FIRE_RL_mkConnectionGetPut;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1) != DEF_CAN_FIRE_RL_mkConnectionGetPut_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_1, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2) != DEF_CAN_FIRE_RL_mkConnectionGetPut_2)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_2, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2 = DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_terminate) != DEF_CAN_FIRE_RL_terminate)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_terminate, 1u);
	backing.DEF_CAN_FIRE_RL_terminate = DEF_CAN_FIRE_RL_terminate;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4lm_doAlways) != DEF_WILL_FIRE_RL_a4lm_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4lm_doAlways, 1u);
	backing.DEF_WILL_FIRE_RL_a4lm_doAlways = DEF_WILL_FIRE_RL_a4lm_doAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_advance_cycleCount) != DEF_WILL_FIRE_RL_advance_cycleCount)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_advance_cycleCount, 1u);
	backing.DEF_WILL_FIRE_RL_advance_cycleCount = DEF_WILL_FIRE_RL_advance_cycleCount;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_chomp_l2) != DEF_WILL_FIRE_RL_chomp_l2)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_chomp_l2, 1u);
	backing.DEF_WILL_FIRE_RL_chomp_l2 = DEF_WILL_FIRE_RL_chomp_l2;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_doAlways) != DEF_WILL_FIRE_RL_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_doAlways, 1u);
	backing.DEF_WILL_FIRE_RL_doAlways = DEF_WILL_FIRE_RL_doAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_l2_gen_header) != DEF_WILL_FIRE_RL_l2_gen_header)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_l2_gen_header, 1u);
	backing.DEF_WILL_FIRE_RL_l2_gen_header = DEF_WILL_FIRE_RL_l2_gen_header;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_l2_gen_payload) != DEF_WILL_FIRE_RL_l2_gen_payload)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_l2_gen_payload, 1u);
	backing.DEF_WILL_FIRE_RL_l2_gen_payload = DEF_WILL_FIRE_RL_l2_gen_payload;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut) != DEF_WILL_FIRE_RL_mkConnectionGetPut)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_WILL_FIRE_RL_mkConnectionGetPut;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1) != DEF_WILL_FIRE_RL_mkConnectionGetPut_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_1, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2) != DEF_WILL_FIRE_RL_mkConnectionGetPut_2)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_2, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2 = DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_terminate) != DEF_WILL_FIRE_RL_terminate)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_terminate, 1u);
	backing.DEF_WILL_FIRE_RL_terminate = DEF_WILL_FIRE_RL_terminate;
      }
      ++num;
      if ((backing.DEF_b__h7383) != DEF_b__h7383)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h7383, 4u);
	backing.DEF_b__h7383 = DEF_b__h7383;
      }
      ++num;
      if ((backing.DEF_b__h8457) != DEF_b__h8457)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h8457, 16u);
	backing.DEF_b__h8457 = DEF_b__h8457;
      }
      ++num;
      if ((backing.DEF_gpPtr_6_EQ_0___d27) != DEF_gpPtr_6_EQ_0___d27)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr_6_EQ_0___d27, 1u);
	backing.DEF_gpPtr_6_EQ_0___d27 = DEF_gpPtr_6_EQ_0___d27;
      }
      ++num;
      if ((backing.DEF_gpPtr_6_EQ_13___d28) != DEF_gpPtr_6_EQ_13___d28)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr_6_EQ_13___d28, 1u);
	backing.DEF_gpPtr_6_EQ_13___d28 = DEF_gpPtr_6_EQ_13___d28;
      }
      ++num;
      if ((backing.DEF_gpPtr_6_EQ_14___d55) != DEF_gpPtr_6_EQ_14___d55)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr_6_EQ_14___d55, 1u);
	backing.DEF_gpPtr_6_EQ_14___d55 = DEF_gpPtr_6_EQ_14___d55;
      }
      ++num;
      if ((backing.DEF_gpPtr__h1987) != DEF_gpPtr__h1987)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr__h1987, 4u);
	backing.DEF_gpPtr__h1987 = DEF_gpPtr__h1987;
      }
      ++num;
      if ((backing.DEF_gqPtr_03_EQ_7___d117) != DEF_gqPtr_03_EQ_7___d117)
      {
	vcd_write_val(sim_hdl, num, DEF_gqPtr_03_EQ_7___d117, 1u);
	backing.DEF_gqPtr_03_EQ_7___d117 = DEF_gqPtr_03_EQ_7___d117;
      }
      ++num;
      if ((backing.DEF_unsigned_cycleCount_86___d187) != DEF_unsigned_cycleCount_86___d187)
      {
	vcd_write_val(sim_hdl, num, DEF_unsigned_cycleCount_86___d187, 16u);
	backing.DEF_unsigned_cycleCount_86___d187 = DEF_unsigned_cycleCount_86___d187;
      }
      ++num;
      if ((backing.DEF_v__h8360) != DEF_v__h8360)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h8360, 64u);
	backing.DEF_v__h8360 = DEF_v__h8360;
      }
      ++num;
      if ((backing.DEF_v__h9676) != DEF_v__h9676)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h9676, 64u);
	backing.DEF_v__h9676 = DEF_v__h9676;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4lm_doAlways, 1u);
      backing.DEF_CAN_FIRE_RL_a4lm_doAlways = DEF_CAN_FIRE_RL_a4lm_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_advance_cycleCount, 1u);
      backing.DEF_CAN_FIRE_RL_advance_cycleCount = DEF_CAN_FIRE_RL_advance_cycleCount;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_chomp_l2, 1u);
      backing.DEF_CAN_FIRE_RL_chomp_l2 = DEF_CAN_FIRE_RL_chomp_l2;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_doAlways, 1u);
      backing.DEF_CAN_FIRE_RL_doAlways = DEF_CAN_FIRE_RL_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_l2_gen_header, 1u);
      backing.DEF_CAN_FIRE_RL_l2_gen_header = DEF_CAN_FIRE_RL_l2_gen_header;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_l2_gen_payload, 1u);
      backing.DEF_CAN_FIRE_RL_l2_gen_payload = DEF_CAN_FIRE_RL_l2_gen_payload;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut = DEF_CAN_FIRE_RL_mkConnectionGetPut;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_1, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_2, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2 = DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_terminate, 1u);
      backing.DEF_CAN_FIRE_RL_terminate = DEF_CAN_FIRE_RL_terminate;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4lm_doAlways, 1u);
      backing.DEF_WILL_FIRE_RL_a4lm_doAlways = DEF_WILL_FIRE_RL_a4lm_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_advance_cycleCount, 1u);
      backing.DEF_WILL_FIRE_RL_advance_cycleCount = DEF_WILL_FIRE_RL_advance_cycleCount;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_chomp_l2, 1u);
      backing.DEF_WILL_FIRE_RL_chomp_l2 = DEF_WILL_FIRE_RL_chomp_l2;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_doAlways, 1u);
      backing.DEF_WILL_FIRE_RL_doAlways = DEF_WILL_FIRE_RL_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_l2_gen_header, 1u);
      backing.DEF_WILL_FIRE_RL_l2_gen_header = DEF_WILL_FIRE_RL_l2_gen_header;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_l2_gen_payload, 1u);
      backing.DEF_WILL_FIRE_RL_l2_gen_payload = DEF_WILL_FIRE_RL_l2_gen_payload;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_WILL_FIRE_RL_mkConnectionGetPut;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_1, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_2, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2 = DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_terminate, 1u);
      backing.DEF_WILL_FIRE_RL_terminate = DEF_WILL_FIRE_RL_terminate;
      vcd_write_val(sim_hdl, num++, DEF_b__h7383, 4u);
      backing.DEF_b__h7383 = DEF_b__h7383;
      vcd_write_val(sim_hdl, num++, DEF_b__h8457, 16u);
      backing.DEF_b__h8457 = DEF_b__h8457;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr_6_EQ_0___d27, 1u);
      backing.DEF_gpPtr_6_EQ_0___d27 = DEF_gpPtr_6_EQ_0___d27;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr_6_EQ_13___d28, 1u);
      backing.DEF_gpPtr_6_EQ_13___d28 = DEF_gpPtr_6_EQ_13___d28;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr_6_EQ_14___d55, 1u);
      backing.DEF_gpPtr_6_EQ_14___d55 = DEF_gpPtr_6_EQ_14___d55;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr__h1987, 4u);
      backing.DEF_gpPtr__h1987 = DEF_gpPtr__h1987;
      vcd_write_val(sim_hdl, num++, DEF_gqPtr_03_EQ_7___d117, 1u);
      backing.DEF_gqPtr_03_EQ_7___d117 = DEF_gqPtr_03_EQ_7___d117;
      vcd_write_val(sim_hdl, num++, DEF_unsigned_cycleCount_86___d187, 16u);
      backing.DEF_unsigned_cycleCount_86___d187 = DEF_unsigned_cycleCount_86___d187;
      vcd_write_val(sim_hdl, num++, DEF_v__h8360, 64u);
      backing.DEF_v__h8360 = DEF_v__h8360;
      vcd_write_val(sim_hdl, num++, DEF_v__h9676, 64u);
      backing.DEF_v__h9676 = DEF_v__h9676;
    }
}

void MOD_mkCRT_TB1::vcd_prims(tVCDDumpType dt, MOD_mkCRT_TB1 &backing)
{
  INST_a4lm_rdAddrRdy_w.dump_VCD(dt, backing.INST_a4lm_rdAddrRdy_w);
  INST_a4lm_rdData_w.dump_VCD(dt, backing.INST_a4lm_rdData_w);
  INST_a4lm_rdRespVal_w.dump_VCD(dt, backing.INST_a4lm_rdRespVal_w);
  INST_a4lm_rdResp_w.dump_VCD(dt, backing.INST_a4lm_rdResp_w);
  INST_a4lm_wrAddrRdy_w.dump_VCD(dt, backing.INST_a4lm_wrAddrRdy_w);
  INST_a4lm_wrDataRdy_w.dump_VCD(dt, backing.INST_a4lm_wrDataRdy_w);
  INST_a4lm_wrRespVal_w.dump_VCD(dt, backing.INST_a4lm_wrRespVal_w);
  INST_a4lm_wrResp_w.dump_VCD(dt, backing.INST_a4lm_wrResp_w);
  INST_consumeCnt.dump_VCD(dt, backing.INST_consumeCnt);
  INST_cycleCount.dump_VCD(dt, backing.INST_cycleCount);
  INST_gpDA.dump_VCD(dt, backing.INST_gpDA);
  INST_gpL2Hdr.dump_VCD(dt, backing.INST_gpL2Hdr);
  INST_gpPDU.dump_VCD(dt, backing.INST_gpPDU);
  INST_gpPtr.dump_VCD(dt, backing.INST_gpPtr);
  INST_gpSA.dump_VCD(dt, backing.INST_gpSA);
  INST_gqPtr.dump_VCD(dt, backing.INST_gqPtr);
  INST_l2ConsumeF.dump_VCD(dt, backing.INST_l2ConsumeF);
  INST_l2GenF.dump_VCD(dt, backing.INST_l2GenF);
}

void MOD_mkCRT_TB1::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkCRT_TB1 &backing)
{
  INST_a4ls.dump_VCD(dt, levels, backing.INST_a4ls);
  INST_crt2axi.dump_VCD(dt, levels, backing.INST_crt2axi);
  INST_l2P.dump_VCD(dt, levels, backing.INST_l2P);
}
