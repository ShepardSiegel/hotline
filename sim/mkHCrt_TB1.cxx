/*
 * Generated by Bluespec Compiler, version 2013.01.beta5 (build 30325, 2013-01-23)
 * 
 * On Tue Feb 12 09:00:50 PST 2013
 * 
 */
#include "bluesim_primitives.h"
#include "mkHCrt_TB1.h"


/* String declarations */
static std::string const __str_literal_1("[%0d]: %m: Terminate rule fired in cycle:%0d", 44u);


/* Constructor */
MOD_mkHCrt_TB1::MOD_mkHCrt_TB1(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_a4lm_rdAddrRdy_w(simHdl, "a4lm_rdAddrRdy_w", this, 1u, (tUInt8)0u),
    INST_a4lm_rdData_w(simHdl, "a4lm_rdData_w", this, 32u, (tUInt8)0u),
    INST_a4lm_rdRespVal_w(simHdl, "a4lm_rdRespVal_w", this, 1u, (tUInt8)0u),
    INST_a4lm_rdResp_w(simHdl, "a4lm_rdResp_w", this, 2u, (tUInt8)0u),
    INST_a4lm_wrAddrRdy_w(simHdl, "a4lm_wrAddrRdy_w", this, 1u, (tUInt8)0u),
    INST_a4lm_wrDataRdy_w(simHdl, "a4lm_wrDataRdy_w", this, 1u, (tUInt8)0u),
    INST_a4lm_wrRespVal_w(simHdl, "a4lm_wrRespVal_w", this, 1u, (tUInt8)0u),
    INST_a4lm_wrResp_w(simHdl, "a4lm_wrResp_w", this, 2u, (tUInt8)0u),
    INST_a4ls(simHdl, "a4ls", this, (tUInt8)1u),
    INST_consumeCnt(simHdl, "consumeCnt", this, 16u, 0u, (tUInt8)0u),
    INST_crt2axi(simHdl, "crt2axi", this),
    INST_cycleCount(simHdl, "cycleCount", this, 16u, 0u, (tUInt8)0u),
    INST_gpDA(simHdl, "gpDA", this, 48u),
    INST_gpL2Hdr(simHdl, "gpL2Hdr", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_gpPDU(simHdl, "gpPDU", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_gpPtr(simHdl, "gpPtr", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_gpSA(simHdl, "gpSA", this, 48u),
    INST_gqPtr(simHdl, "gqPtr", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_l2ConsumeF(simHdl, "l2ConsumeF", this, 10u, 2u, 1u, 0u),
    INST_l2GenF(simHdl, "l2GenF", this, 10u, 2u, 1u, 0u),
    INST_l2P(simHdl, "l2P", this),
    INST_l2qc_inF(simHdl, "l2qc_inF", this, 10u, 2u, 1u, 0u),
    INST_l2qc_outF(simHdl, "l2qc_outF", this, 40u, 2u, 1u, 0u),
    INST_l2qc_ptr(simHdl, "l2qc_ptr", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_l2qc_sr(simHdl, "l2qc_sr", this, 30u),
    INST_qcl2_inF(simHdl, "qcl2_inF", this, 40u, 2u, 1u, 0u),
    INST_qcl2_outF(simHdl, "qcl2_outF", this, 10u, 2u, 1u, 0u),
    INST_qcl2_ptr(simHdl, "qcl2_ptr", this, 2u, (tUInt8)0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h16005(12297829382473034410llu)
{
  symbol_count = 77u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkHCrt_TB1::init_symbols_0()
{
  init_symbol(&symbols[0u], "a4lm_rdAddrRdy_w", SYM_MODULE, &INST_a4lm_rdAddrRdy_w);
  init_symbol(&symbols[1u], "a4lm_rdData_w", SYM_MODULE, &INST_a4lm_rdData_w);
  init_symbol(&symbols[2u], "a4lm_rdResp_w", SYM_MODULE, &INST_a4lm_rdResp_w);
  init_symbol(&symbols[3u], "a4lm_rdRespVal_w", SYM_MODULE, &INST_a4lm_rdRespVal_w);
  init_symbol(&symbols[4u], "a4lm_wrAddrRdy_w", SYM_MODULE, &INST_a4lm_wrAddrRdy_w);
  init_symbol(&symbols[5u], "a4lm_wrDataRdy_w", SYM_MODULE, &INST_a4lm_wrDataRdy_w);
  init_symbol(&symbols[6u], "a4lm_wrResp_w", SYM_MODULE, &INST_a4lm_wrResp_w);
  init_symbol(&symbols[7u], "a4lm_wrRespVal_w", SYM_MODULE, &INST_a4lm_wrRespVal_w);
  init_symbol(&symbols[8u], "a4ls", SYM_MODULE, &INST_a4ls);
  init_symbol(&symbols[9u], "b__h15983", SYM_DEF, &DEF_b__h15983, 16u);
  init_symbol(&symbols[10u], "b__h7397", SYM_DEF, &DEF_b__h7397, 4u);
  init_symbol(&symbols[11u], "b__h9294", SYM_DEF, &DEF_b__h9294, 2u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_RL_a4lm_doAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4lm_doAlways,
	      1u);
  init_symbol(&symbols[13u],
	      "CAN_FIRE_RL_advance_cycleCount",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_advance_cycleCount,
	      1u);
  init_symbol(&symbols[14u], "CAN_FIRE_RL_chomp_l2", SYM_DEF, &DEF_CAN_FIRE_RL_chomp_l2, 1u);
  init_symbol(&symbols[15u], "CAN_FIRE_RL_doAlways", SYM_DEF, &DEF_CAN_FIRE_RL_doAlways, 1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_RL_l2_gen_header",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_l2_gen_header,
	      1u);
  init_symbol(&symbols[17u],
	      "CAN_FIRE_RL_l2_gen_payload",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_l2_gen_payload,
	      1u);
  init_symbol(&symbols[18u],
	      "CAN_FIRE_RL_l2qc_unfunnel",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_l2qc_unfunnel,
	      1u);
  init_symbol(&symbols[19u],
	      "CAN_FIRE_RL_mkConnectionGetPut",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut,
	      1u);
  init_symbol(&symbols[20u],
	      "CAN_FIRE_RL_mkConnectionGetPut_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_1,
	      1u);
  init_symbol(&symbols[21u],
	      "CAN_FIRE_RL_mkConnectionGetPut_2",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_2,
	      1u);
  init_symbol(&symbols[22u],
	      "CAN_FIRE_RL_mkConnectionGetPut_3",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_3,
	      1u);
  init_symbol(&symbols[23u],
	      "CAN_FIRE_RL_mkConnectionGetPut_4",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_4,
	      1u);
  init_symbol(&symbols[24u],
	      "CAN_FIRE_RL_mkConnectionGetPut_5",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_5,
	      1u);
  init_symbol(&symbols[25u], "CAN_FIRE_RL_qcl2_funnel", SYM_DEF, &DEF_CAN_FIRE_RL_qcl2_funnel, 1u);
  init_symbol(&symbols[26u], "CAN_FIRE_RL_terminate", SYM_DEF, &DEF_CAN_FIRE_RL_terminate, 1u);
  init_symbol(&symbols[27u], "consumeCnt", SYM_MODULE, &INST_consumeCnt);
  init_symbol(&symbols[28u], "crt2axi", SYM_MODULE, &INST_crt2axi);
  init_symbol(&symbols[29u], "cycleCount", SYM_MODULE, &INST_cycleCount);
  init_symbol(&symbols[30u], "gpDA", SYM_MODULE, &INST_gpDA);
  init_symbol(&symbols[31u], "gpL2Hdr", SYM_MODULE, &INST_gpL2Hdr);
  init_symbol(&symbols[32u], "gpPDU", SYM_MODULE, &INST_gpPDU);
  init_symbol(&symbols[33u], "gpPtr", SYM_MODULE, &INST_gpPtr);
  init_symbol(&symbols[34u], "gpPtr__h2001", SYM_DEF, &DEF_gpPtr__h2001, 4u);
  init_symbol(&symbols[35u], "gpSA", SYM_MODULE, &INST_gpSA);
  init_symbol(&symbols[36u], "gqPtr", SYM_MODULE, &INST_gqPtr);
  init_symbol(&symbols[37u], "l2ConsumeF", SYM_MODULE, &INST_l2ConsumeF);
  init_symbol(&symbols[38u], "l2GenF", SYM_MODULE, &INST_l2GenF);
  init_symbol(&symbols[39u], "l2P", SYM_MODULE, &INST_l2P);
  init_symbol(&symbols[40u], "l2qc_inF", SYM_MODULE, &INST_l2qc_inF);
  init_symbol(&symbols[41u], "l2qc_outF", SYM_MODULE, &INST_l2qc_outF);
  init_symbol(&symbols[42u], "l2qc_ptr", SYM_MODULE, &INST_l2qc_ptr);
  init_symbol(&symbols[43u], "l2qc_sr", SYM_MODULE, &INST_l2qc_sr);
  init_symbol(&symbols[44u], "qcl2_inF", SYM_MODULE, &INST_qcl2_inF);
  init_symbol(&symbols[45u], "qcl2_outF", SYM_MODULE, &INST_qcl2_outF);
  init_symbol(&symbols[46u], "qcl2_ptr", SYM_MODULE, &INST_qcl2_ptr);
  init_symbol(&symbols[47u], "RL_a4lm_doAlways", SYM_RULE);
  init_symbol(&symbols[48u], "RL_advance_cycleCount", SYM_RULE);
  init_symbol(&symbols[49u], "RL_chomp_l2", SYM_RULE);
  init_symbol(&symbols[50u], "RL_doAlways", SYM_RULE);
  init_symbol(&symbols[51u], "RL_l2_gen_header", SYM_RULE);
  init_symbol(&symbols[52u], "RL_l2_gen_payload", SYM_RULE);
  init_symbol(&symbols[53u], "RL_l2qc_unfunnel", SYM_RULE);
  init_symbol(&symbols[54u], "RL_mkConnectionGetPut", SYM_RULE);
  init_symbol(&symbols[55u], "RL_mkConnectionGetPut_1", SYM_RULE);
  init_symbol(&symbols[56u], "RL_mkConnectionGetPut_2", SYM_RULE);
  init_symbol(&symbols[57u], "RL_mkConnectionGetPut_3", SYM_RULE);
  init_symbol(&symbols[58u], "RL_mkConnectionGetPut_4", SYM_RULE);
  init_symbol(&symbols[59u], "RL_mkConnectionGetPut_5", SYM_RULE);
  init_symbol(&symbols[60u], "RL_qcl2_funnel", SYM_RULE);
  init_symbol(&symbols[61u], "RL_terminate", SYM_RULE);
  init_symbol(&symbols[62u],
	      "WILL_FIRE_RL_a4lm_doAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4lm_doAlways,
	      1u);
  init_symbol(&symbols[63u],
	      "WILL_FIRE_RL_advance_cycleCount",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_advance_cycleCount,
	      1u);
  init_symbol(&symbols[64u], "WILL_FIRE_RL_chomp_l2", SYM_DEF, &DEF_WILL_FIRE_RL_chomp_l2, 1u);
  init_symbol(&symbols[65u], "WILL_FIRE_RL_doAlways", SYM_DEF, &DEF_WILL_FIRE_RL_doAlways, 1u);
  init_symbol(&symbols[66u],
	      "WILL_FIRE_RL_l2_gen_header",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_l2_gen_header,
	      1u);
  init_symbol(&symbols[67u],
	      "WILL_FIRE_RL_l2_gen_payload",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_l2_gen_payload,
	      1u);
  init_symbol(&symbols[68u],
	      "WILL_FIRE_RL_l2qc_unfunnel",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_l2qc_unfunnel,
	      1u);
  init_symbol(&symbols[69u],
	      "WILL_FIRE_RL_mkConnectionGetPut",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut,
	      1u);
  init_symbol(&symbols[70u],
	      "WILL_FIRE_RL_mkConnectionGetPut_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_1,
	      1u);
  init_symbol(&symbols[71u],
	      "WILL_FIRE_RL_mkConnectionGetPut_2",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_2,
	      1u);
  init_symbol(&symbols[72u],
	      "WILL_FIRE_RL_mkConnectionGetPut_3",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_3,
	      1u);
  init_symbol(&symbols[73u],
	      "WILL_FIRE_RL_mkConnectionGetPut_4",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_4,
	      1u);
  init_symbol(&symbols[74u],
	      "WILL_FIRE_RL_mkConnectionGetPut_5",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_5,
	      1u);
  init_symbol(&symbols[75u], "WILL_FIRE_RL_qcl2_funnel", SYM_DEF, &DEF_WILL_FIRE_RL_qcl2_funnel, 1u);
  init_symbol(&symbols[76u], "WILL_FIRE_RL_terminate", SYM_DEF, &DEF_WILL_FIRE_RL_terminate, 1u);
}


/* Rule actions */

void MOD_mkHCrt_TB1::RL_a4lm_doAlways()
{
  tUInt64 DEF_IF_a4lm_rdResp_w_whas__9_THEN_a4lm_rdResp_w_wg_ETC___d25;
  tUInt8 DEF_a4lm_wrDataRdy_w_whas_AND_a4lm_wrDataRdy_w_wget___d6;
  tUInt8 DEF_a4lm_wrAddrRdy_w_whas_AND_a4lm_wrAddrRdy_w_wget___d3;
  tUInt8 DEF_a4lm_wrRespVal_w_whas_AND_a4lm_wrRespVal_w_wget___d9;
  tUInt8 DEF_a4lm_rdAddrRdy_w_whas__0_AND_a4lm_rdAddrRdy_w__ETC___d12;
  tUInt8 DEF_a4lm_rdRespVal_w_whas__3_AND_a4lm_rdRespVal_w__ETC___d15;
  tUInt8 DEF_IF_a4lm_wrResp_w_whas__6_THEN_a4lm_wrResp_w_wg_ETC___d18;
  tUInt32 DEF_value_data__h1140;
  tUInt32 DEF_x_wget__h746;
  DEF_x_wget__h746 = INST_a4lm_rdData_w.METH_wget();
  DEF_value_data__h1140 = INST_a4lm_rdData_w.METH_whas() ? DEF_x_wget__h746 : 0u;
  DEF_IF_a4lm_wrResp_w_whas__6_THEN_a4lm_wrResp_w_wg_ETC___d18 = INST_a4lm_wrResp_w.METH_whas() ? INST_a4lm_wrResp_w.METH_wget() : (tUInt8)0u;
  DEF_a4lm_rdRespVal_w_whas__3_AND_a4lm_rdRespVal_w__ETC___d15 = INST_a4lm_rdRespVal_w.METH_whas() && INST_a4lm_rdRespVal_w.METH_wget();
  DEF_a4lm_rdAddrRdy_w_whas__0_AND_a4lm_rdAddrRdy_w__ETC___d12 = INST_a4lm_rdAddrRdy_w.METH_whas() && INST_a4lm_rdAddrRdy_w.METH_wget();
  DEF_a4lm_wrRespVal_w_whas_AND_a4lm_wrRespVal_w_wget___d9 = INST_a4lm_wrRespVal_w.METH_whas() && INST_a4lm_wrRespVal_w.METH_wget();
  DEF_a4lm_wrAddrRdy_w_whas_AND_a4lm_wrAddrRdy_w_wget___d3 = INST_a4lm_wrAddrRdy_w.METH_whas() && INST_a4lm_wrAddrRdy_w.METH_wget();
  DEF_a4lm_wrDataRdy_w_whas_AND_a4lm_wrDataRdy_w_wget___d6 = INST_a4lm_wrDataRdy_w.METH_whas() && INST_a4lm_wrDataRdy_w.METH_wget();
  DEF_IF_a4lm_rdResp_w_whas__9_THEN_a4lm_rdResp_w_wg_ETC___d25 = 17179869183llu & ((((tUInt64)(INST_a4lm_rdResp_w.METH_whas() ? INST_a4lm_rdResp_w.METH_wget() : (tUInt8)0u)) << 32u) | (tUInt64)(DEF_value_data__h1140));
  INST_crt2axi.METH_axiM0_wrAddr_ready(DEF_a4lm_wrAddrRdy_w_whas_AND_a4lm_wrAddrRdy_w_wget___d3);
  INST_crt2axi.METH_axiM0_wrData_ready(DEF_a4lm_wrDataRdy_w_whas_AND_a4lm_wrDataRdy_w_wget___d6);
  INST_crt2axi.METH_axiM0_wrResp_valid(DEF_a4lm_wrRespVal_w_whas_AND_a4lm_wrRespVal_w_wget___d9);
  INST_crt2axi.METH_axiM0_rdAddr_ready(DEF_a4lm_rdAddrRdy_w_whas__0_AND_a4lm_rdAddrRdy_w__ETC___d12);
  INST_crt2axi.METH_axiM0_rdResp_valid(DEF_a4lm_rdRespVal_w_whas__3_AND_a4lm_rdRespVal_w__ETC___d15);
  INST_crt2axi.METH_axiM0_wrResp_data(DEF_IF_a4lm_wrResp_w_whas__6_THEN_a4lm_wrResp_w_wg_ETC___d18);
  INST_crt2axi.METH_axiM0_rdResp_data(DEF_IF_a4lm_rdResp_w_whas__9_THEN_a4lm_rdResp_w_wg_ETC___d25);
}

void MOD_mkHCrt_TB1::RL_l2_gen_header()
{
  tUInt8 DEF_gpPtr_6_PLUS_1___d68;
  tUInt8 DEF_NOT_gpPtr_6_EQ_0_7_3_AND_gpPtr_6_EQ_1_2_OR_gpP_ETC___d97;
  tUInt8 DEF_gpPtr_6_EQ_1___d32;
  tUInt8 DEF_gpPtr_6_EQ_2___d33;
  tUInt8 DEF_gpPtr_6_EQ_3___d35;
  tUInt8 DEF_gpPtr_6_EQ_4___d37;
  tUInt8 DEF_gpPtr_6_EQ_5___d39;
  tUInt8 DEF_gpPtr_6_EQ_6___d41;
  tUInt32 DEF__0_CONCAT_gpDA_0_BITS_47_TO_40_2___d98;
  tUInt32 DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102;
  tUInt32 DEF__0_CONCAT_gpSA_8_BITS_47_TO_40_0___d99;
  tUInt64 DEF_IF_gpPtr_6_EQ_0_7_THEN_43839021184_ELSE_gpDA_0_ETC___d74;
  tUInt64 DEF_IF_gpPtr_6_EQ_0_7_THEN_176157985423013_ELSE_gp_ETC___d92;
  tUInt8 DEF_gpSA_BITS_47_TO_40___h3994;
  tUInt8 DEF_gpDA_BITS_47_TO_40___h3642;
  tUInt64 DEF_gpDA__h6157;
  tUInt64 DEF_gpSA__h7298;
  tUInt8 DEF_gpPtr_6_EQ_0_7_OR_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_ETC___d69;
  tUInt8 DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42;
  tUInt8 DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53;
  tUInt8 DEF_gpPtr_6_EQ_0_7_OR_NOT_gpPtr_6_EQ_1_2_5_AND_NOT_ETC___d87;
  DEF_gpSA__h7298 = INST_gpSA.METH_read();
  DEF_gpDA__h6157 = INST_gpDA.METH_read();
  DEF_gpPtr__h2001 = INST_gpPtr.METH_read();
  DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53 = ((((DEF_gpPtr__h2001 == (tUInt8)7u || DEF_gpPtr__h2001 == (tUInt8)8u) || DEF_gpPtr__h2001 == (tUInt8)9u) || DEF_gpPtr__h2001 == (tUInt8)10u) || DEF_gpPtr__h2001 == (tUInt8)11u) || DEF_gpPtr__h2001 == (tUInt8)12u;
  DEF_gpDA_BITS_47_TO_40___h3642 = (tUInt8)(DEF_gpDA__h6157 >> 40u);
  DEF_gpSA_BITS_47_TO_40___h3994 = (tUInt8)(DEF_gpSA__h7298 >> 40u);
  DEF_gpPtr_6_EQ_0___d27 = DEF_gpPtr__h2001 == (tUInt8)0u;
  DEF_IF_gpPtr_6_EQ_0_7_THEN_176157985423013_ELSE_gp_ETC___d92 = DEF_gpPtr_6_EQ_0___d27 ? 176157985423013llu : 281474976710655llu & ((((tUInt64)(1099511627775llu & DEF_gpSA__h7298)) << 8u) | (tUInt64)(DEF_gpSA_BITS_47_TO_40___h3994));
  DEF_IF_gpPtr_6_EQ_0_7_THEN_43839021184_ELSE_gpDA_0_ETC___d74 = DEF_gpPtr_6_EQ_0___d27 ? 43839021184llu : 281474976710655llu & ((((tUInt64)(1099511627775llu & DEF_gpDA__h6157)) << 8u) | (tUInt64)(DEF_gpDA_BITS_47_TO_40___h3642));
  DEF__0_CONCAT_gpSA_8_BITS_47_TO_40_0___d99 = 1023u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_gpSA_BITS_47_TO_40___h3994));
  DEF__0_CONCAT_gpDA_0_BITS_47_TO_40_2___d98 = 1023u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_gpDA_BITS_47_TO_40___h3642));
  switch (DEF_gpPtr__h2001) {
  case (tUInt8)1u:
  case (tUInt8)2u:
  case (tUInt8)3u:
  case (tUInt8)4u:
  case (tUInt8)5u:
  case (tUInt8)6u:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = DEF__0_CONCAT_gpDA_0_BITS_47_TO_40_2___d98;
    break;
  case (tUInt8)7u:
  case (tUInt8)8u:
  case (tUInt8)9u:
  case (tUInt8)10u:
  case (tUInt8)11u:
  case (tUInt8)12u:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = DEF__0_CONCAT_gpSA_8_BITS_47_TO_40_0___d99;
    break;
  case (tUInt8)13u:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = 240u;
    break;
  default:
    DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102 = 82u;
  }
  DEF_gpPtr_6_EQ_13___d28 = DEF_gpPtr__h2001 == (tUInt8)13u;
  DEF_gpPtr_6_EQ_14___d55 = DEF_gpPtr__h2001 == (tUInt8)14u;
  DEF_gpPtr_6_EQ_6___d41 = DEF_gpPtr__h2001 == (tUInt8)6u;
  DEF_gpPtr_6_EQ_5___d39 = DEF_gpPtr__h2001 == (tUInt8)5u;
  DEF_gpPtr_6_EQ_4___d37 = DEF_gpPtr__h2001 == (tUInt8)4u;
  DEF_gpPtr_6_EQ_3___d35 = DEF_gpPtr__h2001 == (tUInt8)3u;
  DEF_gpPtr_6_EQ_2___d33 = DEF_gpPtr__h2001 == (tUInt8)2u;
  DEF_gpPtr_6_EQ_1___d32 = DEF_gpPtr__h2001 == (tUInt8)1u;
  DEF_gpPtr_6_EQ_0_7_OR_NOT_gpPtr_6_EQ_1_2_5_AND_NOT_ETC___d87 = DEF_gpPtr_6_EQ_0___d27 || ((((((!DEF_gpPtr_6_EQ_1___d32 && !DEF_gpPtr_6_EQ_2___d33) && !DEF_gpPtr_6_EQ_3___d35) && !DEF_gpPtr_6_EQ_4___d37) && !DEF_gpPtr_6_EQ_5___d39) && !DEF_gpPtr_6_EQ_6___d41) && DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53);
  DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42 = ((((DEF_gpPtr_6_EQ_1___d32 || DEF_gpPtr_6_EQ_2___d33) || DEF_gpPtr_6_EQ_3___d35) || DEF_gpPtr_6_EQ_4___d37) || DEF_gpPtr_6_EQ_5___d39) || DEF_gpPtr_6_EQ_6___d41;
  DEF_gpPtr_6_EQ_0_7_OR_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_ETC___d69 = DEF_gpPtr_6_EQ_0___d27 || DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42;
  DEF_NOT_gpPtr_6_EQ_0_7_3_AND_gpPtr_6_EQ_1_2_OR_gpP_ETC___d97 = !DEF_gpPtr_6_EQ_0___d27 && (DEF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_6__ETC___d42 || (DEF_gpPtr_6_EQ_7_3_OR_gpPtr_6_EQ_8_4_5_OR_gpPtr_6__ETC___d53 || (DEF_gpPtr_6_EQ_13___d28 || DEF_gpPtr_6_EQ_14___d55)));
  DEF_gpPtr_6_PLUS_1___d68 = (tUInt8)15u & (DEF_gpPtr__h2001 + (tUInt8)1u);
  INST_gpPtr.METH_write(DEF_gpPtr_6_PLUS_1___d68);
  if (DEF_gpPtr_6_EQ_0_7_OR_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_ETC___d69)
    INST_gpDA.METH_write(DEF_IF_gpPtr_6_EQ_0_7_THEN_43839021184_ELSE_gpDA_0_ETC___d74);
  if (DEF_gpPtr_6_EQ_0_7_OR_NOT_gpPtr_6_EQ_1_2_5_AND_NOT_ETC___d87)
    INST_gpSA.METH_write(DEF_IF_gpPtr_6_EQ_0_7_THEN_176157985423013_ELSE_gp_ETC___d92);
  if (DEF_gpPtr_6_EQ_14___d55)
    INST_gpPDU.METH_write((tUInt8)1u);
  if (DEF_NOT_gpPtr_6_EQ_0_7_3_AND_gpPtr_6_EQ_1_2_OR_gpP_ETC___d97)
    INST_l2GenF.METH_enq(DEF_IF_gpPtr_6_EQ_1_2_OR_gpPtr_6_EQ_2_3_4_OR_gpPtr_ETC___d102);
}

void MOD_mkHCrt_TB1::RL_l2_gen_payload()
{
  tUInt8 DEF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqPtr__ETC___d132;
  tUInt8 DEF_IF_gqPtr_03_EQ_15_24_THEN_gqPtr_03_ELSE_gqPtr__ETC___d126;
  tUInt32 DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138;
  DEF_b__h7397 = INST_gqPtr.METH_read();
  switch (DEF_b__h7397) {
  case (tUInt8)0u:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 32u;
    break;
  case (tUInt8)1u:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 255u;
    break;
  case (tUInt8)2u:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 1u;
    break;
  case (tUInt8)3u:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 128u;
    break;
  case (tUInt8)4u:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 16u;
    break;
  case (tUInt8)5u:
  case (tUInt8)6u:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 0u;
    break;
  default:
    DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138 = 256u;
  }
  DEF_IF_gqPtr_03_EQ_15_24_THEN_gqPtr_03_ELSE_gqPtr__ETC___d126 = DEF_b__h7397 == (tUInt8)15u ? DEF_b__h7397 : (tUInt8)15u & (DEF_b__h7397 + (tUInt8)1u);
  DEF_gqPtr_03_EQ_7___d117 = DEF_b__h7397 == (tUInt8)7u;
  DEF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqPtr__ETC___d132 = DEF_b__h7397 == (tUInt8)0u || (DEF_b__h7397 == (tUInt8)1u || (DEF_b__h7397 == (tUInt8)2u || (DEF_b__h7397 == (tUInt8)3u || (DEF_b__h7397 == (tUInt8)4u || ((DEF_b__h7397 == (tUInt8)5u || DEF_b__h7397 == (tUInt8)6u) || DEF_gqPtr_03_EQ_7___d117)))));
  INST_gqPtr.METH_write(DEF_IF_gqPtr_03_EQ_15_24_THEN_gqPtr_03_ELSE_gqPtr__ETC___d126);
  if (DEF_gqPtr_03_EQ_0_04_OR_gqPtr_03_EQ_1_05_OR_gqPtr__ETC___d132)
    INST_l2GenF.METH_enq(DEF_IF_gqPtr_03_EQ_0_04_THEN_32_ELSE_IF_gqPtr_03_E_ETC___d138);
}

void MOD_mkHCrt_TB1::RL_mkConnectionGetPut()
{
  tUInt32 DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d153;
  tUInt8 DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d149;
  tUInt8 DEF_l2GenF_first__42_BITS_9_TO_8___d143;
  tUInt8 DEF_l2GenF_first__42_BITS_7_TO_0___d151;
  tUInt32 DEF_l2GenF_first____d142;
  DEF_l2GenF_first____d142 = INST_l2GenF.METH_first();
  DEF_l2GenF_first__42_BITS_7_TO_0___d151 = (tUInt8)((tUInt8)255u & DEF_l2GenF_first____d142);
  DEF_l2GenF_first__42_BITS_9_TO_8___d143 = (tUInt8)(DEF_l2GenF_first____d142 >> 8u);
  switch (DEF_l2GenF_first__42_BITS_9_TO_8___d143) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d149 = DEF_l2GenF_first__42_BITS_9_TO_8___d143;
    break;
  default:
    DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d149 = (tUInt8)3u;
  }
  DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d153 = 1023u & ((((tUInt32)(DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d149)) << 8u) | (tUInt32)(DEF_l2GenF_first__42_BITS_9_TO_8___d143 == (tUInt8)0u || DEF_l2GenF_first__42_BITS_9_TO_8___d143 == (tUInt8)1u ? DEF_l2GenF_first__42_BITS_7_TO_0___d151 : DEF_l2GenF_first__42_BITS_7_TO_0___d151));
  INST_l2GenF.METH_deq();
  INST_l2P.METH_server_request_put(DEF_IF_l2GenF_first__42_BITS_9_TO_8_43_EQ_0_44_OR__ETC___d153);
}

void MOD_mkHCrt_TB1::RL_l2qc_unfunnel()
{
  tUInt32 DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d196;
  tUInt32 DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d187;
  tUInt32 DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d197;
  tUInt32 DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d176;
  tUInt64 DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d213;
  tUInt8 DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_T_ETC___d199;
  tUInt8 DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d172;
  tUInt8 DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d183;
  tUInt8 DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d192;
  tUInt8 DEF_IF_l2qc_sr_65_BITS_29_TO_28_03_EQ_0_04_OR_l2qc_ETC___d209;
  tUInt8 DEF_l2qc_sr_65_BITS_9_TO_8___d177;
  tUInt8 DEF_l2qc_sr_65_BITS_19_TO_18___d166;
  tUInt8 DEF_l2qc_sr_65_BITS_29_TO_28___d203;
  tUInt8 DEF_l2qc_inF_first__58_BITS_7_TO_0___d194;
  tUInt8 DEF_l2qc_sr_BITS_7_TO_0___h9021;
  tUInt8 DEF_l2qc_sr_BITS_17_TO_10___h8822;
  tUInt8 DEF_l2qc_sr_BITS_27_TO_20___h10264;
  tUInt32 DEF_l2qc_sr__h10223;
  tUInt8 DEF_l2qc_ptr_55_EQ_3_56_OR_NOT_l2qc_inF_first__58__ETC___d201;
  DEF_b__h9294 = INST_l2qc_ptr.METH_read();
  DEF_l2qc_sr__h10223 = INST_l2qc_sr.METH_read();
  DEF_l2qc_inF_first____d158 = INST_l2qc_inF.METH_first();
  DEF_l2qc_inF_first__58_BITS_9_TO_8___d159 = (tUInt8)(DEF_l2qc_inF_first____d158 >> 8u);
  DEF_l2qc_sr_BITS_27_TO_20___h10264 = (tUInt8)((tUInt8)255u & (DEF_l2qc_sr__h10223 >> 20u));
  DEF_l2qc_sr_BITS_17_TO_10___h8822 = (tUInt8)((tUInt8)255u & (DEF_l2qc_sr__h10223 >> 10u));
  DEF_l2qc_sr_BITS_7_TO_0___h9021 = (tUInt8)((tUInt8)255u & DEF_l2qc_sr__h10223);
  DEF_l2qc_inF_first__58_BITS_7_TO_0___d194 = (tUInt8)((tUInt8)255u & DEF_l2qc_inF_first____d158);
  DEF_l2qc_sr_65_BITS_29_TO_28___d203 = (tUInt8)(DEF_l2qc_sr__h10223 >> 28u);
  DEF_l2qc_sr_65_BITS_19_TO_18___d166 = (tUInt8)((tUInt8)3u & (DEF_l2qc_sr__h10223 >> 18u));
  DEF_l2qc_sr_65_BITS_9_TO_8___d177 = (tUInt8)((tUInt8)3u & (DEF_l2qc_sr__h10223 >> 8u));
  switch (DEF_l2qc_inF_first__58_BITS_9_TO_8___d159) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d192 = DEF_l2qc_inF_first__58_BITS_9_TO_8___d159;
    break;
  default:
    DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d192 = (tUInt8)3u;
  }
  switch (DEF_l2qc_sr_65_BITS_29_TO_28___d203) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2qc_sr_65_BITS_29_TO_28_03_EQ_0_04_OR_l2qc_ETC___d209 = DEF_l2qc_sr_65_BITS_29_TO_28___d203;
    break;
  default:
    DEF_IF_l2qc_sr_65_BITS_29_TO_28_03_EQ_0_04_OR_l2qc_ETC___d209 = (tUInt8)3u;
  }
  switch (DEF_l2qc_sr_65_BITS_9_TO_8___d177) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d183 = DEF_l2qc_sr_65_BITS_9_TO_8___d177;
    break;
  default:
    DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d183 = (tUInt8)3u;
  }
  DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160 = DEF_l2qc_inF_first__58_BITS_9_TO_8___d159 == (tUInt8)0u;
  switch (DEF_l2qc_sr_65_BITS_19_TO_18___d166) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d172 = DEF_l2qc_sr_65_BITS_19_TO_18___d166;
    break;
  default:
    DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d172 = (tUInt8)3u;
  }
  DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_T_ETC___d199 = DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160 ? (tUInt8)3u & (DEF_b__h9294 + (tUInt8)1u) : (tUInt8)0u;
  DEF_l2qc_ptr_55_EQ_3___d156 = DEF_b__h9294 == (tUInt8)3u;
  DEF_l2qc_ptr_55_EQ_3_56_OR_NOT_l2qc_inF_first__58__ETC___d201 = DEF_l2qc_ptr_55_EQ_3___d156 || !DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160;
  DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d176 = 1023u & ((((tUInt32)(DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d172)) << 8u) | (tUInt32)(DEF_l2qc_sr_65_BITS_19_TO_18___d166 == (tUInt8)0u || DEF_l2qc_sr_65_BITS_19_TO_18___d166 == (tUInt8)1u ? DEF_l2qc_sr_BITS_17_TO_10___h8822 : DEF_l2qc_sr_BITS_17_TO_10___h8822));
  DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d187 = 1023u & ((((tUInt32)(DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d183)) << 8u) | (tUInt32)(DEF_l2qc_sr_65_BITS_9_TO_8___d177 == (tUInt8)0u || DEF_l2qc_sr_65_BITS_9_TO_8___d177 == (tUInt8)1u ? DEF_l2qc_sr_BITS_7_TO_0___h9021 : DEF_l2qc_sr_BITS_7_TO_0___h9021));
  DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d196 = 1023u & ((((tUInt32)(DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d192)) << 8u) | (tUInt32)(DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160 || DEF_l2qc_inF_first__58_BITS_9_TO_8___d159 == (tUInt8)1u ? DEF_l2qc_inF_first__58_BITS_7_TO_0___d194 : DEF_l2qc_inF_first__58_BITS_7_TO_0___d194));
  DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d213 = 1099511627775llu & (((((((tUInt64)(DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d196)) << 30u) | (((tUInt64)(DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d187)) << 20u)) | (((tUInt64)(DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d176)) << 10u)) | (((tUInt64)(DEF_IF_l2qc_sr_65_BITS_29_TO_28_03_EQ_0_04_OR_l2qc_ETC___d209)) << 8u)) | (tUInt64)(DEF_l2qc_sr_65_BITS_29_TO_28___d203 == (tUInt8)0u || DEF_l2qc_sr_65_BITS_29_TO_28___d203 == (tUInt8)1u ? DEF_l2qc_sr_BITS_27_TO_20___h10264 : DEF_l2qc_sr_BITS_27_TO_20___h10264));
  DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d197 = 1073741823u & (((DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d176 << 20u) | (DEF_IF_l2qc_sr_65_BITS_9_TO_8_77_EQ_0_78_OR_l2qc_s_ETC___d187 << 10u)) | DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d196);
  INST_l2qc_inF.METH_deq();
  INST_l2qc_sr.METH_write(DEF_IF_l2qc_sr_65_BITS_19_TO_18_66_EQ_0_67_OR_l2qc_ETC___d197);
  INST_l2qc_ptr.METH_write(DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_T_ETC___d199);
  if (DEF_l2qc_ptr_55_EQ_3_56_OR_NOT_l2qc_inF_first__58__ETC___d201)
    INST_l2qc_outF.METH_enq(DEF_IF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0_60_O_ETC___d213);
}

void MOD_mkHCrt_TB1::RL_mkConnectionGetPut_1()
{
  tUInt32 DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d228;
  tUInt8 DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d224;
  tUInt8 DEF_l2P_client_request_get_17_BITS_9_TO_8___d218;
  tUInt8 DEF_l2P_client_request_get_17_BITS_7_TO_0___d226;
  tUInt32 DEF_l2P_client_request_get___d217;
  tUInt32 DEF_AVMeth_l2P_client_request_get;
  DEF_AVMeth_l2P_client_request_get = INST_l2P.METH_client_request_get();
  DEF_l2P_client_request_get___d217 = DEF_AVMeth_l2P_client_request_get;
  DEF_l2P_client_request_get_17_BITS_7_TO_0___d226 = (tUInt8)((tUInt8)255u & DEF_l2P_client_request_get___d217);
  DEF_l2P_client_request_get_17_BITS_9_TO_8___d218 = (tUInt8)(DEF_l2P_client_request_get___d217 >> 8u);
  switch (DEF_l2P_client_request_get_17_BITS_9_TO_8___d218) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d224 = DEF_l2P_client_request_get_17_BITS_9_TO_8___d218;
    break;
  default:
    DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d224 = (tUInt8)3u;
  }
  DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d228 = 1023u & ((((tUInt32)(DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d224)) << 8u) | (tUInt32)(DEF_l2P_client_request_get_17_BITS_9_TO_8___d218 == (tUInt8)0u || DEF_l2P_client_request_get_17_BITS_9_TO_8___d218 == (tUInt8)1u ? DEF_l2P_client_request_get_17_BITS_7_TO_0___d226 : DEF_l2P_client_request_get_17_BITS_7_TO_0___d226));
  INST_l2qc_inF.METH_enq(DEF_IF_l2P_client_request_get_17_BITS_9_TO_8_18_EQ_ETC___d228);
}

void MOD_mkHCrt_TB1::RL_mkConnectionGetPut_2()
{
  tUInt32 DEF_v__h10568;
  tUInt8 DEF_l2qc_outF_first__32_BITS_9_TO_8___d252;
  tUInt8 DEF_l2qc_outF_first__32_BITS_19_TO_18___d246;
  tUInt8 DEF_l2qc_outF_first__32_BITS_29_TO_28___d239;
  tUInt8 DEF_l2qc_outF_first__32_BITS_39_TO_38___d233;
  tUInt8 DEF_l2qc_outF_first__32_BITS_7_TO_0___d256;
  tUInt8 DEF_l2qc_outF_first__32_BITS_17_TO_10___d250;
  tUInt8 DEF_l2qc_outF_first__32_BITS_27_TO_20___d243;
  tUInt8 DEF_l2qc_outF_first__32_BITS_37_TO_30___d237;
  tUInt64 DEF_l2qc_outF_first____d232;
  DEF_l2qc_outF_first____d232 = INST_l2qc_outF.METH_first();
  DEF_l2qc_outF_first__32_BITS_37_TO_30___d237 = (tUInt8)((tUInt8)255u & (DEF_l2qc_outF_first____d232 >> 30u));
  DEF_l2qc_outF_first__32_BITS_27_TO_20___d243 = (tUInt8)((tUInt8)255u & (DEF_l2qc_outF_first____d232 >> 20u));
  DEF_l2qc_outF_first__32_BITS_17_TO_10___d250 = (tUInt8)((tUInt8)255u & (DEF_l2qc_outF_first____d232 >> 10u));
  DEF_l2qc_outF_first__32_BITS_39_TO_38___d233 = (tUInt8)(DEF_l2qc_outF_first____d232 >> 38u);
  DEF_l2qc_outF_first__32_BITS_7_TO_0___d256 = (tUInt8)((tUInt8)255u & DEF_l2qc_outF_first____d232);
  DEF_l2qc_outF_first__32_BITS_29_TO_28___d239 = (tUInt8)((tUInt8)3u & (DEF_l2qc_outF_first____d232 >> 28u));
  DEF_l2qc_outF_first__32_BITS_19_TO_18___d246 = (tUInt8)((tUInt8)3u & (DEF_l2qc_outF_first____d232 >> 18u));
  DEF_l2qc_outF_first__32_BITS_9_TO_8___d252 = (tUInt8)((tUInt8)3u & (DEF_l2qc_outF_first____d232 >> 8u));
  DEF_v__h10568 = (((((tUInt32)(DEF_l2qc_outF_first__32_BITS_39_TO_38___d233 == (tUInt8)0u || DEF_l2qc_outF_first__32_BITS_39_TO_38___d233 == (tUInt8)1u ? DEF_l2qc_outF_first__32_BITS_37_TO_30___d237 : DEF_l2qc_outF_first__32_BITS_37_TO_30___d237)) << 24u) | (((tUInt32)(DEF_l2qc_outF_first__32_BITS_29_TO_28___d239 == (tUInt8)0u || DEF_l2qc_outF_first__32_BITS_29_TO_28___d239 == (tUInt8)1u ? DEF_l2qc_outF_first__32_BITS_27_TO_20___d243 : DEF_l2qc_outF_first__32_BITS_27_TO_20___d243)) << 16u)) | (((tUInt32)(DEF_l2qc_outF_first__32_BITS_19_TO_18___d246 == (tUInt8)0u || DEF_l2qc_outF_first__32_BITS_19_TO_18___d246 == (tUInt8)1u ? DEF_l2qc_outF_first__32_BITS_17_TO_10___d250 : DEF_l2qc_outF_first__32_BITS_17_TO_10___d250)) << 8u)) | (tUInt32)(DEF_l2qc_outF_first__32_BITS_9_TO_8___d252 == (tUInt8)0u || DEF_l2qc_outF_first__32_BITS_9_TO_8___d252 == (tUInt8)1u ? DEF_l2qc_outF_first__32_BITS_7_TO_0___d256 : DEF_l2qc_outF_first__32_BITS_7_TO_0___d256);
  INST_l2qc_outF.METH_deq();
  INST_crt2axi.METH_crtS0_request_put(DEF_v__h10568);
}

void MOD_mkHCrt_TB1::RL_qcl2_funnel()
{
  tUInt8 DEF_qcl2_ptr_72_EQ_3_00_OR_NOT_SEL_ARR_qcl2_inF_fi_ETC___d302;
  tUInt8 DEF_IF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_E_ETC___d275;
  tUInt32 DEF_IF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_E_ETC___d299;
  tUInt8 DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273;
  tUInt8 DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288;
  tUInt8 DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295;
  tUInt8 DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281;
  tUInt8 DEF_qcl2_inF_first__62_BITS_9_TO_8___d263;
  tUInt8 DEF_qcl2_inF_first__62_BITS_19_TO_18___d265;
  tUInt8 DEF_qcl2_inF_first__62_BITS_29_TO_28___d267;
  tUInt8 DEF_qcl2_inF_first__62_BITS_39_TO_38___d269;
  tUInt8 DEF_x__h12892;
  tUInt8 DEF_x__h12893;
  tUInt8 DEF_x__h12894;
  tUInt8 DEF_x__h12895;
  tUInt64 DEF_qcl2_inF_first____d262;
  tUInt8 DEF_x__h12984;
  DEF_x__h12984 = INST_qcl2_ptr.METH_read();
  DEF_qcl2_inF_first____d262 = INST_qcl2_inF.METH_first();
  DEF_x__h12895 = (tUInt8)((tUInt8)255u & (DEF_qcl2_inF_first____d262 >> 30u));
  DEF_x__h12894 = (tUInt8)((tUInt8)255u & (DEF_qcl2_inF_first____d262 >> 20u));
  DEF_x__h12893 = (tUInt8)((tUInt8)255u & (DEF_qcl2_inF_first____d262 >> 10u));
  DEF_x__h12892 = (tUInt8)((tUInt8)255u & DEF_qcl2_inF_first____d262);
  DEF_qcl2_inF_first__62_BITS_39_TO_38___d269 = (tUInt8)(DEF_qcl2_inF_first____d262 >> 38u);
  DEF_qcl2_inF_first__62_BITS_29_TO_28___d267 = (tUInt8)((tUInt8)3u & (DEF_qcl2_inF_first____d262 >> 28u));
  DEF_qcl2_inF_first__62_BITS_19_TO_18___d265 = (tUInt8)((tUInt8)3u & (DEF_qcl2_inF_first____d262 >> 18u));
  DEF_qcl2_inF_first__62_BITS_9_TO_8___d263 = (tUInt8)((tUInt8)3u & (DEF_qcl2_inF_first____d262 >> 8u));
  switch (DEF_x__h12984) {
  case (tUInt8)0u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281 = DEF_x__h12892;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281 = DEF_x__h12893;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281 = DEF_x__h12894;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281 = DEF_x__h12895;
    break;
  default:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281 = (tUInt8)170u;
  }
  switch (DEF_x__h12984) {
  case (tUInt8)0u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295 = DEF_qcl2_inF_first__62_BITS_9_TO_8___d263 == (tUInt8)2u;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295 = DEF_qcl2_inF_first__62_BITS_19_TO_18___d265 == (tUInt8)2u;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295 = DEF_qcl2_inF_first__62_BITS_29_TO_28___d267 == (tUInt8)2u;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295 = DEF_qcl2_inF_first__62_BITS_39_TO_38___d269 == (tUInt8)2u;
    break;
  default:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295 = (tUInt8)0u;
  }
  switch (DEF_x__h12984) {
  case (tUInt8)0u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288 = DEF_qcl2_inF_first__62_BITS_9_TO_8___d263 == (tUInt8)1u;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288 = DEF_qcl2_inF_first__62_BITS_19_TO_18___d265 == (tUInt8)1u;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288 = DEF_qcl2_inF_first__62_BITS_29_TO_28___d267 == (tUInt8)1u;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288 = DEF_qcl2_inF_first__62_BITS_39_TO_38___d269 == (tUInt8)1u;
    break;
  default:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288 = (tUInt8)0u;
  }
  switch (DEF_x__h12984) {
  case (tUInt8)0u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 = DEF_qcl2_inF_first__62_BITS_9_TO_8___d263 == (tUInt8)0u;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 = DEF_qcl2_inF_first__62_BITS_19_TO_18___d265 == (tUInt8)0u;
    break;
  case (tUInt8)2u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 = DEF_qcl2_inF_first__62_BITS_29_TO_28___d267 == (tUInt8)0u;
    break;
  case (tUInt8)3u:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 = DEF_qcl2_inF_first__62_BITS_39_TO_38___d269 == (tUInt8)0u;
    break;
  default:
    DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 = (tUInt8)0u;
  }
  DEF_IF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_E_ETC___d299 = DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 ? 1023u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281)) : (DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_1_ETC___d288 ? 1023u & ((((tUInt32)((tUInt8)1u)) << 8u) | (tUInt32)(DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281)) : 1023u & ((((tUInt32)(DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_2_ETC___d295 ? (tUInt8)2u : (tUInt8)3u)) << 8u) | (tUInt32)(DEF_SEL_ARR_qcl2_inF_first__62_BITS_7_TO_0_76_qcl2_ETC___d281)));
  DEF_IF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_E_ETC___d275 = DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273 ? (tUInt8)3u & (DEF_x__h12984 + (tUInt8)1u) : (tUInt8)0u;
  DEF_qcl2_ptr_72_EQ_3_00_OR_NOT_SEL_ARR_qcl2_inF_fi_ETC___d302 = DEF_x__h12984 == (tUInt8)3u || !DEF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_EQ_0_ETC___d273;
  INST_qcl2_ptr.METH_write(DEF_IF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_E_ETC___d275);
  INST_qcl2_outF.METH_enq(DEF_IF_SEL_ARR_qcl2_inF_first__62_BITS_9_TO_8_63_E_ETC___d299);
  if (DEF_qcl2_ptr_72_EQ_3_00_OR_NOT_SEL_ARR_qcl2_inF_fi_ETC___d302)
    INST_qcl2_inF.METH_deq();
}

void MOD_mkHCrt_TB1::RL_mkConnectionGetPut_3()
{
  tUInt64 DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d349;
  tUInt8 DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d313;
  tUInt8 DEF_IF_crt2axi_crtS0_response_get_06_BITS_29_TO_28_ETC___d323;
  tUInt8 DEF_IF_crt2axi_crtS0_response_get_06_BITS_19_TO_18_ETC___d334;
  tUInt8 DEF_IF_crt2axi_crtS0_response_get_06_BITS_9_TO_8_3_ETC___d345;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_9_TO_8___d339;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_19_TO_18___d328;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_29_TO_28___d317;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_39_TO_38___d307;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_7_TO_0___d347;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_17_TO_10___d336;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_27_TO_20___d325;
  tUInt8 DEF_crt2axi_crtS0_response_get_06_BITS_37_TO_30___d315;
  tUInt64 DEF_crt2axi_crtS0_response_get___d306;
  tUInt64 DEF_AVMeth_crt2axi_crtS0_response_get;
  DEF_AVMeth_crt2axi_crtS0_response_get = INST_crt2axi.METH_crtS0_response_get();
  DEF_crt2axi_crtS0_response_get___d306 = DEF_AVMeth_crt2axi_crtS0_response_get;
  DEF_crt2axi_crtS0_response_get_06_BITS_37_TO_30___d315 = (tUInt8)((tUInt8)255u & (DEF_crt2axi_crtS0_response_get___d306 >> 30u));
  DEF_crt2axi_crtS0_response_get_06_BITS_27_TO_20___d325 = (tUInt8)((tUInt8)255u & (DEF_crt2axi_crtS0_response_get___d306 >> 20u));
  DEF_crt2axi_crtS0_response_get_06_BITS_17_TO_10___d336 = (tUInt8)((tUInt8)255u & (DEF_crt2axi_crtS0_response_get___d306 >> 10u));
  DEF_crt2axi_crtS0_response_get_06_BITS_7_TO_0___d347 = (tUInt8)((tUInt8)255u & DEF_crt2axi_crtS0_response_get___d306);
  DEF_crt2axi_crtS0_response_get_06_BITS_39_TO_38___d307 = (tUInt8)(DEF_crt2axi_crtS0_response_get___d306 >> 38u);
  DEF_crt2axi_crtS0_response_get_06_BITS_29_TO_28___d317 = (tUInt8)((tUInt8)3u & (DEF_crt2axi_crtS0_response_get___d306 >> 28u));
  DEF_crt2axi_crtS0_response_get_06_BITS_19_TO_18___d328 = (tUInt8)((tUInt8)3u & (DEF_crt2axi_crtS0_response_get___d306 >> 18u));
  DEF_crt2axi_crtS0_response_get_06_BITS_9_TO_8___d339 = (tUInt8)((tUInt8)3u & (DEF_crt2axi_crtS0_response_get___d306 >> 8u));
  switch (DEF_crt2axi_crtS0_response_get_06_BITS_9_TO_8___d339) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_9_TO_8_3_ETC___d345 = DEF_crt2axi_crtS0_response_get_06_BITS_9_TO_8___d339;
    break;
  default:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_9_TO_8_3_ETC___d345 = (tUInt8)3u;
  }
  switch (DEF_crt2axi_crtS0_response_get_06_BITS_19_TO_18___d328) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_19_TO_18_ETC___d334 = DEF_crt2axi_crtS0_response_get_06_BITS_19_TO_18___d328;
    break;
  default:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_19_TO_18_ETC___d334 = (tUInt8)3u;
  }
  switch (DEF_crt2axi_crtS0_response_get_06_BITS_29_TO_28___d317) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_29_TO_28_ETC___d323 = DEF_crt2axi_crtS0_response_get_06_BITS_29_TO_28___d317;
    break;
  default:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_29_TO_28_ETC___d323 = (tUInt8)3u;
  }
  switch (DEF_crt2axi_crtS0_response_get_06_BITS_39_TO_38___d307) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d313 = DEF_crt2axi_crtS0_response_get_06_BITS_39_TO_38___d307;
    break;
  default:
    DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d313 = (tUInt8)3u;
  }
  DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d349 = 1099511627775llu & ((((((((((tUInt64)(DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d313)) << 38u) | (((tUInt64)(DEF_crt2axi_crtS0_response_get_06_BITS_39_TO_38___d307 == (tUInt8)0u || DEF_crt2axi_crtS0_response_get_06_BITS_39_TO_38___d307 == (tUInt8)1u ? DEF_crt2axi_crtS0_response_get_06_BITS_37_TO_30___d315 : DEF_crt2axi_crtS0_response_get_06_BITS_37_TO_30___d315)) << 30u)) | (((tUInt64)(DEF_IF_crt2axi_crtS0_response_get_06_BITS_29_TO_28_ETC___d323)) << 28u)) | (((tUInt64)(DEF_crt2axi_crtS0_response_get_06_BITS_29_TO_28___d317 == (tUInt8)0u || DEF_crt2axi_crtS0_response_get_06_BITS_29_TO_28___d317 == (tUInt8)1u ? DEF_crt2axi_crtS0_response_get_06_BITS_27_TO_20___d325 : DEF_crt2axi_crtS0_response_get_06_BITS_27_TO_20___d325)) << 20u)) | (((tUInt64)(DEF_IF_crt2axi_crtS0_response_get_06_BITS_19_TO_18_ETC___d334)) << 18u)) | (((tUInt64)(DEF_crt2axi_crtS0_response_get_06_BITS_19_TO_18___d328 == (tUInt8)0u || DEF_crt2axi_crtS0_response_get_06_BITS_19_TO_18___d328 == (tUInt8)1u ? DEF_crt2axi_crtS0_response_get_06_BITS_17_TO_10___d336 : DEF_crt2axi_crtS0_response_get_06_BITS_17_TO_10___d336)) << 10u)) | (((tUInt64)(DEF_IF_crt2axi_crtS0_response_get_06_BITS_9_TO_8_3_ETC___d345)) << 8u)) | (tUInt64)(DEF_crt2axi_crtS0_response_get_06_BITS_9_TO_8___d339 == (tUInt8)0u || DEF_crt2axi_crtS0_response_get_06_BITS_9_TO_8___d339 == (tUInt8)1u ? DEF_crt2axi_crtS0_response_get_06_BITS_7_TO_0___d347 : DEF_crt2axi_crtS0_response_get_06_BITS_7_TO_0___d347));
  INST_qcl2_inF.METH_enq(DEF_IF_crt2axi_crtS0_response_get_06_BITS_39_TO_38_ETC___d349);
}

void MOD_mkHCrt_TB1::RL_mkConnectionGetPut_4()
{
  tUInt32 DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d364;
  tUInt8 DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d360;
  tUInt8 DEF_qcl2_outF_first__53_BITS_9_TO_8___d354;
  tUInt8 DEF_qcl2_outF_first__53_BITS_7_TO_0___d362;
  tUInt32 DEF_qcl2_outF_first____d353;
  DEF_qcl2_outF_first____d353 = INST_qcl2_outF.METH_first();
  DEF_qcl2_outF_first__53_BITS_7_TO_0___d362 = (tUInt8)((tUInt8)255u & DEF_qcl2_outF_first____d353);
  DEF_qcl2_outF_first__53_BITS_9_TO_8___d354 = (tUInt8)(DEF_qcl2_outF_first____d353 >> 8u);
  switch (DEF_qcl2_outF_first__53_BITS_9_TO_8___d354) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d360 = DEF_qcl2_outF_first__53_BITS_9_TO_8___d354;
    break;
  default:
    DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d360 = (tUInt8)3u;
  }
  DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d364 = 1023u & ((((tUInt32)(DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d360)) << 8u) | (tUInt32)(DEF_qcl2_outF_first__53_BITS_9_TO_8___d354 == (tUInt8)0u || DEF_qcl2_outF_first__53_BITS_9_TO_8___d354 == (tUInt8)1u ? DEF_qcl2_outF_first__53_BITS_7_TO_0___d362 : DEF_qcl2_outF_first__53_BITS_7_TO_0___d362));
  INST_qcl2_outF.METH_deq();
  INST_l2P.METH_client_response_put(DEF_IF_qcl2_outF_first__53_BITS_9_TO_8_54_EQ_0_55__ETC___d364);
}

void MOD_mkHCrt_TB1::RL_mkConnectionGetPut_5()
{
  tUInt32 DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d379;
  tUInt8 DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d375;
  tUInt8 DEF_l2P_server_response_get_68_BITS_9_TO_8___d369;
  tUInt8 DEF_l2P_server_response_get_68_BITS_7_TO_0___d377;
  tUInt32 DEF_l2P_server_response_get___d368;
  tUInt32 DEF_AVMeth_l2P_server_response_get;
  DEF_AVMeth_l2P_server_response_get = INST_l2P.METH_server_response_get();
  DEF_l2P_server_response_get___d368 = DEF_AVMeth_l2P_server_response_get;
  DEF_l2P_server_response_get_68_BITS_7_TO_0___d377 = (tUInt8)((tUInt8)255u & DEF_l2P_server_response_get___d368);
  DEF_l2P_server_response_get_68_BITS_9_TO_8___d369 = (tUInt8)(DEF_l2P_server_response_get___d368 >> 8u);
  switch (DEF_l2P_server_response_get_68_BITS_9_TO_8___d369) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)2u:
    DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d375 = DEF_l2P_server_response_get_68_BITS_9_TO_8___d369;
    break;
  default:
    DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d375 = (tUInt8)3u;
  }
  DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d379 = 1023u & ((((tUInt32)(DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d375)) << 8u) | (tUInt32)(DEF_l2P_server_response_get_68_BITS_9_TO_8___d369 == (tUInt8)0u || DEF_l2P_server_response_get_68_BITS_9_TO_8___d369 == (tUInt8)1u ? DEF_l2P_server_response_get_68_BITS_7_TO_0___d377 : DEF_l2P_server_response_get_68_BITS_7_TO_0___d377));
  INST_l2ConsumeF.METH_enq(DEF_IF_l2P_server_response_get_68_BITS_9_TO_8_69_E_ETC___d379);
}

void MOD_mkHCrt_TB1::RL_chomp_l2()
{
  tUInt32 DEF_consumeCnt_81_PLUS_1___d382;
  tUInt32 DEF_b__h14793;
  DEF_b__h14793 = INST_consumeCnt.METH_read();
  DEF_consumeCnt_81_PLUS_1___d382 = 65535u & (DEF_b__h14793 + 1u);
  INST_l2ConsumeF.METH_deq();
  INST_consumeCnt.METH_write(DEF_consumeCnt_81_PLUS_1___d382);
}

void MOD_mkHCrt_TB1::RL_doAlways()
{
  tUInt8 DEF_ARPROT__h15699;
  tUInt8 DEF_AWPROT__h15046;
  tUInt8 DEF_WSTRB__h15288;
  tUInt32 DEF_ARADDR__h15655;
  tUInt32 DEF_AWADDR__h15002;
  tUInt32 DEF_WDATA__h15244;
  tUInt8 DEF_crt2axi_axiM0_rdResp_ready____d402;
  tUInt8 DEF_crt2axi_axiM0_rdAddr_valid____d396;
  tUInt8 DEF_crt2axi_axiM0_wrResp_ready____d394;
  tUInt8 DEF_crt2axi_axiM0_wrData_valid____d388;
  tUInt8 DEF_crt2axi_axiM0_wrAddr_valid____d383;
  tUInt8 DEF_a4ls_sAWREADY____d384;
  tUInt8 DEF_a4ls_sWREADY____d389;
  tUInt8 DEF_a4ls_sBVALID____d393;
  tUInt8 DEF_a4ls_sARREADY____d397;
  tUInt8 DEF_a4ls_sRVALID____d401;
  tUInt8 DEF_arg_wresp__h15469;
  tUInt8 DEF_arg_rresp__h15919;
  tUInt32 DEF_arg_rdata__h15895;
  tUInt64 DEF_crt2axi_axiM0_rdAddr_data____d398;
  tUInt64 DEF_crt2axi_axiM0_wrAddr_data____d385;
  tUInt64 DEF_crt2axi_axiM0_wrData_data____d390;
  DEF_crt2axi_axiM0_wrData_data____d390 = INST_crt2axi.METH_axiM0_wrData_data();
  DEF_crt2axi_axiM0_wrAddr_data____d385 = INST_crt2axi.METH_axiM0_wrAddr_data();
  DEF_crt2axi_axiM0_rdAddr_data____d398 = INST_crt2axi.METH_axiM0_rdAddr_data();
  DEF_arg_rdata__h15895 = INST_a4ls.METH_sRDATA();
  DEF_arg_wresp__h15469 = INST_a4ls.METH_sBRESP();
  DEF_arg_rresp__h15919 = INST_a4ls.METH_sRRESP();
  DEF_a4ls_sRVALID____d401 = INST_a4ls.METH_sRVALID();
  DEF_a4ls_sARREADY____d397 = INST_a4ls.METH_sARREADY();
  DEF_a4ls_sBVALID____d393 = INST_a4ls.METH_sBVALID();
  DEF_a4ls_sWREADY____d389 = INST_a4ls.METH_sWREADY();
  DEF_a4ls_sAWREADY____d384 = INST_a4ls.METH_sAWREADY();
  DEF_crt2axi_axiM0_wrAddr_valid____d383 = INST_crt2axi.METH_axiM0_wrAddr_valid();
  DEF_crt2axi_axiM0_wrResp_ready____d394 = INST_crt2axi.METH_axiM0_wrResp_ready();
  DEF_crt2axi_axiM0_wrData_valid____d388 = INST_crt2axi.METH_axiM0_wrData_valid();
  DEF_crt2axi_axiM0_rdAddr_valid____d396 = INST_crt2axi.METH_axiM0_rdAddr_valid();
  DEF_crt2axi_axiM0_rdResp_ready____d402 = INST_crt2axi.METH_axiM0_rdResp_ready();
  DEF_WDATA__h15244 = (tUInt32)(DEF_crt2axi_axiM0_wrData_data____d390);
  DEF_ARADDR__h15655 = (tUInt32)(DEF_crt2axi_axiM0_rdAddr_data____d398);
  DEF_AWADDR__h15002 = (tUInt32)(DEF_crt2axi_axiM0_wrAddr_data____d385);
  DEF_WSTRB__h15288 = (tUInt8)(DEF_crt2axi_axiM0_wrData_data____d390 >> 32u);
  DEF_AWPROT__h15046 = (tUInt8)(DEF_crt2axi_axiM0_wrAddr_data____d385 >> 32u);
  DEF_ARPROT__h15699 = (tUInt8)(DEF_crt2axi_axiM0_rdAddr_data____d398 >> 32u);
  if (DEF_crt2axi_axiM0_wrAddr_valid____d383)
    INST_a4ls.METH_mAWVALID();
  if (DEF_a4ls_sAWREADY____d384)
    INST_a4lm_wrAddrRdy_w.METH_wset((tUInt8)1u);
  INST_a4ls.METH_mAWADDR(DEF_AWADDR__h15002);
  INST_a4ls.METH_mAWPROT(DEF_AWPROT__h15046);
  if (DEF_crt2axi_axiM0_wrData_valid____d388)
    INST_a4ls.METH_mWVALID();
  if (DEF_a4ls_sWREADY____d389)
    INST_a4lm_wrDataRdy_w.METH_wset((tUInt8)1u);
  INST_a4ls.METH_mWDATA(DEF_WDATA__h15244);
  INST_a4ls.METH_mWSTRB(DEF_WSTRB__h15288);
  if (DEF_a4ls_sBVALID____d393)
    INST_a4lm_wrRespVal_w.METH_wset((tUInt8)1u);
  if (DEF_crt2axi_axiM0_wrResp_ready____d394)
    INST_a4ls.METH_mBREADY();
  if (DEF_crt2axi_axiM0_rdAddr_valid____d396)
    INST_a4ls.METH_mARVALID();
  INST_a4lm_wrResp_w.METH_wset(DEF_arg_wresp__h15469);
  if (DEF_a4ls_sARREADY____d397)
    INST_a4lm_rdAddrRdy_w.METH_wset((tUInt8)1u);
  INST_a4ls.METH_mARADDR(DEF_ARADDR__h15655);
  INST_a4ls.METH_mARPROT(DEF_ARPROT__h15699);
  if (DEF_a4ls_sRVALID____d401)
    INST_a4lm_rdRespVal_w.METH_wset((tUInt8)1u);
  if (DEF_crt2axi_axiM0_rdResp_ready____d402)
    INST_a4ls.METH_mRREADY();
  INST_a4lm_rdData_w.METH_wset(DEF_arg_rdata__h15895);
  INST_a4lm_rdResp_w.METH_wset(DEF_arg_rresp__h15919);
}

void MOD_mkHCrt_TB1::RL_advance_cycleCount()
{
  tUInt32 DEF_cycleCount_05_PLUS_1___d406;
  DEF_b__h15983 = INST_cycleCount.METH_read();
  DEF_cycleCount_05_PLUS_1___d406 = 65535u & (DEF_b__h15983 + 1u);
  INST_cycleCount.METH_write(DEF_cycleCount_05_PLUS_1___d406);
}

void MOD_mkHCrt_TB1::RL_terminate()
{
  tUInt32 DEF_unsigned_cycleCount_05___d409;
  DEF_b__h15983 = INST_cycleCount.METH_read();
  DEF_unsigned_cycleCount_05___d409 = DEF_b__h15983;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h16005 = dollar_time(sim_hdl);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_display(sim_hdl,
		   this,
		   "s,64,16",
		   &__str_literal_1,
		   DEF_v__h16005,
		   DEF_unsigned_cycleCount_05___d409);
    dollar_finish(sim_hdl, "32", 1u);
  }
}


/* Methods */


/* Reset routines */

void MOD_mkHCrt_TB1::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_qcl2_ptr.reset_RST(ARG_rst_in);
  INST_qcl2_outF.reset_RST(ARG_rst_in);
  INST_qcl2_inF.reset_RST(ARG_rst_in);
  INST_l2qc_ptr.reset_RST(ARG_rst_in);
  INST_l2qc_outF.reset_RST(ARG_rst_in);
  INST_l2qc_inF.reset_RST(ARG_rst_in);
  INST_l2P.reset_RST_N(ARG_rst_in);
  INST_l2GenF.reset_RST(ARG_rst_in);
  INST_l2ConsumeF.reset_RST(ARG_rst_in);
  INST_gqPtr.reset_RST(ARG_rst_in);
  INST_gpPtr.reset_RST(ARG_rst_in);
  INST_gpPDU.reset_RST(ARG_rst_in);
  INST_gpL2Hdr.reset_RST(ARG_rst_in);
  INST_cycleCount.reset_RST(ARG_rst_in);
  INST_crt2axi.reset_RST_N(ARG_rst_in);
  INST_consumeCnt.reset_RST(ARG_rst_in);
  INST_a4ls.reset_ARESETN(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkHCrt_TB1::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkHCrt_TB1::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_a4lm_rdAddrRdy_w.dump_state(indent + 2u);
  INST_a4lm_rdData_w.dump_state(indent + 2u);
  INST_a4lm_rdRespVal_w.dump_state(indent + 2u);
  INST_a4lm_rdResp_w.dump_state(indent + 2u);
  INST_a4lm_wrAddrRdy_w.dump_state(indent + 2u);
  INST_a4lm_wrDataRdy_w.dump_state(indent + 2u);
  INST_a4lm_wrRespVal_w.dump_state(indent + 2u);
  INST_a4lm_wrResp_w.dump_state(indent + 2u);
  INST_a4ls.dump_state(indent + 2u);
  INST_consumeCnt.dump_state(indent + 2u);
  INST_crt2axi.dump_state(indent + 2u);
  INST_cycleCount.dump_state(indent + 2u);
  INST_gpDA.dump_state(indent + 2u);
  INST_gpL2Hdr.dump_state(indent + 2u);
  INST_gpPDU.dump_state(indent + 2u);
  INST_gpPtr.dump_state(indent + 2u);
  INST_gpSA.dump_state(indent + 2u);
  INST_gqPtr.dump_state(indent + 2u);
  INST_l2ConsumeF.dump_state(indent + 2u);
  INST_l2GenF.dump_state(indent + 2u);
  INST_l2P.dump_state(indent + 2u);
  INST_l2qc_inF.dump_state(indent + 2u);
  INST_l2qc_outF.dump_state(indent + 2u);
  INST_l2qc_ptr.dump_state(indent + 2u);
  INST_l2qc_sr.dump_state(indent + 2u);
  INST_qcl2_inF.dump_state(indent + 2u);
  INST_qcl2_outF.dump_state(indent + 2u);
  INST_qcl2_ptr.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkHCrt_TB1::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 69u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4lm_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_advance_cycleCount", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_chomp_l2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_l2_gen_header", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_l2_gen_payload", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_l2qc_unfunnel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_3", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_4", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_5", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_qcl2_funnel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_terminate", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4lm_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_advance_cycleCount", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_chomp_l2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_l2_gen_header", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_l2_gen_payload", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_l2qc_unfunnel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_3", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_4", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_5", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_qcl2_funnel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_terminate", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h15983", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h7397", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h9294", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr_6_EQ_0___d27", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr_6_EQ_13___d28", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr_6_EQ_14___d55", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gpPtr__h2001", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gqPtr_03_EQ_7___d117", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "l2qc_inF_first__58_BITS_9_TO_8___d159", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "l2qc_inF_first____d158", 10u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "l2qc_ptr_55_EQ_3___d156", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h16005", 64u);
  num = INST_a4lm_rdAddrRdy_w.dump_VCD_defs(num);
  num = INST_a4lm_rdData_w.dump_VCD_defs(num);
  num = INST_a4lm_rdRespVal_w.dump_VCD_defs(num);
  num = INST_a4lm_rdResp_w.dump_VCD_defs(num);
  num = INST_a4lm_wrAddrRdy_w.dump_VCD_defs(num);
  num = INST_a4lm_wrDataRdy_w.dump_VCD_defs(num);
  num = INST_a4lm_wrRespVal_w.dump_VCD_defs(num);
  num = INST_a4lm_wrResp_w.dump_VCD_defs(num);
  num = INST_consumeCnt.dump_VCD_defs(num);
  num = INST_cycleCount.dump_VCD_defs(num);
  num = INST_gpDA.dump_VCD_defs(num);
  num = INST_gpL2Hdr.dump_VCD_defs(num);
  num = INST_gpPDU.dump_VCD_defs(num);
  num = INST_gpPtr.dump_VCD_defs(num);
  num = INST_gpSA.dump_VCD_defs(num);
  num = INST_gqPtr.dump_VCD_defs(num);
  num = INST_l2ConsumeF.dump_VCD_defs(num);
  num = INST_l2GenF.dump_VCD_defs(num);
  num = INST_l2qc_inF.dump_VCD_defs(num);
  num = INST_l2qc_outF.dump_VCD_defs(num);
  num = INST_l2qc_ptr.dump_VCD_defs(num);
  num = INST_l2qc_sr.dump_VCD_defs(num);
  num = INST_qcl2_inF.dump_VCD_defs(num);
  num = INST_qcl2_outF.dump_VCD_defs(num);
  num = INST_qcl2_ptr.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_a4ls.dump_VCD_defs(l);
    num = INST_crt2axi.dump_VCD_defs(l);
    num = INST_l2P.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkHCrt_TB1::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkHCrt_TB1 &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkHCrt_TB1::vcd_defs(tVCDDumpType dt, MOD_mkHCrt_TB1 &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 10u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_a4lm_doAlways) != DEF_CAN_FIRE_RL_a4lm_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4lm_doAlways, 1u);
	backing.DEF_CAN_FIRE_RL_a4lm_doAlways = DEF_CAN_FIRE_RL_a4lm_doAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_advance_cycleCount) != DEF_CAN_FIRE_RL_advance_cycleCount)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_advance_cycleCount, 1u);
	backing.DEF_CAN_FIRE_RL_advance_cycleCount = DEF_CAN_FIRE_RL_advance_cycleCount;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_chomp_l2) != DEF_CAN_FIRE_RL_chomp_l2)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_chomp_l2, 1u);
	backing.DEF_CAN_FIRE_RL_chomp_l2 = DEF_CAN_FIRE_RL_chomp_l2;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_doAlways) != DEF_CAN_FIRE_RL_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_doAlways, 1u);
	backing.DEF_CAN_FIRE_RL_doAlways = DEF_CAN_FIRE_RL_doAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_l2_gen_header) != DEF_CAN_FIRE_RL_l2_gen_header)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_l2_gen_header, 1u);
	backing.DEF_CAN_FIRE_RL_l2_gen_header = DEF_CAN_FIRE_RL_l2_gen_header;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_l2_gen_payload) != DEF_CAN_FIRE_RL_l2_gen_payload)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_l2_gen_payload, 1u);
	backing.DEF_CAN_FIRE_RL_l2_gen_payload = DEF_CAN_FIRE_RL_l2_gen_payload;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_l2qc_unfunnel) != DEF_CAN_FIRE_RL_l2qc_unfunnel)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_l2qc_unfunnel, 1u);
	backing.DEF_CAN_FIRE_RL_l2qc_unfunnel = DEF_CAN_FIRE_RL_l2qc_unfunnel;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut) != DEF_CAN_FIRE_RL_mkConnectionGetPut)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut = DEF_CAN_FIRE_RL_mkConnectionGetPut;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1) != DEF_CAN_FIRE_RL_mkConnectionGetPut_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_1, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2) != DEF_CAN_FIRE_RL_mkConnectionGetPut_2)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_2, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2 = DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_3) != DEF_CAN_FIRE_RL_mkConnectionGetPut_3)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_3, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_3 = DEF_CAN_FIRE_RL_mkConnectionGetPut_3;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_4) != DEF_CAN_FIRE_RL_mkConnectionGetPut_4)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_4, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_4 = DEF_CAN_FIRE_RL_mkConnectionGetPut_4;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_5) != DEF_CAN_FIRE_RL_mkConnectionGetPut_5)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_5, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_5 = DEF_CAN_FIRE_RL_mkConnectionGetPut_5;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_qcl2_funnel) != DEF_CAN_FIRE_RL_qcl2_funnel)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_qcl2_funnel, 1u);
	backing.DEF_CAN_FIRE_RL_qcl2_funnel = DEF_CAN_FIRE_RL_qcl2_funnel;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_terminate) != DEF_CAN_FIRE_RL_terminate)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_terminate, 1u);
	backing.DEF_CAN_FIRE_RL_terminate = DEF_CAN_FIRE_RL_terminate;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4lm_doAlways) != DEF_WILL_FIRE_RL_a4lm_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4lm_doAlways, 1u);
	backing.DEF_WILL_FIRE_RL_a4lm_doAlways = DEF_WILL_FIRE_RL_a4lm_doAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_advance_cycleCount) != DEF_WILL_FIRE_RL_advance_cycleCount)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_advance_cycleCount, 1u);
	backing.DEF_WILL_FIRE_RL_advance_cycleCount = DEF_WILL_FIRE_RL_advance_cycleCount;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_chomp_l2) != DEF_WILL_FIRE_RL_chomp_l2)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_chomp_l2, 1u);
	backing.DEF_WILL_FIRE_RL_chomp_l2 = DEF_WILL_FIRE_RL_chomp_l2;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_doAlways) != DEF_WILL_FIRE_RL_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_doAlways, 1u);
	backing.DEF_WILL_FIRE_RL_doAlways = DEF_WILL_FIRE_RL_doAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_l2_gen_header) != DEF_WILL_FIRE_RL_l2_gen_header)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_l2_gen_header, 1u);
	backing.DEF_WILL_FIRE_RL_l2_gen_header = DEF_WILL_FIRE_RL_l2_gen_header;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_l2_gen_payload) != DEF_WILL_FIRE_RL_l2_gen_payload)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_l2_gen_payload, 1u);
	backing.DEF_WILL_FIRE_RL_l2_gen_payload = DEF_WILL_FIRE_RL_l2_gen_payload;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_l2qc_unfunnel) != DEF_WILL_FIRE_RL_l2qc_unfunnel)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_l2qc_unfunnel, 1u);
	backing.DEF_WILL_FIRE_RL_l2qc_unfunnel = DEF_WILL_FIRE_RL_l2qc_unfunnel;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut) != DEF_WILL_FIRE_RL_mkConnectionGetPut)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_WILL_FIRE_RL_mkConnectionGetPut;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1) != DEF_WILL_FIRE_RL_mkConnectionGetPut_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_1, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2) != DEF_WILL_FIRE_RL_mkConnectionGetPut_2)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_2, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2 = DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_3) != DEF_WILL_FIRE_RL_mkConnectionGetPut_3)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_3, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_3 = DEF_WILL_FIRE_RL_mkConnectionGetPut_3;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_4) != DEF_WILL_FIRE_RL_mkConnectionGetPut_4)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_4, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_4 = DEF_WILL_FIRE_RL_mkConnectionGetPut_4;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_5) != DEF_WILL_FIRE_RL_mkConnectionGetPut_5)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_5, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_5 = DEF_WILL_FIRE_RL_mkConnectionGetPut_5;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_qcl2_funnel) != DEF_WILL_FIRE_RL_qcl2_funnel)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_qcl2_funnel, 1u);
	backing.DEF_WILL_FIRE_RL_qcl2_funnel = DEF_WILL_FIRE_RL_qcl2_funnel;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_terminate) != DEF_WILL_FIRE_RL_terminate)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_terminate, 1u);
	backing.DEF_WILL_FIRE_RL_terminate = DEF_WILL_FIRE_RL_terminate;
      }
      ++num;
      if ((backing.DEF_b__h15983) != DEF_b__h15983)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h15983, 16u);
	backing.DEF_b__h15983 = DEF_b__h15983;
      }
      ++num;
      if ((backing.DEF_b__h7397) != DEF_b__h7397)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h7397, 4u);
	backing.DEF_b__h7397 = DEF_b__h7397;
      }
      ++num;
      if ((backing.DEF_b__h9294) != DEF_b__h9294)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h9294, 2u);
	backing.DEF_b__h9294 = DEF_b__h9294;
      }
      ++num;
      if ((backing.DEF_gpPtr_6_EQ_0___d27) != DEF_gpPtr_6_EQ_0___d27)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr_6_EQ_0___d27, 1u);
	backing.DEF_gpPtr_6_EQ_0___d27 = DEF_gpPtr_6_EQ_0___d27;
      }
      ++num;
      if ((backing.DEF_gpPtr_6_EQ_13___d28) != DEF_gpPtr_6_EQ_13___d28)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr_6_EQ_13___d28, 1u);
	backing.DEF_gpPtr_6_EQ_13___d28 = DEF_gpPtr_6_EQ_13___d28;
      }
      ++num;
      if ((backing.DEF_gpPtr_6_EQ_14___d55) != DEF_gpPtr_6_EQ_14___d55)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr_6_EQ_14___d55, 1u);
	backing.DEF_gpPtr_6_EQ_14___d55 = DEF_gpPtr_6_EQ_14___d55;
      }
      ++num;
      if ((backing.DEF_gpPtr__h2001) != DEF_gpPtr__h2001)
      {
	vcd_write_val(sim_hdl, num, DEF_gpPtr__h2001, 4u);
	backing.DEF_gpPtr__h2001 = DEF_gpPtr__h2001;
      }
      ++num;
      if ((backing.DEF_gqPtr_03_EQ_7___d117) != DEF_gqPtr_03_EQ_7___d117)
      {
	vcd_write_val(sim_hdl, num, DEF_gqPtr_03_EQ_7___d117, 1u);
	backing.DEF_gqPtr_03_EQ_7___d117 = DEF_gqPtr_03_EQ_7___d117;
      }
      ++num;
      if ((backing.DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160) != DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160)
      {
	vcd_write_val(sim_hdl, num, DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160, 1u);
	backing.DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160 = DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160;
      }
      ++num;
      if ((backing.DEF_l2qc_inF_first__58_BITS_9_TO_8___d159) != DEF_l2qc_inF_first__58_BITS_9_TO_8___d159)
      {
	vcd_write_val(sim_hdl, num, DEF_l2qc_inF_first__58_BITS_9_TO_8___d159, 2u);
	backing.DEF_l2qc_inF_first__58_BITS_9_TO_8___d159 = DEF_l2qc_inF_first__58_BITS_9_TO_8___d159;
      }
      ++num;
      if ((backing.DEF_l2qc_inF_first____d158) != DEF_l2qc_inF_first____d158)
      {
	vcd_write_val(sim_hdl, num, DEF_l2qc_inF_first____d158, 10u);
	backing.DEF_l2qc_inF_first____d158 = DEF_l2qc_inF_first____d158;
      }
      ++num;
      if ((backing.DEF_l2qc_ptr_55_EQ_3___d156) != DEF_l2qc_ptr_55_EQ_3___d156)
      {
	vcd_write_val(sim_hdl, num, DEF_l2qc_ptr_55_EQ_3___d156, 1u);
	backing.DEF_l2qc_ptr_55_EQ_3___d156 = DEF_l2qc_ptr_55_EQ_3___d156;
      }
      ++num;
      if ((backing.DEF_v__h16005) != DEF_v__h16005)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h16005, 64u);
	backing.DEF_v__h16005 = DEF_v__h16005;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4lm_doAlways, 1u);
      backing.DEF_CAN_FIRE_RL_a4lm_doAlways = DEF_CAN_FIRE_RL_a4lm_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_advance_cycleCount, 1u);
      backing.DEF_CAN_FIRE_RL_advance_cycleCount = DEF_CAN_FIRE_RL_advance_cycleCount;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_chomp_l2, 1u);
      backing.DEF_CAN_FIRE_RL_chomp_l2 = DEF_CAN_FIRE_RL_chomp_l2;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_doAlways, 1u);
      backing.DEF_CAN_FIRE_RL_doAlways = DEF_CAN_FIRE_RL_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_l2_gen_header, 1u);
      backing.DEF_CAN_FIRE_RL_l2_gen_header = DEF_CAN_FIRE_RL_l2_gen_header;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_l2_gen_payload, 1u);
      backing.DEF_CAN_FIRE_RL_l2_gen_payload = DEF_CAN_FIRE_RL_l2_gen_payload;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_l2qc_unfunnel, 1u);
      backing.DEF_CAN_FIRE_RL_l2qc_unfunnel = DEF_CAN_FIRE_RL_l2qc_unfunnel;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut = DEF_CAN_FIRE_RL_mkConnectionGetPut;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_1, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_2, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2 = DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_3, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_3 = DEF_CAN_FIRE_RL_mkConnectionGetPut_3;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_4, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_4 = DEF_CAN_FIRE_RL_mkConnectionGetPut_4;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_5, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_5 = DEF_CAN_FIRE_RL_mkConnectionGetPut_5;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_qcl2_funnel, 1u);
      backing.DEF_CAN_FIRE_RL_qcl2_funnel = DEF_CAN_FIRE_RL_qcl2_funnel;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_terminate, 1u);
      backing.DEF_CAN_FIRE_RL_terminate = DEF_CAN_FIRE_RL_terminate;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4lm_doAlways, 1u);
      backing.DEF_WILL_FIRE_RL_a4lm_doAlways = DEF_WILL_FIRE_RL_a4lm_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_advance_cycleCount, 1u);
      backing.DEF_WILL_FIRE_RL_advance_cycleCount = DEF_WILL_FIRE_RL_advance_cycleCount;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_chomp_l2, 1u);
      backing.DEF_WILL_FIRE_RL_chomp_l2 = DEF_WILL_FIRE_RL_chomp_l2;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_doAlways, 1u);
      backing.DEF_WILL_FIRE_RL_doAlways = DEF_WILL_FIRE_RL_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_l2_gen_header, 1u);
      backing.DEF_WILL_FIRE_RL_l2_gen_header = DEF_WILL_FIRE_RL_l2_gen_header;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_l2_gen_payload, 1u);
      backing.DEF_WILL_FIRE_RL_l2_gen_payload = DEF_WILL_FIRE_RL_l2_gen_payload;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_l2qc_unfunnel, 1u);
      backing.DEF_WILL_FIRE_RL_l2qc_unfunnel = DEF_WILL_FIRE_RL_l2qc_unfunnel;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_WILL_FIRE_RL_mkConnectionGetPut;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_1, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_2, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2 = DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_3, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_3 = DEF_WILL_FIRE_RL_mkConnectionGetPut_3;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_4, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_4 = DEF_WILL_FIRE_RL_mkConnectionGetPut_4;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_5, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_5 = DEF_WILL_FIRE_RL_mkConnectionGetPut_5;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_qcl2_funnel, 1u);
      backing.DEF_WILL_FIRE_RL_qcl2_funnel = DEF_WILL_FIRE_RL_qcl2_funnel;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_terminate, 1u);
      backing.DEF_WILL_FIRE_RL_terminate = DEF_WILL_FIRE_RL_terminate;
      vcd_write_val(sim_hdl, num++, DEF_b__h15983, 16u);
      backing.DEF_b__h15983 = DEF_b__h15983;
      vcd_write_val(sim_hdl, num++, DEF_b__h7397, 4u);
      backing.DEF_b__h7397 = DEF_b__h7397;
      vcd_write_val(sim_hdl, num++, DEF_b__h9294, 2u);
      backing.DEF_b__h9294 = DEF_b__h9294;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr_6_EQ_0___d27, 1u);
      backing.DEF_gpPtr_6_EQ_0___d27 = DEF_gpPtr_6_EQ_0___d27;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr_6_EQ_13___d28, 1u);
      backing.DEF_gpPtr_6_EQ_13___d28 = DEF_gpPtr_6_EQ_13___d28;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr_6_EQ_14___d55, 1u);
      backing.DEF_gpPtr_6_EQ_14___d55 = DEF_gpPtr_6_EQ_14___d55;
      vcd_write_val(sim_hdl, num++, DEF_gpPtr__h2001, 4u);
      backing.DEF_gpPtr__h2001 = DEF_gpPtr__h2001;
      vcd_write_val(sim_hdl, num++, DEF_gqPtr_03_EQ_7___d117, 1u);
      backing.DEF_gqPtr_03_EQ_7___d117 = DEF_gqPtr_03_EQ_7___d117;
      vcd_write_val(sim_hdl, num++, DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160, 1u);
      backing.DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160 = DEF_l2qc_inF_first__58_BITS_9_TO_8_59_EQ_0___d160;
      vcd_write_val(sim_hdl, num++, DEF_l2qc_inF_first__58_BITS_9_TO_8___d159, 2u);
      backing.DEF_l2qc_inF_first__58_BITS_9_TO_8___d159 = DEF_l2qc_inF_first__58_BITS_9_TO_8___d159;
      vcd_write_val(sim_hdl, num++, DEF_l2qc_inF_first____d158, 10u);
      backing.DEF_l2qc_inF_first____d158 = DEF_l2qc_inF_first____d158;
      vcd_write_val(sim_hdl, num++, DEF_l2qc_ptr_55_EQ_3___d156, 1u);
      backing.DEF_l2qc_ptr_55_EQ_3___d156 = DEF_l2qc_ptr_55_EQ_3___d156;
      vcd_write_val(sim_hdl, num++, DEF_v__h16005, 64u);
      backing.DEF_v__h16005 = DEF_v__h16005;
    }
}

void MOD_mkHCrt_TB1::vcd_prims(tVCDDumpType dt, MOD_mkHCrt_TB1 &backing)
{
  INST_a4lm_rdAddrRdy_w.dump_VCD(dt, backing.INST_a4lm_rdAddrRdy_w);
  INST_a4lm_rdData_w.dump_VCD(dt, backing.INST_a4lm_rdData_w);
  INST_a4lm_rdRespVal_w.dump_VCD(dt, backing.INST_a4lm_rdRespVal_w);
  INST_a4lm_rdResp_w.dump_VCD(dt, backing.INST_a4lm_rdResp_w);
  INST_a4lm_wrAddrRdy_w.dump_VCD(dt, backing.INST_a4lm_wrAddrRdy_w);
  INST_a4lm_wrDataRdy_w.dump_VCD(dt, backing.INST_a4lm_wrDataRdy_w);
  INST_a4lm_wrRespVal_w.dump_VCD(dt, backing.INST_a4lm_wrRespVal_w);
  INST_a4lm_wrResp_w.dump_VCD(dt, backing.INST_a4lm_wrResp_w);
  INST_consumeCnt.dump_VCD(dt, backing.INST_consumeCnt);
  INST_cycleCount.dump_VCD(dt, backing.INST_cycleCount);
  INST_gpDA.dump_VCD(dt, backing.INST_gpDA);
  INST_gpL2Hdr.dump_VCD(dt, backing.INST_gpL2Hdr);
  INST_gpPDU.dump_VCD(dt, backing.INST_gpPDU);
  INST_gpPtr.dump_VCD(dt, backing.INST_gpPtr);
  INST_gpSA.dump_VCD(dt, backing.INST_gpSA);
  INST_gqPtr.dump_VCD(dt, backing.INST_gqPtr);
  INST_l2ConsumeF.dump_VCD(dt, backing.INST_l2ConsumeF);
  INST_l2GenF.dump_VCD(dt, backing.INST_l2GenF);
  INST_l2qc_inF.dump_VCD(dt, backing.INST_l2qc_inF);
  INST_l2qc_outF.dump_VCD(dt, backing.INST_l2qc_outF);
  INST_l2qc_ptr.dump_VCD(dt, backing.INST_l2qc_ptr);
  INST_l2qc_sr.dump_VCD(dt, backing.INST_l2qc_sr);
  INST_qcl2_inF.dump_VCD(dt, backing.INST_qcl2_inF);
  INST_qcl2_outF.dump_VCD(dt, backing.INST_qcl2_outF);
  INST_qcl2_ptr.dump_VCD(dt, backing.INST_qcl2_ptr);
}

void MOD_mkHCrt_TB1::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkHCrt_TB1 &backing)
{
  INST_a4ls.dump_VCD(dt, levels, backing.INST_a4ls);
  INST_crt2axi.dump_VCD(dt, levels, backing.INST_crt2axi);
  INST_l2P.dump_VCD(dt, levels, backing.INST_l2P);
}
