/*
 * Generated by Bluespec Compiler, version 2013.01.beta5 (build 30325, 2013-01-23)
 * 
 * On Thu Feb  7 14:01:24 EST 2013
 * 
 */
#include "bluesim_primitives.h"
#include "mkA4LS.h"


/* String declarations */
static std::string const __str_literal_2("[%0d]: %m: AXI4-LITE CONFIG READ Addr:%0x", 41u);
static std::string const __str_literal_3("[%0d]: %m: AXI4-LITE CONFIG READ RESPOSNE Data:%0x", 50u);
static std::string const __str_literal_1("[%0d]: %m: AXI4-LITE CONFIG WRITE Addr:%0x BE:%0x Data:%0x",
					 58u);


/* Constructor */
MOD_mkA4LS::MOD_mkA4LS(tSimStateHdl simHdl,
		       char const *name,
		       Module *parent,
		       tUInt8 ARG_hasDebugLogic)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    PARAM_hasDebugLogic(ARG_hasDebugLogic),
    INST_a4l_a4rdAddr_data_wire(simHdl, "a4l_a4rdAddr_data_wire", this, 35u, (tUInt8)0u),
    INST_a4l_a4rdAddr_enq_enq(simHdl, "a4l_a4rdAddr_enq_enq", this, 0u),
    INST_a4l_a4rdAddr_enq_valid(simHdl, "a4l_a4rdAddr_enq_valid", this, 0u),
    INST_a4l_a4rdAddr_fifof(simHdl, "a4l_a4rdAddr_fifof", this, 35u, 2u, 1u, 0u),
    INST_a4l_a4rdResp_deq_deq(simHdl, "a4l_a4rdResp_deq_deq", this, 0u),
    INST_a4l_a4rdResp_deq_ready(simHdl, "a4l_a4rdResp_deq_ready", this, 0u),
    INST_a4l_a4rdResp_fifof_cntr_r(simHdl,
				   "a4l_a4rdResp_fifof_cntr_r",
				   this,
				   2u,
				   (tUInt8)0u,
				   (tUInt8)0u),
    INST_a4l_a4rdResp_fifof_dequeueing(simHdl, "a4l_a4rdResp_fifof_dequeueing", this, 0u),
    INST_a4l_a4rdResp_fifof_enqueueing(simHdl, "a4l_a4rdResp_fifof_enqueueing", this, 0u),
    INST_a4l_a4rdResp_fifof_q_0(simHdl, "a4l_a4rdResp_fifof_q_0", this, 34u, 0llu, (tUInt8)0u),
    INST_a4l_a4rdResp_fifof_q_1(simHdl, "a4l_a4rdResp_fifof_q_1", this, 34u, 0llu, (tUInt8)0u),
    INST_a4l_a4rdResp_fifof_x_wire(simHdl, "a4l_a4rdResp_fifof_x_wire", this, 34u, (tUInt8)0u),
    INST_a4l_a4wrAddr_data_wire(simHdl, "a4l_a4wrAddr_data_wire", this, 35u, (tUInt8)0u),
    INST_a4l_a4wrAddr_enq_enq(simHdl, "a4l_a4wrAddr_enq_enq", this, 0u),
    INST_a4l_a4wrAddr_enq_valid(simHdl, "a4l_a4wrAddr_enq_valid", this, 0u),
    INST_a4l_a4wrAddr_fifof(simHdl, "a4l_a4wrAddr_fifof", this, 35u, 2u, 1u, 0u),
    INST_a4l_a4wrData_data_wire(simHdl, "a4l_a4wrData_data_wire", this, 36u, (tUInt8)0u),
    INST_a4l_a4wrData_enq_enq(simHdl, "a4l_a4wrData_enq_enq", this, 0u),
    INST_a4l_a4wrData_enq_valid(simHdl, "a4l_a4wrData_enq_valid", this, 0u),
    INST_a4l_a4wrData_fifof(simHdl, "a4l_a4wrData_fifof", this, 36u, 2u, 1u, 0u),
    INST_a4l_a4wrResp_deq_deq(simHdl, "a4l_a4wrResp_deq_deq", this, 0u),
    INST_a4l_a4wrResp_deq_ready(simHdl, "a4l_a4wrResp_deq_ready", this, 0u),
    INST_a4l_a4wrResp_fifof_cntr_r(simHdl,
				   "a4l_a4wrResp_fifof_cntr_r",
				   this,
				   2u,
				   (tUInt8)0u,
				   (tUInt8)0u),
    INST_a4l_a4wrResp_fifof_dequeueing(simHdl, "a4l_a4wrResp_fifof_dequeueing", this, 0u),
    INST_a4l_a4wrResp_fifof_enqueueing(simHdl, "a4l_a4wrResp_fifof_enqueueing", this, 0u),
    INST_a4l_a4wrResp_fifof_q_0(simHdl, "a4l_a4wrResp_fifof_q_0", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_a4l_a4wrResp_fifof_q_1(simHdl, "a4l_a4wrResp_fifof_q_1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_a4l_a4wrResp_fifof_x_wire(simHdl, "a4l_a4wrResp_fifof_x_wire", this, 2u, (tUInt8)0u),
    INST_a4ls_rdAddrVal_w(simHdl, "a4ls_rdAddrVal_w", this, 1u, (tUInt8)0u),
    INST_a4ls_rdAddr_w(simHdl, "a4ls_rdAddr_w", this, 32u, (tUInt8)0u),
    INST_a4ls_rdProt_w(simHdl, "a4ls_rdProt_w", this, 3u, (tUInt8)0u),
    INST_a4ls_rdRespRdy_w(simHdl, "a4ls_rdRespRdy_w", this, 1u, (tUInt8)0u),
    INST_a4ls_wrAddrVal_w(simHdl, "a4ls_wrAddrVal_w", this, 1u, (tUInt8)0u),
    INST_a4ls_wrAddr_w(simHdl, "a4ls_wrAddr_w", this, 32u, (tUInt8)0u),
    INST_a4ls_wrDataVal_w(simHdl, "a4ls_wrDataVal_w", this, 1u, (tUInt8)0u),
    INST_a4ls_wrData_w(simHdl, "a4ls_wrData_w", this, 32u, (tUInt8)0u),
    INST_a4ls_wrProt_w(simHdl, "a4ls_wrProt_w", this, 3u, (tUInt8)0u),
    INST_a4ls_wrRespRdy_w(simHdl, "a4ls_wrRespRdy_w", this, 1u, (tUInt8)0u),
    INST_a4ls_wrStrb_w(simHdl, "a4ls_wrStrb_w", this, 4u, (tUInt8)0u),
    INST_b18(simHdl, "b18", this, 8u, (tUInt8)24u, (tUInt8)0u),
    INST_b19(simHdl, "b19", this, 8u, (tUInt8)25u, (tUInt8)0u),
    INST_b1A(simHdl, "b1A", this, 8u, (tUInt8)26u, (tUInt8)0u),
    INST_b1B(simHdl, "b1B", this, 8u, (tUInt8)27u, (tUInt8)0u),
    INST_lastReadAddr(simHdl, "lastReadAddr", this, 32u, 0u, (tUInt8)0u),
    INST_lastWriteAddr(simHdl, "lastWriteAddr", this, 32u, 0u, (tUInt8)0u),
    INST_r0(simHdl, "r0", this, 32u, 0u, (tUInt8)0u),
    INST_r4(simHdl, "r4", this, 32u, 0u, (tUInt8)0u),
    PORT_ARESETN((tUInt8)1u),
    DEF_v__h4616(12297829382473034410llu),
    DEF_v__h4584(12297829382473034410llu),
    DEF_v__h4318(12297829382473034410llu)
{
  PORT_AWVALID = false;
  PORT_WVALID = false;
  PORT_BREADY = false;
  PORT_ARVALID = false;
  PORT_RREADY = false;
  PORT_AWADDR = 0u;
  PORT_AWPROT = 0u;
  PORT_WDATA = 0u;
  PORT_WSTRB = 0u;
  PORT_ARADDR = 0u;
  PORT_ARPROT = 0u;
  PORT_AWREADY = false;
  PORT_WREADY = false;
  PORT_BVALID = false;
  PORT_BRESP = 0u;
  PORT_ARREADY = false;
  PORT_RVALID = false;
  PORT_RDATA = 0u;
  PORT_RRESP = 0u;
  PORT_RDY_mAWVALID = false;
  PORT_RDY_sAWREADY = false;
  PORT_RDY_mAWADDR = false;
  PORT_RDY_mAWPROT = false;
  PORT_RDY_mWVALID = false;
  PORT_RDY_sWREADY = false;
  PORT_RDY_mWDATA = false;
  PORT_RDY_mWSTRB = false;
  PORT_RDY_sBVALID = false;
  PORT_RDY_mBREADY = false;
  PORT_RDY_sBRESP = false;
  PORT_RDY_mARVALID = false;
  PORT_RDY_sARREADY = false;
  PORT_RDY_mARADDR = false;
  PORT_RDY_mARPROT = false;
  PORT_RDY_sRVALID = false;
  PORT_RDY_mRREADY = false;
  PORT_RDY_sRDATA = false;
  PORT_RDY_sRRESP = false;
  symbol_count = 160u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkA4LS::init_symbols_0()
{
  init_symbol(&symbols[0u], "ARADDR", SYM_PORT, &PORT_ARADDR, 32u);
  init_symbol(&symbols[1u], "ARPROT", SYM_PORT, &PORT_ARPROT, 3u);
  init_symbol(&symbols[2u], "ARREADY", SYM_PORT, &PORT_ARREADY, 1u);
  init_symbol(&symbols[3u], "ARVALID", SYM_PORT, &PORT_ARVALID, 1u);
  init_symbol(&symbols[4u], "AWADDR", SYM_PORT, &PORT_AWADDR, 32u);
  init_symbol(&symbols[5u], "AWPROT", SYM_PORT, &PORT_AWPROT, 3u);
  init_symbol(&symbols[6u], "AWREADY", SYM_PORT, &PORT_AWREADY, 1u);
  init_symbol(&symbols[7u], "AWVALID", SYM_PORT, &PORT_AWVALID, 1u);
  init_symbol(&symbols[8u], "a4l_a4rdAddr_data_wire", SYM_MODULE, &INST_a4l_a4rdAddr_data_wire);
  init_symbol(&symbols[9u], "a4l_a4rdAddr_enq_enq", SYM_MODULE, &INST_a4l_a4rdAddr_enq_enq);
  init_symbol(&symbols[10u], "a4l_a4rdAddr_enq_valid", SYM_MODULE, &INST_a4l_a4rdAddr_enq_valid);
  init_symbol(&symbols[11u], "a4l_a4rdAddr_fifof", SYM_MODULE, &INST_a4l_a4rdAddr_fifof);
  init_symbol(&symbols[12u], "a4l_a4rdResp_deq_deq", SYM_MODULE, &INST_a4l_a4rdResp_deq_deq);
  init_symbol(&symbols[13u], "a4l_a4rdResp_deq_ready", SYM_MODULE, &INST_a4l_a4rdResp_deq_ready);
  init_symbol(&symbols[14u],
	      "a4l_a4rdResp_fifof_cntr_r",
	      SYM_MODULE,
	      &INST_a4l_a4rdResp_fifof_cntr_r);
  init_symbol(&symbols[15u],
	      "a4l_a4rdResp_fifof_dequeueing",
	      SYM_MODULE,
	      &INST_a4l_a4rdResp_fifof_dequeueing);
  init_symbol(&symbols[16u],
	      "a4l_a4rdResp_fifof_enqueueing",
	      SYM_MODULE,
	      &INST_a4l_a4rdResp_fifof_enqueueing);
  init_symbol(&symbols[17u], "a4l_a4rdResp_fifof_q_0", SYM_MODULE, &INST_a4l_a4rdResp_fifof_q_0);
  init_symbol(&symbols[18u], "a4l_a4rdResp_fifof_q_1", SYM_MODULE, &INST_a4l_a4rdResp_fifof_q_1);
  init_symbol(&symbols[19u],
	      "a4l_a4rdResp_fifof_x_wire",
	      SYM_MODULE,
	      &INST_a4l_a4rdResp_fifof_x_wire);
  init_symbol(&symbols[20u], "a4l_a4wrAddr_data_wire", SYM_MODULE, &INST_a4l_a4wrAddr_data_wire);
  init_symbol(&symbols[21u], "a4l_a4wrAddr_enq_enq", SYM_MODULE, &INST_a4l_a4wrAddr_enq_enq);
  init_symbol(&symbols[22u], "a4l_a4wrAddr_enq_valid", SYM_MODULE, &INST_a4l_a4wrAddr_enq_valid);
  init_symbol(&symbols[23u], "a4l_a4wrAddr_fifof", SYM_MODULE, &INST_a4l_a4wrAddr_fifof);
  init_symbol(&symbols[24u], "a4l_a4wrData_data_wire", SYM_MODULE, &INST_a4l_a4wrData_data_wire);
  init_symbol(&symbols[25u], "a4l_a4wrData_enq_enq", SYM_MODULE, &INST_a4l_a4wrData_enq_enq);
  init_symbol(&symbols[26u], "a4l_a4wrData_enq_valid", SYM_MODULE, &INST_a4l_a4wrData_enq_valid);
  init_symbol(&symbols[27u], "a4l_a4wrData_fifof", SYM_MODULE, &INST_a4l_a4wrData_fifof);
  init_symbol(&symbols[28u], "a4l_a4wrResp_deq_deq", SYM_MODULE, &INST_a4l_a4wrResp_deq_deq);
  init_symbol(&symbols[29u], "a4l_a4wrResp_deq_ready", SYM_MODULE, &INST_a4l_a4wrResp_deq_ready);
  init_symbol(&symbols[30u],
	      "a4l_a4wrResp_fifof_cntr_r",
	      SYM_MODULE,
	      &INST_a4l_a4wrResp_fifof_cntr_r);
  init_symbol(&symbols[31u],
	      "a4l_a4wrResp_fifof_dequeueing",
	      SYM_MODULE,
	      &INST_a4l_a4wrResp_fifof_dequeueing);
  init_symbol(&symbols[32u],
	      "a4l_a4wrResp_fifof_enqueueing",
	      SYM_MODULE,
	      &INST_a4l_a4wrResp_fifof_enqueueing);
  init_symbol(&symbols[33u], "a4l_a4wrResp_fifof_q_0", SYM_MODULE, &INST_a4l_a4wrResp_fifof_q_0);
  init_symbol(&symbols[34u], "a4l_a4wrResp_fifof_q_1", SYM_MODULE, &INST_a4l_a4wrResp_fifof_q_1);
  init_symbol(&symbols[35u],
	      "a4l_a4wrResp_fifof_x_wire",
	      SYM_MODULE,
	      &INST_a4l_a4wrResp_fifof_x_wire);
  init_symbol(&symbols[36u], "a4ls_rdAddr_w", SYM_MODULE, &INST_a4ls_rdAddr_w);
  init_symbol(&symbols[37u], "a4ls_rdAddrVal_w", SYM_MODULE, &INST_a4ls_rdAddrVal_w);
  init_symbol(&symbols[38u], "a4ls_rdProt_w", SYM_MODULE, &INST_a4ls_rdProt_w);
  init_symbol(&symbols[39u], "a4ls_rdRespRdy_w", SYM_MODULE, &INST_a4ls_rdRespRdy_w);
  init_symbol(&symbols[40u], "a4ls_wrAddr_w", SYM_MODULE, &INST_a4ls_wrAddr_w);
  init_symbol(&symbols[41u], "a4ls_wrAddrVal_w", SYM_MODULE, &INST_a4ls_wrAddrVal_w);
  init_symbol(&symbols[42u], "a4ls_wrData_w", SYM_MODULE, &INST_a4ls_wrData_w);
  init_symbol(&symbols[43u], "a4ls_wrDataVal_w", SYM_MODULE, &INST_a4ls_wrDataVal_w);
  init_symbol(&symbols[44u], "a4ls_wrProt_w", SYM_MODULE, &INST_a4ls_wrProt_w);
  init_symbol(&symbols[45u], "a4ls_wrRespRdy_w", SYM_MODULE, &INST_a4ls_wrRespRdy_w);
  init_symbol(&symbols[46u], "a4ls_wrStrb_w", SYM_MODULE, &INST_a4ls_wrStrb_w);
  init_symbol(&symbols[47u], "BREADY", SYM_PORT, &PORT_BREADY, 1u);
  init_symbol(&symbols[48u], "BRESP", SYM_PORT, &PORT_BRESP, 2u);
  init_symbol(&symbols[49u], "BVALID", SYM_PORT, &PORT_BVALID, 1u);
  init_symbol(&symbols[50u], "b18", SYM_MODULE, &INST_b18);
  init_symbol(&symbols[51u], "b19", SYM_MODULE, &INST_b19);
  init_symbol(&symbols[52u], "b1A", SYM_MODULE, &INST_b1A);
  init_symbol(&symbols[53u], "b1B", SYM_MODULE, &INST_b1B);
  init_symbol(&symbols[54u], "CAN_FIRE_mARADDR", SYM_DEF, &DEF_CAN_FIRE_mARADDR, 1u);
  init_symbol(&symbols[55u], "CAN_FIRE_mARPROT", SYM_DEF, &DEF_CAN_FIRE_mARPROT, 1u);
  init_symbol(&symbols[56u], "CAN_FIRE_mARVALID", SYM_DEF, &DEF_CAN_FIRE_mARVALID, 1u);
  init_symbol(&symbols[57u], "CAN_FIRE_mAWADDR", SYM_DEF, &DEF_CAN_FIRE_mAWADDR, 1u);
  init_symbol(&symbols[58u], "CAN_FIRE_mAWPROT", SYM_DEF, &DEF_CAN_FIRE_mAWPROT, 1u);
  init_symbol(&symbols[59u], "CAN_FIRE_mAWVALID", SYM_DEF, &DEF_CAN_FIRE_mAWVALID, 1u);
  init_symbol(&symbols[60u], "CAN_FIRE_mBREADY", SYM_DEF, &DEF_CAN_FIRE_mBREADY, 1u);
  init_symbol(&symbols[61u], "CAN_FIRE_mRREADY", SYM_DEF, &DEF_CAN_FIRE_mRREADY, 1u);
  init_symbol(&symbols[62u], "CAN_FIRE_mWDATA", SYM_DEF, &DEF_CAN_FIRE_mWDATA, 1u);
  init_symbol(&symbols[63u], "CAN_FIRE_mWSTRB", SYM_DEF, &DEF_CAN_FIRE_mWSTRB, 1u);
  init_symbol(&symbols[64u], "CAN_FIRE_mWVALID", SYM_DEF, &DEF_CAN_FIRE_mWVALID, 1u);
  init_symbol(&symbols[65u],
	      "CAN_FIRE_RL_a4l_a4rdAddr_do_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq,
	      1u);
  init_symbol(&symbols[66u],
	      "CAN_FIRE_RL_a4l_a4rdResp_do_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq,
	      1u);
  init_symbol(&symbols[67u],
	      "CAN_FIRE_RL_a4l_a4rdResp_fifof_both",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both,
	      1u);
  init_symbol(&symbols[68u],
	      "CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr,
	      1u);
  init_symbol(&symbols[69u],
	      "CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr,
	      1u);
  init_symbol(&symbols[70u],
	      "CAN_FIRE_RL_a4l_a4wrAddr_do_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq,
	      1u);
  init_symbol(&symbols[71u],
	      "CAN_FIRE_RL_a4l_a4wrData_do_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq,
	      1u);
  init_symbol(&symbols[72u],
	      "CAN_FIRE_RL_a4l_a4wrResp_do_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq,
	      1u);
  init_symbol(&symbols[73u],
	      "CAN_FIRE_RL_a4l_a4wrResp_fifof_both",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both,
	      1u);
  init_symbol(&symbols[74u],
	      "CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr,
	      1u);
  init_symbol(&symbols[75u],
	      "CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr,
	      1u);
  init_symbol(&symbols[76u], "CAN_FIRE_RL_a4l_cfrd", SYM_DEF, &DEF_CAN_FIRE_RL_a4l_cfrd, 1u);
  init_symbol(&symbols[77u], "CAN_FIRE_RL_a4l_cfwr", SYM_DEF, &DEF_CAN_FIRE_RL_a4l_cfwr, 1u);
  init_symbol(&symbols[78u],
	      "CAN_FIRE_RL_a4ls_doAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_a4ls_doAlways,
	      1u);
  init_symbol(&symbols[79u], "CAN_FIRE_sARREADY", SYM_DEF, &DEF_CAN_FIRE_sARREADY, 1u);
  init_symbol(&symbols[80u], "CAN_FIRE_sAWREADY", SYM_DEF, &DEF_CAN_FIRE_sAWREADY, 1u);
  init_symbol(&symbols[81u], "CAN_FIRE_sBRESP", SYM_DEF, &DEF_CAN_FIRE_sBRESP, 1u);
  init_symbol(&symbols[82u], "CAN_FIRE_sBVALID", SYM_DEF, &DEF_CAN_FIRE_sBVALID, 1u);
  init_symbol(&symbols[83u], "CAN_FIRE_sRDATA", SYM_DEF, &DEF_CAN_FIRE_sRDATA, 1u);
  init_symbol(&symbols[84u], "CAN_FIRE_sRRESP", SYM_DEF, &DEF_CAN_FIRE_sRRESP, 1u);
  init_symbol(&symbols[85u], "CAN_FIRE_sRVALID", SYM_DEF, &DEF_CAN_FIRE_sRVALID, 1u);
  init_symbol(&symbols[86u], "CAN_FIRE_sWREADY", SYM_DEF, &DEF_CAN_FIRE_sWREADY, 1u);
  init_symbol(&symbols[87u], "hasDebugLogic", SYM_PARAM, (void *)(&PARAM_hasDebugLogic), 1u);
  init_symbol(&symbols[88u], "lastReadAddr", SYM_MODULE, &INST_lastReadAddr);
  init_symbol(&symbols[89u], "lastWriteAddr", SYM_MODULE, &INST_lastWriteAddr);
  init_symbol(&symbols[90u], "RDATA", SYM_PORT, &PORT_RDATA, 32u);
  init_symbol(&symbols[91u], "RDY_mARADDR", SYM_PORT, &PORT_RDY_mARADDR, 1u);
  init_symbol(&symbols[92u], "RDY_mARPROT", SYM_PORT, &PORT_RDY_mARPROT, 1u);
  init_symbol(&symbols[93u], "RDY_mARVALID", SYM_PORT, &PORT_RDY_mARVALID, 1u);
  init_symbol(&symbols[94u], "RDY_mAWADDR", SYM_PORT, &PORT_RDY_mAWADDR, 1u);
  init_symbol(&symbols[95u], "RDY_mAWPROT", SYM_PORT, &PORT_RDY_mAWPROT, 1u);
  init_symbol(&symbols[96u], "RDY_mAWVALID", SYM_PORT, &PORT_RDY_mAWVALID, 1u);
  init_symbol(&symbols[97u], "RDY_mBREADY", SYM_PORT, &PORT_RDY_mBREADY, 1u);
  init_symbol(&symbols[98u], "RDY_mRREADY", SYM_PORT, &PORT_RDY_mRREADY, 1u);
  init_symbol(&symbols[99u], "RDY_mWDATA", SYM_PORT, &PORT_RDY_mWDATA, 1u);
  init_symbol(&symbols[100u], "RDY_mWSTRB", SYM_PORT, &PORT_RDY_mWSTRB, 1u);
  init_symbol(&symbols[101u], "RDY_mWVALID", SYM_PORT, &PORT_RDY_mWVALID, 1u);
  init_symbol(&symbols[102u], "RDY_sARREADY", SYM_PORT, &PORT_RDY_sARREADY, 1u);
  init_symbol(&symbols[103u], "RDY_sAWREADY", SYM_PORT, &PORT_RDY_sAWREADY, 1u);
  init_symbol(&symbols[104u], "RDY_sBRESP", SYM_PORT, &PORT_RDY_sBRESP, 1u);
  init_symbol(&symbols[105u], "RDY_sBVALID", SYM_PORT, &PORT_RDY_sBVALID, 1u);
  init_symbol(&symbols[106u], "RDY_sRDATA", SYM_PORT, &PORT_RDY_sRDATA, 1u);
  init_symbol(&symbols[107u], "RDY_sRRESP", SYM_PORT, &PORT_RDY_sRRESP, 1u);
  init_symbol(&symbols[108u], "RDY_sRVALID", SYM_PORT, &PORT_RDY_sRVALID, 1u);
  init_symbol(&symbols[109u], "RDY_sWREADY", SYM_PORT, &PORT_RDY_sWREADY, 1u);
  init_symbol(&symbols[110u], "RL_a4l_a4rdAddr_do_enq", SYM_RULE);
  init_symbol(&symbols[111u], "RL_a4l_a4rdResp_do_deq", SYM_RULE);
  init_symbol(&symbols[112u], "RL_a4l_a4rdResp_fifof_both", SYM_RULE);
  init_symbol(&symbols[113u], "RL_a4l_a4rdResp_fifof_decCtr", SYM_RULE);
  init_symbol(&symbols[114u], "RL_a4l_a4rdResp_fifof_incCtr", SYM_RULE);
  init_symbol(&symbols[115u], "RL_a4l_a4wrAddr_do_enq", SYM_RULE);
  init_symbol(&symbols[116u], "RL_a4l_a4wrData_do_enq", SYM_RULE);
  init_symbol(&symbols[117u], "RL_a4l_a4wrResp_do_deq", SYM_RULE);
  init_symbol(&symbols[118u], "RL_a4l_a4wrResp_fifof_both", SYM_RULE);
  init_symbol(&symbols[119u], "RL_a4l_a4wrResp_fifof_decCtr", SYM_RULE);
  init_symbol(&symbols[120u], "RL_a4l_a4wrResp_fifof_incCtr", SYM_RULE);
  init_symbol(&symbols[121u], "RL_a4l_cfrd", SYM_RULE);
  init_symbol(&symbols[122u], "RL_a4l_cfwr", SYM_RULE);
  init_symbol(&symbols[123u], "RL_a4ls_doAlways", SYM_RULE);
  init_symbol(&symbols[124u], "RREADY", SYM_PORT, &PORT_RREADY, 1u);
  init_symbol(&symbols[125u], "RRESP", SYM_PORT, &PORT_RRESP, 2u);
  init_symbol(&symbols[126u], "RVALID", SYM_PORT, &PORT_RVALID, 1u);
  init_symbol(&symbols[127u], "r0", SYM_MODULE, &INST_r0);
  init_symbol(&symbols[128u], "r4", SYM_MODULE, &INST_r4);
  init_symbol(&symbols[129u], "WDATA", SYM_PORT, &PORT_WDATA, 32u);
  init_symbol(&symbols[130u], "WILL_FIRE_mARADDR", SYM_DEF, &DEF_WILL_FIRE_mARADDR, 1u);
  init_symbol(&symbols[131u], "WILL_FIRE_mARPROT", SYM_DEF, &DEF_WILL_FIRE_mARPROT, 1u);
  init_symbol(&symbols[132u], "WILL_FIRE_mARVALID", SYM_DEF, &DEF_WILL_FIRE_mARVALID, 1u);
  init_symbol(&symbols[133u], "WILL_FIRE_mAWADDR", SYM_DEF, &DEF_WILL_FIRE_mAWADDR, 1u);
  init_symbol(&symbols[134u], "WILL_FIRE_mAWPROT", SYM_DEF, &DEF_WILL_FIRE_mAWPROT, 1u);
  init_symbol(&symbols[135u], "WILL_FIRE_mAWVALID", SYM_DEF, &DEF_WILL_FIRE_mAWVALID, 1u);
  init_symbol(&symbols[136u], "WILL_FIRE_mBREADY", SYM_DEF, &DEF_WILL_FIRE_mBREADY, 1u);
  init_symbol(&symbols[137u], "WILL_FIRE_mRREADY", SYM_DEF, &DEF_WILL_FIRE_mRREADY, 1u);
  init_symbol(&symbols[138u], "WILL_FIRE_mWDATA", SYM_DEF, &DEF_WILL_FIRE_mWDATA, 1u);
  init_symbol(&symbols[139u], "WILL_FIRE_mWSTRB", SYM_DEF, &DEF_WILL_FIRE_mWSTRB, 1u);
  init_symbol(&symbols[140u], "WILL_FIRE_mWVALID", SYM_DEF, &DEF_WILL_FIRE_mWVALID, 1u);
  init_symbol(&symbols[141u],
	      "WILL_FIRE_RL_a4l_a4rdAddr_do_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq,
	      1u);
  init_symbol(&symbols[142u],
	      "WILL_FIRE_RL_a4l_a4rdResp_do_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq,
	      1u);
  init_symbol(&symbols[143u],
	      "WILL_FIRE_RL_a4l_a4rdResp_fifof_both",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both,
	      1u);
  init_symbol(&symbols[144u],
	      "WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr,
	      1u);
  init_symbol(&symbols[145u],
	      "WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr,
	      1u);
  init_symbol(&symbols[146u],
	      "WILL_FIRE_RL_a4l_a4wrAddr_do_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq,
	      1u);
  init_symbol(&symbols[147u],
	      "WILL_FIRE_RL_a4l_a4wrData_do_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq,
	      1u);
  init_symbol(&symbols[148u],
	      "WILL_FIRE_RL_a4l_a4wrResp_do_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq,
	      1u);
  init_symbol(&symbols[149u],
	      "WILL_FIRE_RL_a4l_a4wrResp_fifof_both",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both,
	      1u);
  init_symbol(&symbols[150u],
	      "WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr,
	      1u);
  init_symbol(&symbols[151u],
	      "WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr,
	      1u);
  init_symbol(&symbols[152u], "WILL_FIRE_RL_a4l_cfrd", SYM_DEF, &DEF_WILL_FIRE_RL_a4l_cfrd, 1u);
  init_symbol(&symbols[153u], "WILL_FIRE_RL_a4l_cfwr", SYM_DEF, &DEF_WILL_FIRE_RL_a4l_cfwr, 1u);
  init_symbol(&symbols[154u],
	      "WILL_FIRE_RL_a4ls_doAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_a4ls_doAlways,
	      1u);
  init_symbol(&symbols[155u], "WREADY", SYM_PORT, &PORT_WREADY, 1u);
  init_symbol(&symbols[156u], "WSTRB", SYM_PORT, &PORT_WSTRB, 4u);
  init_symbol(&symbols[157u], "WVALID", SYM_PORT, &PORT_WVALID, 1u);
  init_symbol(&symbols[158u], "x__h1082", SYM_DEF, &DEF_x__h1082, 2u);
  init_symbol(&symbols[159u], "x__h2424", SYM_DEF, &DEF_x__h2424, 2u);
}


/* Rule actions */

void MOD_mkA4LS::RL_a4l_a4wrAddr_do_enq()
{
  tUInt64 DEF_a4l_a4wrAddr_data_wire_wget____d6;
  DEF_a4l_a4wrAddr_data_wire_wget____d6 = INST_a4l_a4wrAddr_data_wire.METH_wget();
  INST_a4l_a4wrAddr_fifof.METH_enq(DEF_a4l_a4wrAddr_data_wire_wget____d6);
}

void MOD_mkA4LS::RL_a4l_a4wrData_do_enq()
{
  tUInt64 DEF_a4l_a4wrData_data_wire_wget____d12;
  DEF_a4l_a4wrData_data_wire_wget____d12 = INST_a4l_a4wrData_data_wire.METH_wget();
  INST_a4l_a4wrData_fifof.METH_enq(DEF_a4l_a4wrData_data_wire_wget____d12);
}

void MOD_mkA4LS::RL_a4l_a4wrResp_fifof_incCtr()
{
  tUInt8 DEF_a4l_a4wrResp_fifof_cntr_r_9_PLUS_1___d20;
  DEF_x__h1082 = INST_a4l_a4wrResp_fifof_cntr_r.METH_read();
  DEF_a4l_a4wrResp_fifof_x_wire_wget____d22 = INST_a4l_a4wrResp_fifof_x_wire.METH_wget();
  DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23 = DEF_x__h1082 == (tUInt8)1u;
  DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21 = DEF_x__h1082 == (tUInt8)0u;
  DEF_a4l_a4wrResp_fifof_cntr_r_9_PLUS_1___d20 = (tUInt8)3u & (DEF_x__h1082 + (tUInt8)1u);
  INST_a4l_a4wrResp_fifof_cntr_r.METH_write(DEF_a4l_a4wrResp_fifof_cntr_r_9_PLUS_1___d20);
  if (DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21)
    INST_a4l_a4wrResp_fifof_q_0.METH_write(DEF_a4l_a4wrResp_fifof_x_wire_wget____d22);
  if (DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23)
    INST_a4l_a4wrResp_fifof_q_1.METH_write(DEF_a4l_a4wrResp_fifof_x_wire_wget____d22);
}

void MOD_mkA4LS::RL_a4l_a4wrResp_fifof_decCtr()
{
  DEF_x__h1082 = INST_a4l_a4wrResp_fifof_cntr_r.METH_read();
  DEF_a4l_a4wrResp_fifof_q_1__h1185 = INST_a4l_a4wrResp_fifof_q_1.METH_read();
  DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27 = (tUInt8)3u & (DEF_x__h1082 - (tUInt8)1u);
  INST_a4l_a4wrResp_fifof_q_0.METH_write(DEF_a4l_a4wrResp_fifof_q_1__h1185);
  INST_a4l_a4wrResp_fifof_q_1.METH_write((tUInt8)0u);
  INST_a4l_a4wrResp_fifof_cntr_r.METH_write(DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27);
}

void MOD_mkA4LS::RL_a4l_a4wrResp_fifof_both()
{
  tUInt8 DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_1_3___d30;
  tUInt8 DEF__dfoo2;
  tUInt8 DEF__dfoo4;
  tUInt8 DEF__dfoo1;
  tUInt8 DEF__dfoo3;
  DEF_x__h1082 = INST_a4l_a4wrResp_fifof_cntr_r.METH_read();
  DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32 = !(DEF_x__h1082 == (tUInt8)2u);
  DEF_a4l_a4wrResp_fifof_q_1__h1185 = INST_a4l_a4wrResp_fifof_q_1.METH_read();
  DEF_a4l_a4wrResp_fifof_x_wire_wget____d22 = INST_a4l_a4wrResp_fifof_x_wire.METH_wget();
  DEF__dfoo2 = DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32 ? (tUInt8)0u : DEF_a4l_a4wrResp_fifof_x_wire_wget____d22;
  DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27 = (tUInt8)3u & (DEF_x__h1082 - (tUInt8)1u);
  DEF__dfoo1 = DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32 || DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27 == (tUInt8)1u;
  DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23 = DEF_x__h1082 == (tUInt8)1u;
  DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_1_3___d30 = !DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23;
  DEF__dfoo3 = DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_1_3___d30 || DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27 == (tUInt8)0u;
  DEF__dfoo4 = DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_1_3___d30 ? DEF_a4l_a4wrResp_fifof_q_1__h1185 : DEF_a4l_a4wrResp_fifof_x_wire_wget____d22;
  if (DEF__dfoo3)
    INST_a4l_a4wrResp_fifof_q_0.METH_write(DEF__dfoo4);
  if (DEF__dfoo1)
    INST_a4l_a4wrResp_fifof_q_1.METH_write(DEF__dfoo2);
}

void MOD_mkA4LS::RL_a4l_a4wrResp_do_deq()
{
  INST_a4l_a4wrResp_fifof_dequeueing.METH_wset();
}

void MOD_mkA4LS::RL_a4l_a4rdAddr_do_enq()
{
  tUInt64 DEF_a4l_a4rdAddr_data_wire_wget____d45;
  DEF_a4l_a4rdAddr_data_wire_wget____d45 = INST_a4l_a4rdAddr_data_wire.METH_wget();
  INST_a4l_a4rdAddr_fifof.METH_enq(DEF_a4l_a4rdAddr_data_wire_wget____d45);
}

void MOD_mkA4LS::RL_a4l_a4rdResp_fifof_incCtr()
{
  tUInt8 DEF_a4l_a4rdResp_fifof_cntr_r_2_PLUS_1___d53;
  DEF_x__h2424 = INST_a4l_a4rdResp_fifof_cntr_r.METH_read();
  DEF_a4l_a4rdResp_fifof_x_wire_wget____d55 = INST_a4l_a4rdResp_fifof_x_wire.METH_wget();
  DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56 = DEF_x__h2424 == (tUInt8)1u;
  DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54 = DEF_x__h2424 == (tUInt8)0u;
  DEF_a4l_a4rdResp_fifof_cntr_r_2_PLUS_1___d53 = (tUInt8)3u & (DEF_x__h2424 + (tUInt8)1u);
  INST_a4l_a4rdResp_fifof_cntr_r.METH_write(DEF_a4l_a4rdResp_fifof_cntr_r_2_PLUS_1___d53);
  if (DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54)
    INST_a4l_a4rdResp_fifof_q_0.METH_write(DEF_a4l_a4rdResp_fifof_x_wire_wget____d55);
  if (DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56)
    INST_a4l_a4rdResp_fifof_q_1.METH_write(DEF_a4l_a4rdResp_fifof_x_wire_wget____d55);
}

void MOD_mkA4LS::RL_a4l_a4rdResp_fifof_decCtr()
{
  DEF_x__h2424 = INST_a4l_a4rdResp_fifof_cntr_r.METH_read();
  DEF_a4l_a4rdResp_fifof_q_1___d59 = INST_a4l_a4rdResp_fifof_q_1.METH_read();
  DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60 = (tUInt8)3u & (DEF_x__h2424 - (tUInt8)1u);
  INST_a4l_a4rdResp_fifof_q_0.METH_write(DEF_a4l_a4rdResp_fifof_q_1___d59);
  INST_a4l_a4rdResp_fifof_q_1.METH_write(0llu);
  INST_a4l_a4rdResp_fifof_cntr_r.METH_write(DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60);
}

void MOD_mkA4LS::RL_a4l_a4rdResp_fifof_both()
{
  tUInt8 DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_1_6___d63;
  tUInt64 DEF__dfoo6;
  tUInt64 DEF__dfoo8;
  tUInt8 DEF__dfoo5;
  tUInt8 DEF__dfoo7;
  DEF_x__h2424 = INST_a4l_a4rdResp_fifof_cntr_r.METH_read();
  DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65 = !(DEF_x__h2424 == (tUInt8)2u);
  DEF_a4l_a4rdResp_fifof_q_1___d59 = INST_a4l_a4rdResp_fifof_q_1.METH_read();
  DEF_a4l_a4rdResp_fifof_x_wire_wget____d55 = INST_a4l_a4rdResp_fifof_x_wire.METH_wget();
  DEF__dfoo6 = DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65 ? 0llu : DEF_a4l_a4rdResp_fifof_x_wire_wget____d55;
  DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60 = (tUInt8)3u & (DEF_x__h2424 - (tUInt8)1u);
  DEF__dfoo5 = DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65 || DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60 == (tUInt8)1u;
  DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56 = DEF_x__h2424 == (tUInt8)1u;
  DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_1_6___d63 = !DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56;
  DEF__dfoo7 = DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_1_6___d63 || DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60 == (tUInt8)0u;
  DEF__dfoo8 = DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_1_6___d63 ? DEF_a4l_a4rdResp_fifof_q_1___d59 : DEF_a4l_a4rdResp_fifof_x_wire_wget____d55;
  if (DEF__dfoo7)
    INST_a4l_a4rdResp_fifof_q_0.METH_write(DEF__dfoo8);
  if (DEF__dfoo5)
    INST_a4l_a4rdResp_fifof_q_1.METH_write(DEF__dfoo6);
}

void MOD_mkA4LS::RL_a4l_a4rdResp_do_deq()
{
  INST_a4l_a4rdResp_fifof_dequeueing.METH_wset();
}

void MOD_mkA4LS::RL_a4l_cfwr()
{
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d89;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d86;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d92;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d95;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x0___d80;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x4___d83;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x18___d84;
  tUInt8 DEF_a4l_a4wrData_fifof_first__1_BITS_35_TO_32___d98;
  tUInt8 DEF_x__h3771;
  tUInt8 DEF_x__h3890;
  tUInt8 DEF_x__h4009;
  tUInt8 DEF_x__h4128;
  tUInt32 DEF_a4l_a4wrAddr_fifof_first__7_BITS_31_TO_0___d78;
  tUInt32 DEF_x__h3690;
  tUInt64 DEF_a4l_a4wrAddr_fifof_first____d77;
  tUInt64 DEF_a4l_a4wrData_fifof_first____d81;
  tUInt8 DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0___d79;
  DEF_a4l_a4wrData_fifof_first____d81 = INST_a4l_a4wrData_fifof.METH_first();
  DEF_a4l_a4wrAddr_fifof_first____d77 = INST_a4l_a4wrAddr_fifof.METH_first();
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0___d79 = (tUInt8)((tUInt8)255u & DEF_a4l_a4wrAddr_fifof_first____d77);
  DEF_x__h3690 = (tUInt32)(DEF_a4l_a4wrData_fifof_first____d81);
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_31_TO_0___d78 = (tUInt32)(DEF_a4l_a4wrAddr_fifof_first____d77);
  DEF_x__h4128 = (tUInt8)((tUInt8)255u & (DEF_a4l_a4wrData_fifof_first____d81 >> 24u));
  DEF_x__h4009 = (tUInt8)((tUInt8)255u & (DEF_a4l_a4wrData_fifof_first____d81 >> 16u));
  DEF_x__h3890 = (tUInt8)((tUInt8)255u & (DEF_a4l_a4wrData_fifof_first____d81 >> 8u));
  DEF_x__h3771 = (tUInt8)((tUInt8)255u & DEF_a4l_a4wrData_fifof_first____d81);
  DEF_a4l_a4wrData_fifof_first__1_BITS_35_TO_32___d98 = (tUInt8)(DEF_a4l_a4wrData_fifof_first____d81 >> 32u);
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x18___d84 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0___d79 == (tUInt8)24u;
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x4___d83 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0___d79 == (tUInt8)4u;
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x0___d80 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0___d79 == (tUInt8)0u;
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d95 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x18___d84 && (tUInt8)(DEF_a4l_a4wrData_fifof_first____d81 >> 35u);
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d92 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x18___d84 && (tUInt8)((tUInt8)1u & (DEF_a4l_a4wrData_fifof_first____d81 >> 34u));
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d86 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x18___d84 && (tUInt8)((tUInt8)1u & (DEF_a4l_a4wrData_fifof_first____d81 >> 32u));
  INST_a4l_a4wrAddr_fifof.METH_deq();
  DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d89 = DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x18___d84 && (tUInt8)((tUInt8)1u & (DEF_a4l_a4wrData_fifof_first____d81 >> 33u));
  INST_a4l_a4wrData_fifof.METH_deq();
  INST_lastWriteAddr.METH_write(DEF_a4l_a4wrAddr_fifof_first__7_BITS_31_TO_0___d78);
  if (DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x4___d83)
    INST_r4.METH_write(DEF_x__h3690);
  if (DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0x0___d80)
    INST_r0.METH_write(DEF_x__h3690);
  if (DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d86)
    INST_b18.METH_write(DEF_x__h3771);
  if (DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d89)
    INST_b19.METH_write(DEF_x__h3890);
  if (DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d92)
    INST_b1A.METH_write(DEF_x__h4009);
  if (DEF_a4l_a4wrAddr_fifof_first__7_BITS_7_TO_0_9_EQ_0_ETC___d95)
    INST_b1B.METH_write(DEF_x__h4128);
  INST_a4l_a4wrResp_fifof_enqueueing.METH_wset();
  INST_a4l_a4wrResp_fifof_x_wire.METH_wset((tUInt8)0u);
  if (!(PORT_ARESETN == (tUInt8)0u))
    DEF_v__h4318 = dollar_time(sim_hdl);
  if (!(PORT_ARESETN == (tUInt8)0u))
    dollar_display(sim_hdl,
		   this,
		   "s,64,32,4,32",
		   &__str_literal_1,
		   DEF_v__h4318,
		   DEF_a4l_a4wrAddr_fifof_first__7_BITS_31_TO_0___d78,
		   DEF_a4l_a4wrData_fifof_first__1_BITS_35_TO_32___d98,
		   DEF_x__h3690);
}

void MOD_mkA4LS::RL_a4l_cfrd()
{
  tUInt64 DEF__0_CONCAT_IF_a4l_a4rdAddr_fifof_first__01_BITS__ETC___d126;
  tUInt32 DEF_rdat__h4534;
  tUInt32 DEF__theResult____h4414;
  tUInt32 DEF_a4l_a4rdAddr_fifof_first__01_BITS_31_TO_0___d102;
  tUInt8 DEF__read__h3183;
  tUInt8 DEF__read__h3235;
  tUInt8 DEF__read__h3287;
  tUInt8 DEF__read__h3339;
  tUInt32 DEF_rdat__h4518;
  tUInt32 DEF_rdat__h4524;
  tUInt32 DEF_rdat__h4551;
  tUInt32 DEF_rdat__h4545;
  tUInt64 DEF_a4l_a4rdAddr_fifof_first____d101;
  DEF_a4l_a4rdAddr_fifof_first____d101 = INST_a4l_a4rdAddr_fifof.METH_first();
  DEF_rdat__h4545 = INST_lastWriteAddr.METH_read();
  DEF_rdat__h4551 = INST_lastReadAddr.METH_read();
  DEF_rdat__h4524 = INST_r4.METH_read();
  DEF_rdat__h4518 = INST_r0.METH_read();
  DEF__read__h3339 = INST_b1B.METH_read();
  DEF__read__h3235 = INST_b19.METH_read();
  DEF__read__h3287 = INST_b1A.METH_read();
  DEF__read__h3183 = INST_b18.METH_read();
  DEF_a4l_a4rdAddr_fifof_first__01_BITS_31_TO_0___d102 = (tUInt32)(DEF_a4l_a4rdAddr_fifof_first____d101);
  DEF_rdat__h4534 = (((((tUInt32)(DEF__read__h3339)) << 24u) | (((tUInt32)(DEF__read__h3287)) << 16u)) | (((tUInt32)(DEF__read__h3235)) << 8u)) | (tUInt32)(DEF__read__h3183);
  switch ((tUInt8)((tUInt8)255u & DEF_a4l_a4rdAddr_fifof_first____d101)) {
  case (tUInt8)0u:
    DEF__theResult____h4414 = DEF_rdat__h4518;
    break;
  case (tUInt8)4u:
    DEF__theResult____h4414 = DEF_rdat__h4524;
    break;
  case (tUInt8)16u:
    DEF__theResult____h4414 = 4027448014u;
    break;
  case (tUInt8)24u:
    DEF__theResult____h4414 = DEF_rdat__h4534;
    break;
  case (tUInt8)32u:
    DEF__theResult____h4414 = DEF_rdat__h4545;
    break;
  default:
    DEF__theResult____h4414 = DEF_rdat__h4551;
  }
  DEF__0_CONCAT_IF_a4l_a4rdAddr_fifof_first__01_BITS__ETC___d126 = 17179869183llu & ((((tUInt64)((tUInt8)0u)) << 32u) | (tUInt64)(DEF__theResult____h4414));
  INST_a4l_a4rdAddr_fifof.METH_deq();
  INST_lastReadAddr.METH_write(DEF_a4l_a4rdAddr_fifof_first__01_BITS_31_TO_0___d102);
  INST_a4l_a4rdResp_fifof_enqueueing.METH_wset();
  INST_a4l_a4rdResp_fifof_x_wire.METH_wset(DEF__0_CONCAT_IF_a4l_a4rdAddr_fifof_first__01_BITS__ETC___d126);
  if (!(PORT_ARESETN == (tUInt8)0u))
    DEF_v__h4584 = dollar_time(sim_hdl);
  if (!(PORT_ARESETN == (tUInt8)0u))
  {
    dollar_display(sim_hdl,
		   this,
		   "s,64,32",
		   &__str_literal_2,
		   DEF_v__h4584,
		   DEF_a4l_a4rdAddr_fifof_first__01_BITS_31_TO_0___d102);
    DEF_v__h4616 = dollar_time(sim_hdl);
  }
  if (!(PORT_ARESETN == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s,64,32", &__str_literal_3, DEF_v__h4616, DEF__theResult____h4414);
}

void MOD_mkA4LS::RL_a4ls_doAlways()
{
  tUInt64 DEF_IF_a4ls_rdProt_w_whas__58_THEN_a4ls_rdProt_w_w_ETC___d164;
  tUInt64 DEF_IF_a4ls_wrProt_w_whas__44_THEN_a4ls_wrProt_w_w_ETC___d150;
  tUInt64 DEF_IF_a4ls_wrStrb_w_whas__51_THEN_a4ls_wrStrb_w_w_ETC___d157;
  tUInt8 DEF_a4ls_wrAddrVal_w_whas__29_AND_a4ls_wrAddrVal_w_ETC___d131;
  tUInt8 DEF_a4ls_wrDataVal_w_whas__32_AND_a4ls_wrDataVal_w_ETC___d134;
  tUInt8 DEF_a4ls_wrRespRdy_w_whas__35_AND_a4ls_wrRespRdy_w_ETC___d137;
  tUInt8 DEF_a4ls_rdAddrVal_w_whas__38_AND_a4ls_rdAddrVal_w_ETC___d140;
  tUInt8 DEF_a4ls_rdRespRdy_w_whas__41_AND_a4ls_rdRespRdy_w_ETC___d143;
  tUInt8 DEF_value_strb__h5813;
  tUInt32 DEF_value_addr__h5747;
  tUInt32 DEF_value_data__h5814;
  tUInt32 DEF_value_addr__h5841;
  tUInt8 DEF_x_wget__h5132;
  tUInt8 DEF_x_wget__h5405;
  tUInt8 DEF_x_wget__h5269;
  tUInt32 DEF_x_wget__h5064;
  tUInt32 DEF_x_wget__h5200;
  tUInt32 DEF_x_wget__h5337;
  DEF_x_wget__h5337 = INST_a4ls_rdAddr_w.METH_wget();
  DEF_x_wget__h5200 = INST_a4ls_wrData_w.METH_wget();
  DEF_x_wget__h5064 = INST_a4ls_wrAddr_w.METH_wget();
  DEF_x_wget__h5269 = INST_a4ls_wrStrb_w.METH_wget();
  DEF_x_wget__h5405 = INST_a4ls_rdProt_w.METH_wget();
  DEF_value_addr__h5841 = INST_a4ls_rdAddr_w.METH_whas() ? DEF_x_wget__h5337 : 0u;
  DEF_x_wget__h5132 = INST_a4ls_wrProt_w.METH_wget();
  DEF_value_data__h5814 = INST_a4ls_wrData_w.METH_whas() ? DEF_x_wget__h5200 : 0u;
  DEF_value_addr__h5747 = INST_a4ls_wrAddr_w.METH_whas() ? DEF_x_wget__h5064 : 0u;
  DEF_value_strb__h5813 = INST_a4ls_wrStrb_w.METH_whas() ? DEF_x_wget__h5269 : (tUInt8)0u;
  DEF_a4ls_rdRespRdy_w_whas__41_AND_a4ls_rdRespRdy_w_ETC___d143 = INST_a4ls_rdRespRdy_w.METH_whas() && INST_a4ls_rdRespRdy_w.METH_wget();
  DEF_a4ls_wrRespRdy_w_whas__35_AND_a4ls_wrRespRdy_w_ETC___d137 = INST_a4ls_wrRespRdy_w.METH_whas() && INST_a4ls_wrRespRdy_w.METH_wget();
  DEF_a4ls_rdAddrVal_w_whas__38_AND_a4ls_rdAddrVal_w_ETC___d140 = INST_a4ls_rdAddrVal_w.METH_whas() && INST_a4ls_rdAddrVal_w.METH_wget();
  DEF_a4ls_wrDataVal_w_whas__32_AND_a4ls_wrDataVal_w_ETC___d134 = INST_a4ls_wrDataVal_w.METH_whas() && INST_a4ls_wrDataVal_w.METH_wget();
  DEF_a4ls_wrAddrVal_w_whas__29_AND_a4ls_wrAddrVal_w_ETC___d131 = INST_a4ls_wrAddrVal_w.METH_whas() && INST_a4ls_wrAddrVal_w.METH_wget();
  DEF_IF_a4ls_wrStrb_w_whas__51_THEN_a4ls_wrStrb_w_w_ETC___d157 = 68719476735llu & ((((tUInt64)(DEF_value_strb__h5813)) << 32u) | (tUInt64)(DEF_value_data__h5814));
  DEF_IF_a4ls_wrProt_w_whas__44_THEN_a4ls_wrProt_w_w_ETC___d150 = 34359738367llu & ((((tUInt64)(INST_a4ls_wrProt_w.METH_whas() ? DEF_x_wget__h5132 : (tUInt8)0u)) << 32u) | (tUInt64)(DEF_value_addr__h5747));
  DEF_IF_a4ls_rdProt_w_whas__58_THEN_a4ls_rdProt_w_w_ETC___d164 = 34359738367llu & ((((tUInt64)(INST_a4ls_rdProt_w.METH_whas() ? DEF_x_wget__h5405 : (tUInt8)0u)) << 32u) | (tUInt64)(DEF_value_addr__h5841));
  if (DEF_a4ls_wrDataVal_w_whas__32_AND_a4ls_wrDataVal_w_ETC___d134)
    INST_a4l_a4wrData_enq_valid.METH_wset();
  if (DEF_a4ls_wrAddrVal_w_whas__29_AND_a4ls_wrAddrVal_w_ETC___d131)
    INST_a4l_a4wrAddr_enq_valid.METH_wset();
  if (DEF_a4ls_wrRespRdy_w_whas__35_AND_a4ls_wrRespRdy_w_ETC___d137)
    INST_a4l_a4wrResp_deq_ready.METH_wset();
  if (DEF_a4ls_rdAddrVal_w_whas__38_AND_a4ls_rdAddrVal_w_ETC___d140)
    INST_a4l_a4rdAddr_enq_valid.METH_wset();
  if (DEF_a4ls_rdRespRdy_w_whas__41_AND_a4ls_rdRespRdy_w_ETC___d143)
    INST_a4l_a4rdResp_deq_ready.METH_wset();
  INST_a4l_a4wrAddr_data_wire.METH_wset(DEF_IF_a4ls_wrProt_w_whas__44_THEN_a4ls_wrProt_w_w_ETC___d150);
  INST_a4l_a4wrData_data_wire.METH_wset(DEF_IF_a4ls_wrStrb_w_whas__51_THEN_a4ls_wrStrb_w_w_ETC___d157);
  INST_a4l_a4rdAddr_data_wire.METH_wset(DEF_IF_a4ls_rdProt_w_whas__58_THEN_a4ls_rdProt_w_w_ETC___d164);
}


/* Methods */

void MOD_mkA4LS::METH_mAWVALID()
{
  PORT_AWVALID = (tUInt8)1u;
  DEF_WILL_FIRE_mAWVALID = (tUInt8)1u;
  INST_a4ls_wrAddrVal_w.METH_wset((tUInt8)1u);
}

tUInt8 MOD_mkA4LS::METH_RDY_mAWVALID()
{
  DEF_CAN_FIRE_mAWVALID = (tUInt8)1u;
  PORT_RDY_mAWVALID = DEF_CAN_FIRE_mAWVALID;
  return PORT_RDY_mAWVALID;
}

tUInt8 MOD_mkA4LS::METH_sAWREADY()
{
  PORT_AWREADY = INST_a4l_a4wrAddr_fifof.METH_notFull();
  return PORT_AWREADY;
}

tUInt8 MOD_mkA4LS::METH_RDY_sAWREADY()
{
  DEF_CAN_FIRE_sAWREADY = (tUInt8)1u;
  PORT_RDY_sAWREADY = DEF_CAN_FIRE_sAWREADY;
  return PORT_RDY_sAWREADY;
}

void MOD_mkA4LS::METH_mAWADDR(tUInt32 ARG_AWADDR)
{
  DEF_WILL_FIRE_mAWADDR = (tUInt8)1u;
  PORT_AWADDR = ARG_AWADDR;
  if (PORT_RDY_mAWADDR)
    INST_a4ls_wrAddr_w.METH_wset(ARG_AWADDR);
}

tUInt8 MOD_mkA4LS::METH_RDY_mAWADDR()
{
  DEF_CAN_FIRE_mAWADDR = (tUInt8)1u;
  PORT_RDY_mAWADDR = DEF_CAN_FIRE_mAWADDR;
  return PORT_RDY_mAWADDR;
}

void MOD_mkA4LS::METH_mAWPROT(tUInt8 ARG_AWPROT)
{
  DEF_WILL_FIRE_mAWPROT = (tUInt8)1u;
  PORT_AWPROT = ARG_AWPROT;
  if (PORT_RDY_mAWPROT)
    INST_a4ls_wrProt_w.METH_wset(ARG_AWPROT);
}

tUInt8 MOD_mkA4LS::METH_RDY_mAWPROT()
{
  DEF_CAN_FIRE_mAWPROT = (tUInt8)1u;
  PORT_RDY_mAWPROT = DEF_CAN_FIRE_mAWPROT;
  return PORT_RDY_mAWPROT;
}

void MOD_mkA4LS::METH_mWVALID()
{
  PORT_WVALID = (tUInt8)1u;
  DEF_WILL_FIRE_mWVALID = (tUInt8)1u;
  INST_a4ls_wrDataVal_w.METH_wset((tUInt8)1u);
}

tUInt8 MOD_mkA4LS::METH_RDY_mWVALID()
{
  DEF_CAN_FIRE_mWVALID = (tUInt8)1u;
  PORT_RDY_mWVALID = DEF_CAN_FIRE_mWVALID;
  return PORT_RDY_mWVALID;
}

tUInt8 MOD_mkA4LS::METH_sWREADY()
{
  PORT_WREADY = INST_a4l_a4wrData_fifof.METH_notFull();
  return PORT_WREADY;
}

tUInt8 MOD_mkA4LS::METH_RDY_sWREADY()
{
  DEF_CAN_FIRE_sWREADY = (tUInt8)1u;
  PORT_RDY_sWREADY = DEF_CAN_FIRE_sWREADY;
  return PORT_RDY_sWREADY;
}

void MOD_mkA4LS::METH_mWDATA(tUInt32 ARG_WDATA)
{
  DEF_WILL_FIRE_mWDATA = (tUInt8)1u;
  PORT_WDATA = ARG_WDATA;
  if (PORT_RDY_mWDATA)
    INST_a4ls_wrData_w.METH_wset(ARG_WDATA);
}

tUInt8 MOD_mkA4LS::METH_RDY_mWDATA()
{
  DEF_CAN_FIRE_mWDATA = (tUInt8)1u;
  PORT_RDY_mWDATA = DEF_CAN_FIRE_mWDATA;
  return PORT_RDY_mWDATA;
}

void MOD_mkA4LS::METH_mWSTRB(tUInt8 ARG_WSTRB)
{
  DEF_WILL_FIRE_mWSTRB = (tUInt8)1u;
  PORT_WSTRB = ARG_WSTRB;
  if (PORT_RDY_mWSTRB)
    INST_a4ls_wrStrb_w.METH_wset(ARG_WSTRB);
}

tUInt8 MOD_mkA4LS::METH_RDY_mWSTRB()
{
  DEF_CAN_FIRE_mWSTRB = (tUInt8)1u;
  PORT_RDY_mWSTRB = DEF_CAN_FIRE_mWSTRB;
  return PORT_RDY_mWSTRB;
}

tUInt8 MOD_mkA4LS::METH_sBVALID()
{
  DEF_x__h1082 = INST_a4l_a4wrResp_fifof_cntr_r.METH_read();
  DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21 = DEF_x__h1082 == (tUInt8)0u;
  PORT_BVALID = !DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21;
  return PORT_BVALID;
}

tUInt8 MOD_mkA4LS::METH_RDY_sBVALID()
{
  DEF_CAN_FIRE_sBVALID = (tUInt8)1u;
  PORT_RDY_sBVALID = DEF_CAN_FIRE_sBVALID;
  return PORT_RDY_sBVALID;
}

void MOD_mkA4LS::METH_mBREADY()
{
  PORT_BREADY = (tUInt8)1u;
  DEF_WILL_FIRE_mBREADY = (tUInt8)1u;
  INST_a4ls_wrRespRdy_w.METH_wset((tUInt8)1u);
}

tUInt8 MOD_mkA4LS::METH_RDY_mBREADY()
{
  DEF_CAN_FIRE_mBREADY = (tUInt8)1u;
  PORT_RDY_mBREADY = DEF_CAN_FIRE_mBREADY;
  return PORT_RDY_mBREADY;
}

tUInt8 MOD_mkA4LS::METH_sBRESP()
{
  PORT_BRESP = INST_a4l_a4wrResp_fifof_q_0.METH_read();
  return PORT_BRESP;
}

tUInt8 MOD_mkA4LS::METH_RDY_sBRESP()
{
  DEF_CAN_FIRE_sBRESP = (tUInt8)1u;
  PORT_RDY_sBRESP = DEF_CAN_FIRE_sBRESP;
  return PORT_RDY_sBRESP;
}

void MOD_mkA4LS::METH_mARVALID()
{
  PORT_ARVALID = (tUInt8)1u;
  DEF_WILL_FIRE_mARVALID = (tUInt8)1u;
  INST_a4ls_rdAddrVal_w.METH_wset((tUInt8)1u);
}

tUInt8 MOD_mkA4LS::METH_RDY_mARVALID()
{
  DEF_CAN_FIRE_mARVALID = (tUInt8)1u;
  PORT_RDY_mARVALID = DEF_CAN_FIRE_mARVALID;
  return PORT_RDY_mARVALID;
}

tUInt8 MOD_mkA4LS::METH_sARREADY()
{
  PORT_ARREADY = INST_a4l_a4rdAddr_fifof.METH_notFull();
  return PORT_ARREADY;
}

tUInt8 MOD_mkA4LS::METH_RDY_sARREADY()
{
  DEF_CAN_FIRE_sARREADY = (tUInt8)1u;
  PORT_RDY_sARREADY = DEF_CAN_FIRE_sARREADY;
  return PORT_RDY_sARREADY;
}

void MOD_mkA4LS::METH_mARADDR(tUInt32 ARG_ARADDR)
{
  DEF_WILL_FIRE_mARADDR = (tUInt8)1u;
  PORT_ARADDR = ARG_ARADDR;
  if (PORT_RDY_mARADDR)
    INST_a4ls_rdAddr_w.METH_wset(ARG_ARADDR);
}

tUInt8 MOD_mkA4LS::METH_RDY_mARADDR()
{
  DEF_CAN_FIRE_mARADDR = (tUInt8)1u;
  PORT_RDY_mARADDR = DEF_CAN_FIRE_mARADDR;
  return PORT_RDY_mARADDR;
}

void MOD_mkA4LS::METH_mARPROT(tUInt8 ARG_ARPROT)
{
  DEF_WILL_FIRE_mARPROT = (tUInt8)1u;
  PORT_ARPROT = ARG_ARPROT;
  if (PORT_RDY_mARPROT)
    INST_a4ls_rdProt_w.METH_wset(ARG_ARPROT);
}

tUInt8 MOD_mkA4LS::METH_RDY_mARPROT()
{
  DEF_CAN_FIRE_mARPROT = (tUInt8)1u;
  PORT_RDY_mARPROT = DEF_CAN_FIRE_mARPROT;
  return PORT_RDY_mARPROT;
}

tUInt8 MOD_mkA4LS::METH_sRVALID()
{
  DEF_x__h2424 = INST_a4l_a4rdResp_fifof_cntr_r.METH_read();
  DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54 = DEF_x__h2424 == (tUInt8)0u;
  PORT_RVALID = !DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54;
  return PORT_RVALID;
}

tUInt8 MOD_mkA4LS::METH_RDY_sRVALID()
{
  DEF_CAN_FIRE_sRVALID = (tUInt8)1u;
  PORT_RDY_sRVALID = DEF_CAN_FIRE_sRVALID;
  return PORT_RDY_sRVALID;
}

void MOD_mkA4LS::METH_mRREADY()
{
  PORT_RREADY = (tUInt8)1u;
  DEF_WILL_FIRE_mRREADY = (tUInt8)1u;
  INST_a4ls_rdRespRdy_w.METH_wset((tUInt8)1u);
}

tUInt8 MOD_mkA4LS::METH_RDY_mRREADY()
{
  DEF_CAN_FIRE_mRREADY = (tUInt8)1u;
  PORT_RDY_mRREADY = DEF_CAN_FIRE_mRREADY;
  return PORT_RDY_mRREADY;
}

tUInt32 MOD_mkA4LS::METH_sRDATA()
{
  DEF_a4l_a4rdResp_fifof_q_0___d165 = INST_a4l_a4rdResp_fifof_q_0.METH_read();
  PORT_RDATA = (tUInt32)(DEF_a4l_a4rdResp_fifof_q_0___d165);
  return PORT_RDATA;
}

tUInt8 MOD_mkA4LS::METH_RDY_sRDATA()
{
  DEF_CAN_FIRE_sRDATA = (tUInt8)1u;
  PORT_RDY_sRDATA = DEF_CAN_FIRE_sRDATA;
  return PORT_RDY_sRDATA;
}

tUInt8 MOD_mkA4LS::METH_sRRESP()
{
  DEF_a4l_a4rdResp_fifof_q_0___d165 = INST_a4l_a4rdResp_fifof_q_0.METH_read();
  PORT_RRESP = (tUInt8)(DEF_a4l_a4rdResp_fifof_q_0___d165 >> 32u);
  return PORT_RRESP;
}

tUInt8 MOD_mkA4LS::METH_RDY_sRRESP()
{
  DEF_CAN_FIRE_sRRESP = (tUInt8)1u;
  PORT_RDY_sRRESP = DEF_CAN_FIRE_sRRESP;
  return PORT_RDY_sRRESP;
}


/* Reset routines */

void MOD_mkA4LS::reset_ARESETN(tUInt8 ARG_rst_in)
{
  PORT_ARESETN = ARG_rst_in;
  INST_r4.reset_RST(ARG_rst_in);
  INST_r0.reset_RST(ARG_rst_in);
  INST_lastWriteAddr.reset_RST(ARG_rst_in);
  INST_lastReadAddr.reset_RST(ARG_rst_in);
  INST_b1B.reset_RST(ARG_rst_in);
  INST_b1A.reset_RST(ARG_rst_in);
  INST_b19.reset_RST(ARG_rst_in);
  INST_b18.reset_RST(ARG_rst_in);
  INST_a4l_a4wrResp_fifof_q_1.reset_RST(ARG_rst_in);
  INST_a4l_a4wrResp_fifof_q_0.reset_RST(ARG_rst_in);
  INST_a4l_a4wrResp_fifof_cntr_r.reset_RST(ARG_rst_in);
  INST_a4l_a4wrData_fifof.reset_RST(ARG_rst_in);
  INST_a4l_a4wrAddr_fifof.reset_RST(ARG_rst_in);
  INST_a4l_a4rdResp_fifof_q_1.reset_RST(ARG_rst_in);
  INST_a4l_a4rdResp_fifof_q_0.reset_RST(ARG_rst_in);
  INST_a4l_a4rdResp_fifof_cntr_r.reset_RST(ARG_rst_in);
  INST_a4l_a4rdAddr_fifof.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkA4LS::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkA4LS::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_a4l_a4rdAddr_data_wire.dump_state(indent + 2u);
  INST_a4l_a4rdAddr_enq_enq.dump_state(indent + 2u);
  INST_a4l_a4rdAddr_enq_valid.dump_state(indent + 2u);
  INST_a4l_a4rdAddr_fifof.dump_state(indent + 2u);
  INST_a4l_a4rdResp_deq_deq.dump_state(indent + 2u);
  INST_a4l_a4rdResp_deq_ready.dump_state(indent + 2u);
  INST_a4l_a4rdResp_fifof_cntr_r.dump_state(indent + 2u);
  INST_a4l_a4rdResp_fifof_dequeueing.dump_state(indent + 2u);
  INST_a4l_a4rdResp_fifof_enqueueing.dump_state(indent + 2u);
  INST_a4l_a4rdResp_fifof_q_0.dump_state(indent + 2u);
  INST_a4l_a4rdResp_fifof_q_1.dump_state(indent + 2u);
  INST_a4l_a4rdResp_fifof_x_wire.dump_state(indent + 2u);
  INST_a4l_a4wrAddr_data_wire.dump_state(indent + 2u);
  INST_a4l_a4wrAddr_enq_enq.dump_state(indent + 2u);
  INST_a4l_a4wrAddr_enq_valid.dump_state(indent + 2u);
  INST_a4l_a4wrAddr_fifof.dump_state(indent + 2u);
  INST_a4l_a4wrData_data_wire.dump_state(indent + 2u);
  INST_a4l_a4wrData_enq_enq.dump_state(indent + 2u);
  INST_a4l_a4wrData_enq_valid.dump_state(indent + 2u);
  INST_a4l_a4wrData_fifof.dump_state(indent + 2u);
  INST_a4l_a4wrResp_deq_deq.dump_state(indent + 2u);
  INST_a4l_a4wrResp_deq_ready.dump_state(indent + 2u);
  INST_a4l_a4wrResp_fifof_cntr_r.dump_state(indent + 2u);
  INST_a4l_a4wrResp_fifof_dequeueing.dump_state(indent + 2u);
  INST_a4l_a4wrResp_fifof_enqueueing.dump_state(indent + 2u);
  INST_a4l_a4wrResp_fifof_q_0.dump_state(indent + 2u);
  INST_a4l_a4wrResp_fifof_q_1.dump_state(indent + 2u);
  INST_a4l_a4wrResp_fifof_x_wire.dump_state(indent + 2u);
  INST_a4ls_rdAddrVal_w.dump_state(indent + 2u);
  INST_a4ls_rdAddr_w.dump_state(indent + 2u);
  INST_a4ls_rdProt_w.dump_state(indent + 2u);
  INST_a4ls_rdRespRdy_w.dump_state(indent + 2u);
  INST_a4ls_wrAddrVal_w.dump_state(indent + 2u);
  INST_a4ls_wrAddr_w.dump_state(indent + 2u);
  INST_a4ls_wrDataVal_w.dump_state(indent + 2u);
  INST_a4ls_wrData_w.dump_state(indent + 2u);
  INST_a4ls_wrProt_w.dump_state(indent + 2u);
  INST_a4ls_wrRespRdy_w.dump_state(indent + 2u);
  INST_a4ls_wrStrb_w.dump_state(indent + 2u);
  INST_b18.dump_state(indent + 2u);
  INST_b19.dump_state(indent + 2u);
  INST_b1A.dump_state(indent + 2u);
  INST_b1B.dump_state(indent + 2u);
  INST_lastReadAddr.dump_state(indent + 2u);
  INST_lastWriteAddr.dump_state(indent + 2u);
  INST_r0.dump_state(indent + 2u);
  INST_r4.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkA4LS::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 162u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "ACLK", 1u);
  vcd_write_def(sim_hdl, num++, "ARESETN", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4rdAddr_do_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4rdResp_do_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4rdResp_fifof_both", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4wrAddr_do_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4wrData_do_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4wrResp_do_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4wrResp_fifof_both", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_cfrd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4l_cfwr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_a4ls_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mARADDR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mARPROT", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mARVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mAWADDR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mAWPROT", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mAWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mBREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mRREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mWDATA", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mWSTRB", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_mWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sARREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sAWREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sBRESP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sBVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sRDATA", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sRRESP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sRVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sWREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4rdAddr_do_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4rdResp_do_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4rdResp_fifof_both", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4wrAddr_do_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4wrData_do_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4wrResp_do_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4wrResp_fifof_both", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_cfrd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4l_cfwr", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_a4ls_doAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mARADDR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mARPROT", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mARVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mAWADDR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mAWPROT", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mAWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mBREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mRREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mWDATA", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mWSTRB", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_mWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4rdResp_fifof_q_0___d165", 34u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4rdResp_fifof_q_1___d59", 34u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4rdResp_fifof_x_wire_wget____d55", 34u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4wrResp_fifof_q_1__h1185", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a4l_a4wrResp_fifof_x_wire_wget____d22", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4318", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4584", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h4616", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1082", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2424", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ARADDR", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ARPROT", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ARREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ARVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "AWADDR", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "AWPROT", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "AWREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "AWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "BREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "BRESP", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "BVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDATA", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mARADDR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mARPROT", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mARVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mAWADDR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mAWPROT", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mAWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mBREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mRREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mWDATA", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mWSTRB", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_mWVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sARREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sAWREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sBRESP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sBVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sRDATA", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sRRESP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sRVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sWREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RRESP", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RVALID", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WDATA", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WREADY", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WSTRB", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WVALID", 1u);
  num = INST_a4l_a4rdAddr_data_wire.dump_VCD_defs(num);
  num = INST_a4l_a4rdAddr_enq_enq.dump_VCD_defs(num);
  num = INST_a4l_a4rdAddr_enq_valid.dump_VCD_defs(num);
  num = INST_a4l_a4rdAddr_fifof.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_deq_deq.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_deq_ready.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_fifof_cntr_r.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_fifof_dequeueing.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_fifof_enqueueing.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_fifof_q_0.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_fifof_q_1.dump_VCD_defs(num);
  num = INST_a4l_a4rdResp_fifof_x_wire.dump_VCD_defs(num);
  num = INST_a4l_a4wrAddr_data_wire.dump_VCD_defs(num);
  num = INST_a4l_a4wrAddr_enq_enq.dump_VCD_defs(num);
  num = INST_a4l_a4wrAddr_enq_valid.dump_VCD_defs(num);
  num = INST_a4l_a4wrAddr_fifof.dump_VCD_defs(num);
  num = INST_a4l_a4wrData_data_wire.dump_VCD_defs(num);
  num = INST_a4l_a4wrData_enq_enq.dump_VCD_defs(num);
  num = INST_a4l_a4wrData_enq_valid.dump_VCD_defs(num);
  num = INST_a4l_a4wrData_fifof.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_deq_deq.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_deq_ready.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_fifof_cntr_r.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_fifof_dequeueing.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_fifof_enqueueing.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_fifof_q_0.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_fifof_q_1.dump_VCD_defs(num);
  num = INST_a4l_a4wrResp_fifof_x_wire.dump_VCD_defs(num);
  num = INST_a4ls_rdAddrVal_w.dump_VCD_defs(num);
  num = INST_a4ls_rdAddr_w.dump_VCD_defs(num);
  num = INST_a4ls_rdProt_w.dump_VCD_defs(num);
  num = INST_a4ls_rdRespRdy_w.dump_VCD_defs(num);
  num = INST_a4ls_wrAddrVal_w.dump_VCD_defs(num);
  num = INST_a4ls_wrAddr_w.dump_VCD_defs(num);
  num = INST_a4ls_wrDataVal_w.dump_VCD_defs(num);
  num = INST_a4ls_wrData_w.dump_VCD_defs(num);
  num = INST_a4ls_wrProt_w.dump_VCD_defs(num);
  num = INST_a4ls_wrRespRdy_w.dump_VCD_defs(num);
  num = INST_a4ls_wrStrb_w.dump_VCD_defs(num);
  num = INST_b18.dump_VCD_defs(num);
  num = INST_b19.dump_VCD_defs(num);
  num = INST_b1A.dump_VCD_defs(num);
  num = INST_b1B.dump_VCD_defs(num);
  num = INST_lastReadAddr.dump_VCD_defs(num);
  num = INST_lastWriteAddr.dump_VCD_defs(num);
  num = INST_r0.dump_VCD_defs(num);
  num = INST_r4.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkA4LS::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkA4LS &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkA4LS::vcd_defs(tVCDDumpType dt, MOD_mkA4LS &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 34u);
    vcd_write_x(sim_hdl, num++, 34u);
    vcd_write_x(sim_hdl, num++, 34u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_ARESETN) != PORT_ARESETN)
      {
	vcd_write_val(sim_hdl, num, PORT_ARESETN, 1u);
	backing.PORT_ARESETN = PORT_ARESETN;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq) != DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq = DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq) != DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq = DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both) != DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both = DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr) != DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr = DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr) != DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr = DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq) != DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq = DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq) != DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq = DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq) != DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq = DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both) != DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both = DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr) != DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr = DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr) != DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr = DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_cfrd) != DEF_CAN_FIRE_RL_a4l_cfrd)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_cfrd, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_cfrd = DEF_CAN_FIRE_RL_a4l_cfrd;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4l_cfwr) != DEF_CAN_FIRE_RL_a4l_cfwr)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4l_cfwr, 1u);
	backing.DEF_CAN_FIRE_RL_a4l_cfwr = DEF_CAN_FIRE_RL_a4l_cfwr;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_a4ls_doAlways) != DEF_CAN_FIRE_RL_a4ls_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_a4ls_doAlways, 1u);
	backing.DEF_CAN_FIRE_RL_a4ls_doAlways = DEF_CAN_FIRE_RL_a4ls_doAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mARADDR) != DEF_CAN_FIRE_mARADDR)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mARADDR, 1u);
	backing.DEF_CAN_FIRE_mARADDR = DEF_CAN_FIRE_mARADDR;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mARPROT) != DEF_CAN_FIRE_mARPROT)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mARPROT, 1u);
	backing.DEF_CAN_FIRE_mARPROT = DEF_CAN_FIRE_mARPROT;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mARVALID) != DEF_CAN_FIRE_mARVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mARVALID, 1u);
	backing.DEF_CAN_FIRE_mARVALID = DEF_CAN_FIRE_mARVALID;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mAWADDR) != DEF_CAN_FIRE_mAWADDR)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mAWADDR, 1u);
	backing.DEF_CAN_FIRE_mAWADDR = DEF_CAN_FIRE_mAWADDR;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mAWPROT) != DEF_CAN_FIRE_mAWPROT)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mAWPROT, 1u);
	backing.DEF_CAN_FIRE_mAWPROT = DEF_CAN_FIRE_mAWPROT;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mAWVALID) != DEF_CAN_FIRE_mAWVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mAWVALID, 1u);
	backing.DEF_CAN_FIRE_mAWVALID = DEF_CAN_FIRE_mAWVALID;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mBREADY) != DEF_CAN_FIRE_mBREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mBREADY, 1u);
	backing.DEF_CAN_FIRE_mBREADY = DEF_CAN_FIRE_mBREADY;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mRREADY) != DEF_CAN_FIRE_mRREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mRREADY, 1u);
	backing.DEF_CAN_FIRE_mRREADY = DEF_CAN_FIRE_mRREADY;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mWDATA) != DEF_CAN_FIRE_mWDATA)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mWDATA, 1u);
	backing.DEF_CAN_FIRE_mWDATA = DEF_CAN_FIRE_mWDATA;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mWSTRB) != DEF_CAN_FIRE_mWSTRB)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mWSTRB, 1u);
	backing.DEF_CAN_FIRE_mWSTRB = DEF_CAN_FIRE_mWSTRB;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_mWVALID) != DEF_CAN_FIRE_mWVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_mWVALID, 1u);
	backing.DEF_CAN_FIRE_mWVALID = DEF_CAN_FIRE_mWVALID;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sARREADY) != DEF_CAN_FIRE_sARREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sARREADY, 1u);
	backing.DEF_CAN_FIRE_sARREADY = DEF_CAN_FIRE_sARREADY;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sAWREADY) != DEF_CAN_FIRE_sAWREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sAWREADY, 1u);
	backing.DEF_CAN_FIRE_sAWREADY = DEF_CAN_FIRE_sAWREADY;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sBRESP) != DEF_CAN_FIRE_sBRESP)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sBRESP, 1u);
	backing.DEF_CAN_FIRE_sBRESP = DEF_CAN_FIRE_sBRESP;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sBVALID) != DEF_CAN_FIRE_sBVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sBVALID, 1u);
	backing.DEF_CAN_FIRE_sBVALID = DEF_CAN_FIRE_sBVALID;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sRDATA) != DEF_CAN_FIRE_sRDATA)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sRDATA, 1u);
	backing.DEF_CAN_FIRE_sRDATA = DEF_CAN_FIRE_sRDATA;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sRRESP) != DEF_CAN_FIRE_sRRESP)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sRRESP, 1u);
	backing.DEF_CAN_FIRE_sRRESP = DEF_CAN_FIRE_sRRESP;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sRVALID) != DEF_CAN_FIRE_sRVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sRVALID, 1u);
	backing.DEF_CAN_FIRE_sRVALID = DEF_CAN_FIRE_sRVALID;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sWREADY) != DEF_CAN_FIRE_sWREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sWREADY, 1u);
	backing.DEF_CAN_FIRE_sWREADY = DEF_CAN_FIRE_sWREADY;
      }
      ++num;
      if ((backing.DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65) != DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65, 1u);
	backing.DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65 = DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65;
      }
      ++num;
      if ((backing.DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32) != DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32, 1u);
	backing.DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32 = DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq) != DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq = DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq) != DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq = DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both) != DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both = DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr) != DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr = DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr) != DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr = DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq) != DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq = DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq) != DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq = DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq) != DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq = DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both) != DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both = DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr) != DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr = DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr) != DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr = DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_cfrd) != DEF_WILL_FIRE_RL_a4l_cfrd)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_cfrd, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_cfrd = DEF_WILL_FIRE_RL_a4l_cfrd;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4l_cfwr) != DEF_WILL_FIRE_RL_a4l_cfwr)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4l_cfwr, 1u);
	backing.DEF_WILL_FIRE_RL_a4l_cfwr = DEF_WILL_FIRE_RL_a4l_cfwr;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_a4ls_doAlways) != DEF_WILL_FIRE_RL_a4ls_doAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_a4ls_doAlways, 1u);
	backing.DEF_WILL_FIRE_RL_a4ls_doAlways = DEF_WILL_FIRE_RL_a4ls_doAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mARADDR) != DEF_WILL_FIRE_mARADDR)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mARADDR, 1u);
	backing.DEF_WILL_FIRE_mARADDR = DEF_WILL_FIRE_mARADDR;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mARPROT) != DEF_WILL_FIRE_mARPROT)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mARPROT, 1u);
	backing.DEF_WILL_FIRE_mARPROT = DEF_WILL_FIRE_mARPROT;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mARVALID) != DEF_WILL_FIRE_mARVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mARVALID, 1u);
	backing.DEF_WILL_FIRE_mARVALID = DEF_WILL_FIRE_mARVALID;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mAWADDR) != DEF_WILL_FIRE_mAWADDR)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mAWADDR, 1u);
	backing.DEF_WILL_FIRE_mAWADDR = DEF_WILL_FIRE_mAWADDR;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mAWPROT) != DEF_WILL_FIRE_mAWPROT)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mAWPROT, 1u);
	backing.DEF_WILL_FIRE_mAWPROT = DEF_WILL_FIRE_mAWPROT;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mAWVALID) != DEF_WILL_FIRE_mAWVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mAWVALID, 1u);
	backing.DEF_WILL_FIRE_mAWVALID = DEF_WILL_FIRE_mAWVALID;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mBREADY) != DEF_WILL_FIRE_mBREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mBREADY, 1u);
	backing.DEF_WILL_FIRE_mBREADY = DEF_WILL_FIRE_mBREADY;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mRREADY) != DEF_WILL_FIRE_mRREADY)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mRREADY, 1u);
	backing.DEF_WILL_FIRE_mRREADY = DEF_WILL_FIRE_mRREADY;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mWDATA) != DEF_WILL_FIRE_mWDATA)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mWDATA, 1u);
	backing.DEF_WILL_FIRE_mWDATA = DEF_WILL_FIRE_mWDATA;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mWSTRB) != DEF_WILL_FIRE_mWSTRB)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mWSTRB, 1u);
	backing.DEF_WILL_FIRE_mWSTRB = DEF_WILL_FIRE_mWSTRB;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_mWVALID) != DEF_WILL_FIRE_mWVALID)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_mWVALID, 1u);
	backing.DEF_WILL_FIRE_mWVALID = DEF_WILL_FIRE_mWVALID;
      }
      ++num;
      if ((backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54) != DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54, 1u);
	backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54 = DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54;
      }
      ++num;
      if ((backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56) != DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56, 1u);
	backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56 = DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56;
      }
      ++num;
      if ((backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60) != DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60, 2u);
	backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60 = DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60;
      }
      ++num;
      if ((backing.DEF_a4l_a4rdResp_fifof_q_0___d165) != DEF_a4l_a4rdResp_fifof_q_0___d165)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4rdResp_fifof_q_0___d165, 34u);
	backing.DEF_a4l_a4rdResp_fifof_q_0___d165 = DEF_a4l_a4rdResp_fifof_q_0___d165;
      }
      ++num;
      if ((backing.DEF_a4l_a4rdResp_fifof_q_1___d59) != DEF_a4l_a4rdResp_fifof_q_1___d59)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4rdResp_fifof_q_1___d59, 34u);
	backing.DEF_a4l_a4rdResp_fifof_q_1___d59 = DEF_a4l_a4rdResp_fifof_q_1___d59;
      }
      ++num;
      if ((backing.DEF_a4l_a4rdResp_fifof_x_wire_wget____d55) != DEF_a4l_a4rdResp_fifof_x_wire_wget____d55)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4rdResp_fifof_x_wire_wget____d55, 34u);
	backing.DEF_a4l_a4rdResp_fifof_x_wire_wget____d55 = DEF_a4l_a4rdResp_fifof_x_wire_wget____d55;
      }
      ++num;
      if ((backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21) != DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21, 1u);
	backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21 = DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21;
      }
      ++num;
      if ((backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23) != DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23, 1u);
	backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23 = DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23;
      }
      ++num;
      if ((backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27) != DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27, 2u);
	backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27 = DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27;
      }
      ++num;
      if ((backing.DEF_a4l_a4wrResp_fifof_q_1__h1185) != DEF_a4l_a4wrResp_fifof_q_1__h1185)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4wrResp_fifof_q_1__h1185, 2u);
	backing.DEF_a4l_a4wrResp_fifof_q_1__h1185 = DEF_a4l_a4wrResp_fifof_q_1__h1185;
      }
      ++num;
      if ((backing.DEF_a4l_a4wrResp_fifof_x_wire_wget____d22) != DEF_a4l_a4wrResp_fifof_x_wire_wget____d22)
      {
	vcd_write_val(sim_hdl, num, DEF_a4l_a4wrResp_fifof_x_wire_wget____d22, 2u);
	backing.DEF_a4l_a4wrResp_fifof_x_wire_wget____d22 = DEF_a4l_a4wrResp_fifof_x_wire_wget____d22;
      }
      ++num;
      if ((backing.DEF_v__h4318) != DEF_v__h4318)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4318, 64u);
	backing.DEF_v__h4318 = DEF_v__h4318;
      }
      ++num;
      if ((backing.DEF_v__h4584) != DEF_v__h4584)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4584, 64u);
	backing.DEF_v__h4584 = DEF_v__h4584;
      }
      ++num;
      if ((backing.DEF_v__h4616) != DEF_v__h4616)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h4616, 64u);
	backing.DEF_v__h4616 = DEF_v__h4616;
      }
      ++num;
      if ((backing.DEF_x__h1082) != DEF_x__h1082)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1082, 2u);
	backing.DEF_x__h1082 = DEF_x__h1082;
      }
      ++num;
      if ((backing.DEF_x__h2424) != DEF_x__h2424)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2424, 2u);
	backing.DEF_x__h2424 = DEF_x__h2424;
      }
      ++num;
      if ((backing.PORT_ARADDR) != PORT_ARADDR)
      {
	vcd_write_val(sim_hdl, num, PORT_ARADDR, 32u);
	backing.PORT_ARADDR = PORT_ARADDR;
      }
      ++num;
      if ((backing.PORT_ARPROT) != PORT_ARPROT)
      {
	vcd_write_val(sim_hdl, num, PORT_ARPROT, 3u);
	backing.PORT_ARPROT = PORT_ARPROT;
      }
      ++num;
      if ((backing.PORT_ARREADY) != PORT_ARREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_ARREADY, 1u);
	backing.PORT_ARREADY = PORT_ARREADY;
      }
      ++num;
      if ((backing.PORT_ARVALID) != PORT_ARVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_ARVALID, 1u);
	backing.PORT_ARVALID = PORT_ARVALID;
      }
      ++num;
      if ((backing.PORT_AWADDR) != PORT_AWADDR)
      {
	vcd_write_val(sim_hdl, num, PORT_AWADDR, 32u);
	backing.PORT_AWADDR = PORT_AWADDR;
      }
      ++num;
      if ((backing.PORT_AWPROT) != PORT_AWPROT)
      {
	vcd_write_val(sim_hdl, num, PORT_AWPROT, 3u);
	backing.PORT_AWPROT = PORT_AWPROT;
      }
      ++num;
      if ((backing.PORT_AWREADY) != PORT_AWREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_AWREADY, 1u);
	backing.PORT_AWREADY = PORT_AWREADY;
      }
      ++num;
      if ((backing.PORT_AWVALID) != PORT_AWVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_AWVALID, 1u);
	backing.PORT_AWVALID = PORT_AWVALID;
      }
      ++num;
      if ((backing.PORT_BREADY) != PORT_BREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_BREADY, 1u);
	backing.PORT_BREADY = PORT_BREADY;
      }
      ++num;
      if ((backing.PORT_BRESP) != PORT_BRESP)
      {
	vcd_write_val(sim_hdl, num, PORT_BRESP, 2u);
	backing.PORT_BRESP = PORT_BRESP;
      }
      ++num;
      if ((backing.PORT_BVALID) != PORT_BVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_BVALID, 1u);
	backing.PORT_BVALID = PORT_BVALID;
      }
      ++num;
      if ((backing.PORT_RDATA) != PORT_RDATA)
      {
	vcd_write_val(sim_hdl, num, PORT_RDATA, 32u);
	backing.PORT_RDATA = PORT_RDATA;
      }
      ++num;
      if ((backing.PORT_RDY_mARADDR) != PORT_RDY_mARADDR)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mARADDR, 1u);
	backing.PORT_RDY_mARADDR = PORT_RDY_mARADDR;
      }
      ++num;
      if ((backing.PORT_RDY_mARPROT) != PORT_RDY_mARPROT)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mARPROT, 1u);
	backing.PORT_RDY_mARPROT = PORT_RDY_mARPROT;
      }
      ++num;
      if ((backing.PORT_RDY_mARVALID) != PORT_RDY_mARVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mARVALID, 1u);
	backing.PORT_RDY_mARVALID = PORT_RDY_mARVALID;
      }
      ++num;
      if ((backing.PORT_RDY_mAWADDR) != PORT_RDY_mAWADDR)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mAWADDR, 1u);
	backing.PORT_RDY_mAWADDR = PORT_RDY_mAWADDR;
      }
      ++num;
      if ((backing.PORT_RDY_mAWPROT) != PORT_RDY_mAWPROT)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mAWPROT, 1u);
	backing.PORT_RDY_mAWPROT = PORT_RDY_mAWPROT;
      }
      ++num;
      if ((backing.PORT_RDY_mAWVALID) != PORT_RDY_mAWVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mAWVALID, 1u);
	backing.PORT_RDY_mAWVALID = PORT_RDY_mAWVALID;
      }
      ++num;
      if ((backing.PORT_RDY_mBREADY) != PORT_RDY_mBREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mBREADY, 1u);
	backing.PORT_RDY_mBREADY = PORT_RDY_mBREADY;
      }
      ++num;
      if ((backing.PORT_RDY_mRREADY) != PORT_RDY_mRREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mRREADY, 1u);
	backing.PORT_RDY_mRREADY = PORT_RDY_mRREADY;
      }
      ++num;
      if ((backing.PORT_RDY_mWDATA) != PORT_RDY_mWDATA)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mWDATA, 1u);
	backing.PORT_RDY_mWDATA = PORT_RDY_mWDATA;
      }
      ++num;
      if ((backing.PORT_RDY_mWSTRB) != PORT_RDY_mWSTRB)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mWSTRB, 1u);
	backing.PORT_RDY_mWSTRB = PORT_RDY_mWSTRB;
      }
      ++num;
      if ((backing.PORT_RDY_mWVALID) != PORT_RDY_mWVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_mWVALID, 1u);
	backing.PORT_RDY_mWVALID = PORT_RDY_mWVALID;
      }
      ++num;
      if ((backing.PORT_RDY_sARREADY) != PORT_RDY_sARREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sARREADY, 1u);
	backing.PORT_RDY_sARREADY = PORT_RDY_sARREADY;
      }
      ++num;
      if ((backing.PORT_RDY_sAWREADY) != PORT_RDY_sAWREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sAWREADY, 1u);
	backing.PORT_RDY_sAWREADY = PORT_RDY_sAWREADY;
      }
      ++num;
      if ((backing.PORT_RDY_sBRESP) != PORT_RDY_sBRESP)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sBRESP, 1u);
	backing.PORT_RDY_sBRESP = PORT_RDY_sBRESP;
      }
      ++num;
      if ((backing.PORT_RDY_sBVALID) != PORT_RDY_sBVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sBVALID, 1u);
	backing.PORT_RDY_sBVALID = PORT_RDY_sBVALID;
      }
      ++num;
      if ((backing.PORT_RDY_sRDATA) != PORT_RDY_sRDATA)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sRDATA, 1u);
	backing.PORT_RDY_sRDATA = PORT_RDY_sRDATA;
      }
      ++num;
      if ((backing.PORT_RDY_sRRESP) != PORT_RDY_sRRESP)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sRRESP, 1u);
	backing.PORT_RDY_sRRESP = PORT_RDY_sRRESP;
      }
      ++num;
      if ((backing.PORT_RDY_sRVALID) != PORT_RDY_sRVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sRVALID, 1u);
	backing.PORT_RDY_sRVALID = PORT_RDY_sRVALID;
      }
      ++num;
      if ((backing.PORT_RDY_sWREADY) != PORT_RDY_sWREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sWREADY, 1u);
	backing.PORT_RDY_sWREADY = PORT_RDY_sWREADY;
      }
      ++num;
      if ((backing.PORT_RREADY) != PORT_RREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_RREADY, 1u);
	backing.PORT_RREADY = PORT_RREADY;
      }
      ++num;
      if ((backing.PORT_RRESP) != PORT_RRESP)
      {
	vcd_write_val(sim_hdl, num, PORT_RRESP, 2u);
	backing.PORT_RRESP = PORT_RRESP;
      }
      ++num;
      if ((backing.PORT_RVALID) != PORT_RVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_RVALID, 1u);
	backing.PORT_RVALID = PORT_RVALID;
      }
      ++num;
      if ((backing.PORT_WDATA) != PORT_WDATA)
      {
	vcd_write_val(sim_hdl, num, PORT_WDATA, 32u);
	backing.PORT_WDATA = PORT_WDATA;
      }
      ++num;
      if ((backing.PORT_WREADY) != PORT_WREADY)
      {
	vcd_write_val(sim_hdl, num, PORT_WREADY, 1u);
	backing.PORT_WREADY = PORT_WREADY;
      }
      ++num;
      if ((backing.PORT_WSTRB) != PORT_WSTRB)
      {
	vcd_write_val(sim_hdl, num, PORT_WSTRB, 4u);
	backing.PORT_WSTRB = PORT_WSTRB;
      }
      ++num;
      if ((backing.PORT_WVALID) != PORT_WVALID)
      {
	vcd_write_val(sim_hdl, num, PORT_WVALID, 1u);
	backing.PORT_WVALID = PORT_WVALID;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_ARESETN, 1u);
      backing.PORT_ARESETN = PORT_ARESETN;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq = DEF_CAN_FIRE_RL_a4l_a4rdAddr_do_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq = DEF_CAN_FIRE_RL_a4l_a4rdResp_do_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both = DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_both;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr = DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_decCtr;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr = DEF_CAN_FIRE_RL_a4l_a4rdResp_fifof_incCtr;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq = DEF_CAN_FIRE_RL_a4l_a4wrAddr_do_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq = DEF_CAN_FIRE_RL_a4l_a4wrData_do_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq = DEF_CAN_FIRE_RL_a4l_a4wrResp_do_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both = DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_both;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr = DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_decCtr;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr = DEF_CAN_FIRE_RL_a4l_a4wrResp_fifof_incCtr;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_cfrd, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_cfrd = DEF_CAN_FIRE_RL_a4l_cfrd;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4l_cfwr, 1u);
      backing.DEF_CAN_FIRE_RL_a4l_cfwr = DEF_CAN_FIRE_RL_a4l_cfwr;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_a4ls_doAlways, 1u);
      backing.DEF_CAN_FIRE_RL_a4ls_doAlways = DEF_CAN_FIRE_RL_a4ls_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mARADDR, 1u);
      backing.DEF_CAN_FIRE_mARADDR = DEF_CAN_FIRE_mARADDR;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mARPROT, 1u);
      backing.DEF_CAN_FIRE_mARPROT = DEF_CAN_FIRE_mARPROT;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mARVALID, 1u);
      backing.DEF_CAN_FIRE_mARVALID = DEF_CAN_FIRE_mARVALID;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mAWADDR, 1u);
      backing.DEF_CAN_FIRE_mAWADDR = DEF_CAN_FIRE_mAWADDR;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mAWPROT, 1u);
      backing.DEF_CAN_FIRE_mAWPROT = DEF_CAN_FIRE_mAWPROT;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mAWVALID, 1u);
      backing.DEF_CAN_FIRE_mAWVALID = DEF_CAN_FIRE_mAWVALID;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mBREADY, 1u);
      backing.DEF_CAN_FIRE_mBREADY = DEF_CAN_FIRE_mBREADY;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mRREADY, 1u);
      backing.DEF_CAN_FIRE_mRREADY = DEF_CAN_FIRE_mRREADY;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mWDATA, 1u);
      backing.DEF_CAN_FIRE_mWDATA = DEF_CAN_FIRE_mWDATA;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mWSTRB, 1u);
      backing.DEF_CAN_FIRE_mWSTRB = DEF_CAN_FIRE_mWSTRB;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_mWVALID, 1u);
      backing.DEF_CAN_FIRE_mWVALID = DEF_CAN_FIRE_mWVALID;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sARREADY, 1u);
      backing.DEF_CAN_FIRE_sARREADY = DEF_CAN_FIRE_sARREADY;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sAWREADY, 1u);
      backing.DEF_CAN_FIRE_sAWREADY = DEF_CAN_FIRE_sAWREADY;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sBRESP, 1u);
      backing.DEF_CAN_FIRE_sBRESP = DEF_CAN_FIRE_sBRESP;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sBVALID, 1u);
      backing.DEF_CAN_FIRE_sBVALID = DEF_CAN_FIRE_sBVALID;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sRDATA, 1u);
      backing.DEF_CAN_FIRE_sRDATA = DEF_CAN_FIRE_sRDATA;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sRRESP, 1u);
      backing.DEF_CAN_FIRE_sRRESP = DEF_CAN_FIRE_sRRESP;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sRVALID, 1u);
      backing.DEF_CAN_FIRE_sRVALID = DEF_CAN_FIRE_sRVALID;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sWREADY, 1u);
      backing.DEF_CAN_FIRE_sWREADY = DEF_CAN_FIRE_sWREADY;
      vcd_write_val(sim_hdl, num++, DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65, 1u);
      backing.DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65 = DEF_NOT_a4l_a4rdResp_fifof_cntr_r_2_EQ_2_4___d65;
      vcd_write_val(sim_hdl, num++, DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32, 1u);
      backing.DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32 = DEF_NOT_a4l_a4wrResp_fifof_cntr_r_9_EQ_2_1___d32;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq = DEF_WILL_FIRE_RL_a4l_a4rdAddr_do_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq = DEF_WILL_FIRE_RL_a4l_a4rdResp_do_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both = DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_both;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr = DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_decCtr;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr = DEF_WILL_FIRE_RL_a4l_a4rdResp_fifof_incCtr;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq = DEF_WILL_FIRE_RL_a4l_a4wrAddr_do_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq = DEF_WILL_FIRE_RL_a4l_a4wrData_do_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq = DEF_WILL_FIRE_RL_a4l_a4wrResp_do_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both = DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_both;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr = DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_decCtr;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr = DEF_WILL_FIRE_RL_a4l_a4wrResp_fifof_incCtr;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_cfrd, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_cfrd = DEF_WILL_FIRE_RL_a4l_cfrd;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4l_cfwr, 1u);
      backing.DEF_WILL_FIRE_RL_a4l_cfwr = DEF_WILL_FIRE_RL_a4l_cfwr;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_a4ls_doAlways, 1u);
      backing.DEF_WILL_FIRE_RL_a4ls_doAlways = DEF_WILL_FIRE_RL_a4ls_doAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mARADDR, 1u);
      backing.DEF_WILL_FIRE_mARADDR = DEF_WILL_FIRE_mARADDR;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mARPROT, 1u);
      backing.DEF_WILL_FIRE_mARPROT = DEF_WILL_FIRE_mARPROT;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mARVALID, 1u);
      backing.DEF_WILL_FIRE_mARVALID = DEF_WILL_FIRE_mARVALID;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mAWADDR, 1u);
      backing.DEF_WILL_FIRE_mAWADDR = DEF_WILL_FIRE_mAWADDR;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mAWPROT, 1u);
      backing.DEF_WILL_FIRE_mAWPROT = DEF_WILL_FIRE_mAWPROT;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mAWVALID, 1u);
      backing.DEF_WILL_FIRE_mAWVALID = DEF_WILL_FIRE_mAWVALID;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mBREADY, 1u);
      backing.DEF_WILL_FIRE_mBREADY = DEF_WILL_FIRE_mBREADY;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mRREADY, 1u);
      backing.DEF_WILL_FIRE_mRREADY = DEF_WILL_FIRE_mRREADY;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mWDATA, 1u);
      backing.DEF_WILL_FIRE_mWDATA = DEF_WILL_FIRE_mWDATA;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mWSTRB, 1u);
      backing.DEF_WILL_FIRE_mWSTRB = DEF_WILL_FIRE_mWSTRB;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_mWVALID, 1u);
      backing.DEF_WILL_FIRE_mWVALID = DEF_WILL_FIRE_mWVALID;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54, 1u);
      backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54 = DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_0___d54;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56, 1u);
      backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56 = DEF_a4l_a4rdResp_fifof_cntr_r_2_EQ_1___d56;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60, 2u);
      backing.DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60 = DEF_a4l_a4rdResp_fifof_cntr_r_2_MINUS_1___d60;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4rdResp_fifof_q_0___d165, 34u);
      backing.DEF_a4l_a4rdResp_fifof_q_0___d165 = DEF_a4l_a4rdResp_fifof_q_0___d165;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4rdResp_fifof_q_1___d59, 34u);
      backing.DEF_a4l_a4rdResp_fifof_q_1___d59 = DEF_a4l_a4rdResp_fifof_q_1___d59;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4rdResp_fifof_x_wire_wget____d55, 34u);
      backing.DEF_a4l_a4rdResp_fifof_x_wire_wget____d55 = DEF_a4l_a4rdResp_fifof_x_wire_wget____d55;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21, 1u);
      backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21 = DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_0___d21;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23, 1u);
      backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23 = DEF_a4l_a4wrResp_fifof_cntr_r_9_EQ_1___d23;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27, 2u);
      backing.DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27 = DEF_a4l_a4wrResp_fifof_cntr_r_9_MINUS_1___d27;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4wrResp_fifof_q_1__h1185, 2u);
      backing.DEF_a4l_a4wrResp_fifof_q_1__h1185 = DEF_a4l_a4wrResp_fifof_q_1__h1185;
      vcd_write_val(sim_hdl, num++, DEF_a4l_a4wrResp_fifof_x_wire_wget____d22, 2u);
      backing.DEF_a4l_a4wrResp_fifof_x_wire_wget____d22 = DEF_a4l_a4wrResp_fifof_x_wire_wget____d22;
      vcd_write_val(sim_hdl, num++, DEF_v__h4318, 64u);
      backing.DEF_v__h4318 = DEF_v__h4318;
      vcd_write_val(sim_hdl, num++, DEF_v__h4584, 64u);
      backing.DEF_v__h4584 = DEF_v__h4584;
      vcd_write_val(sim_hdl, num++, DEF_v__h4616, 64u);
      backing.DEF_v__h4616 = DEF_v__h4616;
      vcd_write_val(sim_hdl, num++, DEF_x__h1082, 2u);
      backing.DEF_x__h1082 = DEF_x__h1082;
      vcd_write_val(sim_hdl, num++, DEF_x__h2424, 2u);
      backing.DEF_x__h2424 = DEF_x__h2424;
      vcd_write_val(sim_hdl, num++, PORT_ARADDR, 32u);
      backing.PORT_ARADDR = PORT_ARADDR;
      vcd_write_val(sim_hdl, num++, PORT_ARPROT, 3u);
      backing.PORT_ARPROT = PORT_ARPROT;
      vcd_write_val(sim_hdl, num++, PORT_ARREADY, 1u);
      backing.PORT_ARREADY = PORT_ARREADY;
      vcd_write_val(sim_hdl, num++, PORT_ARVALID, 1u);
      backing.PORT_ARVALID = PORT_ARVALID;
      vcd_write_val(sim_hdl, num++, PORT_AWADDR, 32u);
      backing.PORT_AWADDR = PORT_AWADDR;
      vcd_write_val(sim_hdl, num++, PORT_AWPROT, 3u);
      backing.PORT_AWPROT = PORT_AWPROT;
      vcd_write_val(sim_hdl, num++, PORT_AWREADY, 1u);
      backing.PORT_AWREADY = PORT_AWREADY;
      vcd_write_val(sim_hdl, num++, PORT_AWVALID, 1u);
      backing.PORT_AWVALID = PORT_AWVALID;
      vcd_write_val(sim_hdl, num++, PORT_BREADY, 1u);
      backing.PORT_BREADY = PORT_BREADY;
      vcd_write_val(sim_hdl, num++, PORT_BRESP, 2u);
      backing.PORT_BRESP = PORT_BRESP;
      vcd_write_val(sim_hdl, num++, PORT_BVALID, 1u);
      backing.PORT_BVALID = PORT_BVALID;
      vcd_write_val(sim_hdl, num++, PORT_RDATA, 32u);
      backing.PORT_RDATA = PORT_RDATA;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mARADDR, 1u);
      backing.PORT_RDY_mARADDR = PORT_RDY_mARADDR;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mARPROT, 1u);
      backing.PORT_RDY_mARPROT = PORT_RDY_mARPROT;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mARVALID, 1u);
      backing.PORT_RDY_mARVALID = PORT_RDY_mARVALID;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mAWADDR, 1u);
      backing.PORT_RDY_mAWADDR = PORT_RDY_mAWADDR;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mAWPROT, 1u);
      backing.PORT_RDY_mAWPROT = PORT_RDY_mAWPROT;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mAWVALID, 1u);
      backing.PORT_RDY_mAWVALID = PORT_RDY_mAWVALID;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mBREADY, 1u);
      backing.PORT_RDY_mBREADY = PORT_RDY_mBREADY;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mRREADY, 1u);
      backing.PORT_RDY_mRREADY = PORT_RDY_mRREADY;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mWDATA, 1u);
      backing.PORT_RDY_mWDATA = PORT_RDY_mWDATA;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mWSTRB, 1u);
      backing.PORT_RDY_mWSTRB = PORT_RDY_mWSTRB;
      vcd_write_val(sim_hdl, num++, PORT_RDY_mWVALID, 1u);
      backing.PORT_RDY_mWVALID = PORT_RDY_mWVALID;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sARREADY, 1u);
      backing.PORT_RDY_sARREADY = PORT_RDY_sARREADY;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sAWREADY, 1u);
      backing.PORT_RDY_sAWREADY = PORT_RDY_sAWREADY;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sBRESP, 1u);
      backing.PORT_RDY_sBRESP = PORT_RDY_sBRESP;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sBVALID, 1u);
      backing.PORT_RDY_sBVALID = PORT_RDY_sBVALID;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sRDATA, 1u);
      backing.PORT_RDY_sRDATA = PORT_RDY_sRDATA;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sRRESP, 1u);
      backing.PORT_RDY_sRRESP = PORT_RDY_sRRESP;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sRVALID, 1u);
      backing.PORT_RDY_sRVALID = PORT_RDY_sRVALID;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sWREADY, 1u);
      backing.PORT_RDY_sWREADY = PORT_RDY_sWREADY;
      vcd_write_val(sim_hdl, num++, PORT_RREADY, 1u);
      backing.PORT_RREADY = PORT_RREADY;
      vcd_write_val(sim_hdl, num++, PORT_RRESP, 2u);
      backing.PORT_RRESP = PORT_RRESP;
      vcd_write_val(sim_hdl, num++, PORT_RVALID, 1u);
      backing.PORT_RVALID = PORT_RVALID;
      vcd_write_val(sim_hdl, num++, PORT_WDATA, 32u);
      backing.PORT_WDATA = PORT_WDATA;
      vcd_write_val(sim_hdl, num++, PORT_WREADY, 1u);
      backing.PORT_WREADY = PORT_WREADY;
      vcd_write_val(sim_hdl, num++, PORT_WSTRB, 4u);
      backing.PORT_WSTRB = PORT_WSTRB;
      vcd_write_val(sim_hdl, num++, PORT_WVALID, 1u);
      backing.PORT_WVALID = PORT_WVALID;
    }
}

void MOD_mkA4LS::vcd_prims(tVCDDumpType dt, MOD_mkA4LS &backing)
{
  INST_a4l_a4rdAddr_data_wire.dump_VCD(dt, backing.INST_a4l_a4rdAddr_data_wire);
  INST_a4l_a4rdAddr_enq_enq.dump_VCD(dt, backing.INST_a4l_a4rdAddr_enq_enq);
  INST_a4l_a4rdAddr_enq_valid.dump_VCD(dt, backing.INST_a4l_a4rdAddr_enq_valid);
  INST_a4l_a4rdAddr_fifof.dump_VCD(dt, backing.INST_a4l_a4rdAddr_fifof);
  INST_a4l_a4rdResp_deq_deq.dump_VCD(dt, backing.INST_a4l_a4rdResp_deq_deq);
  INST_a4l_a4rdResp_deq_ready.dump_VCD(dt, backing.INST_a4l_a4rdResp_deq_ready);
  INST_a4l_a4rdResp_fifof_cntr_r.dump_VCD(dt, backing.INST_a4l_a4rdResp_fifof_cntr_r);
  INST_a4l_a4rdResp_fifof_dequeueing.dump_VCD(dt, backing.INST_a4l_a4rdResp_fifof_dequeueing);
  INST_a4l_a4rdResp_fifof_enqueueing.dump_VCD(dt, backing.INST_a4l_a4rdResp_fifof_enqueueing);
  INST_a4l_a4rdResp_fifof_q_0.dump_VCD(dt, backing.INST_a4l_a4rdResp_fifof_q_0);
  INST_a4l_a4rdResp_fifof_q_1.dump_VCD(dt, backing.INST_a4l_a4rdResp_fifof_q_1);
  INST_a4l_a4rdResp_fifof_x_wire.dump_VCD(dt, backing.INST_a4l_a4rdResp_fifof_x_wire);
  INST_a4l_a4wrAddr_data_wire.dump_VCD(dt, backing.INST_a4l_a4wrAddr_data_wire);
  INST_a4l_a4wrAddr_enq_enq.dump_VCD(dt, backing.INST_a4l_a4wrAddr_enq_enq);
  INST_a4l_a4wrAddr_enq_valid.dump_VCD(dt, backing.INST_a4l_a4wrAddr_enq_valid);
  INST_a4l_a4wrAddr_fifof.dump_VCD(dt, backing.INST_a4l_a4wrAddr_fifof);
  INST_a4l_a4wrData_data_wire.dump_VCD(dt, backing.INST_a4l_a4wrData_data_wire);
  INST_a4l_a4wrData_enq_enq.dump_VCD(dt, backing.INST_a4l_a4wrData_enq_enq);
  INST_a4l_a4wrData_enq_valid.dump_VCD(dt, backing.INST_a4l_a4wrData_enq_valid);
  INST_a4l_a4wrData_fifof.dump_VCD(dt, backing.INST_a4l_a4wrData_fifof);
  INST_a4l_a4wrResp_deq_deq.dump_VCD(dt, backing.INST_a4l_a4wrResp_deq_deq);
  INST_a4l_a4wrResp_deq_ready.dump_VCD(dt, backing.INST_a4l_a4wrResp_deq_ready);
  INST_a4l_a4wrResp_fifof_cntr_r.dump_VCD(dt, backing.INST_a4l_a4wrResp_fifof_cntr_r);
  INST_a4l_a4wrResp_fifof_dequeueing.dump_VCD(dt, backing.INST_a4l_a4wrResp_fifof_dequeueing);
  INST_a4l_a4wrResp_fifof_enqueueing.dump_VCD(dt, backing.INST_a4l_a4wrResp_fifof_enqueueing);
  INST_a4l_a4wrResp_fifof_q_0.dump_VCD(dt, backing.INST_a4l_a4wrResp_fifof_q_0);
  INST_a4l_a4wrResp_fifof_q_1.dump_VCD(dt, backing.INST_a4l_a4wrResp_fifof_q_1);
  INST_a4l_a4wrResp_fifof_x_wire.dump_VCD(dt, backing.INST_a4l_a4wrResp_fifof_x_wire);
  INST_a4ls_rdAddrVal_w.dump_VCD(dt, backing.INST_a4ls_rdAddrVal_w);
  INST_a4ls_rdAddr_w.dump_VCD(dt, backing.INST_a4ls_rdAddr_w);
  INST_a4ls_rdProt_w.dump_VCD(dt, backing.INST_a4ls_rdProt_w);
  INST_a4ls_rdRespRdy_w.dump_VCD(dt, backing.INST_a4ls_rdRespRdy_w);
  INST_a4ls_wrAddrVal_w.dump_VCD(dt, backing.INST_a4ls_wrAddrVal_w);
  INST_a4ls_wrAddr_w.dump_VCD(dt, backing.INST_a4ls_wrAddr_w);
  INST_a4ls_wrDataVal_w.dump_VCD(dt, backing.INST_a4ls_wrDataVal_w);
  INST_a4ls_wrData_w.dump_VCD(dt, backing.INST_a4ls_wrData_w);
  INST_a4ls_wrProt_w.dump_VCD(dt, backing.INST_a4ls_wrProt_w);
  INST_a4ls_wrRespRdy_w.dump_VCD(dt, backing.INST_a4ls_wrRespRdy_w);
  INST_a4ls_wrStrb_w.dump_VCD(dt, backing.INST_a4ls_wrStrb_w);
  INST_b18.dump_VCD(dt, backing.INST_b18);
  INST_b19.dump_VCD(dt, backing.INST_b19);
  INST_b1A.dump_VCD(dt, backing.INST_b1A);
  INST_b1B.dump_VCD(dt, backing.INST_b1B);
  INST_lastReadAddr.dump_VCD(dt, backing.INST_lastReadAddr);
  INST_lastWriteAddr.dump_VCD(dt, backing.INST_lastWriteAddr);
  INST_r0.dump_VCD(dt, backing.INST_r0);
  INST_r4.dump_VCD(dt, backing.INST_r4);
}
